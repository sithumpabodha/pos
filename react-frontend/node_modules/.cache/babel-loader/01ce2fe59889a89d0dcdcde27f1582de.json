{"ast":null,"code":"import React,{useState}from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import moment from'moment';import MasterLayout from'../MasterLayout';import ReactDataTable from'../../shared/table/ReactDataTable';import{fetchUsers}from'../../store/action/userAction';import DeleteUser from'./DeleteUser';import TabTitle from'../../shared/tab-title/TabTitle';import{getAvatarName,getFormattedDate}from'../../shared/sharedMethod';import{getFormattedMessage}from'../../shared/sharedMethod';import{placeholderText}from'../../shared/sharedMethod';import ActionButton from'../../shared/action-buttons/ActionButton';import TopProgressBar from\"../../shared/components/loaders/TopProgressBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const User=props=>{const{users,fetchUsers,totalRecord,isLoading,allConfigData}=props;const[deleteModel,setDeleteModel]=useState(false);const[isDelete,setIsDelete]=useState(null);const onClickDeleteModel=function(){let isDelete=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setDeleteModel(!deleteModel);setIsDelete(isDelete);};const itemsValue=users.length>=0&&users.map(user=>({date:getFormattedDate(user.attributes.created_at,allConfigData&&allConfigData),time:moment(user.attributes.created_at).format('LT'),image:user.attributes.image,first_name:user.attributes.first_name,last_name:user.attributes.last_name,email:user.attributes.email,phone:user.attributes.phone,password:user.attributes.password,confirm_password:user.attributes.confirm_password,// role_id: user.attributes.role.map(ro => ro.name),\nrole_name:user.attributes.role.map(role=>role.name),id:user.id}));const onChange=filter=>{fetchUsers(filter,true);};const goToEdit=item=>{const id=item.id;window.location.href='#/app/users/edit/'+id;};const columns=[{name:getFormattedMessage('users.table.user.column.title'),selector:row=>row.first_name,sortField:'first_name',sortable:true,cell:row=>{const imageUrl=row.image?row.image:null;const lastName=row.last_name?row.last_name:'';return/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"me-2\",children:/*#__PURE__*/_jsx(Link,{to:`/app/users/detail/${row.id}`,children:imageUrl?/*#__PURE__*/_jsx(\"img\",{src:imageUrl,height:\"50\",width:\"50\",alt:\"User Image\",className:\"image image-circle image-mini\"}):/*#__PURE__*/_jsx(\"span\",{className:\"custom-user-avatar fs-5\",children:getAvatarName(row.first_name+' '+row.last_name)})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column\",children:[/*#__PURE__*/_jsx(Link,{to:`/app/users/detail/${row.id}`,className:\"text-decoration-none\",children:row.first_name+' '+lastName}),/*#__PURE__*/_jsx(\"span\",{children:row.email})]})]});}},{name:getFormattedMessage(\"user.input.role.label\"),selector:row=>row.role_name,sortField:'role_name',sortable:false},{name:getFormattedMessage('users.table.phone-number.column.title'),selector:row=>row.phone,sortField:'phone',sortable:true},// {\n//     name: getFormattedMessage('users.table.role.column.title'),\n//     selector: row => row.role_id,\n//     sortField: 'role_id',\n//     sortable: false,\n// },\n{name:getFormattedMessage('globally.react-table.column.created-date.label'),selector:row=>row.date,sortField:'created_at',sortable:true,cell:row=>{return/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-light-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-1\",children:row.time}),/*#__PURE__*/_jsx(\"div\",{children:row.date})]});}},{name:getFormattedMessage('react-data-table.action.column.label'),right:true,ignoreRowClick:true,allowOverflow:true,button:true,cell:row=>/*#__PURE__*/_jsx(ActionButton,{item:row,goToEditProduct:goToEdit,isEditMode:true,onClickDeleteModel:onClickDeleteModel})}];return/*#__PURE__*/_jsxs(MasterLayout,{children:[/*#__PURE__*/_jsx(TopProgressBar,{}),/*#__PURE__*/_jsx(TabTitle,{title:placeholderText('users.title')}),/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,items:itemsValue,onChange:onChange,ButtonValue:getFormattedMessage('user.create.title'),to:\"#/app/users/create\",totalRows:totalRecord,isLoading:isLoading}),/*#__PURE__*/_jsx(DeleteUser,{onClickDeleteModel:onClickDeleteModel,deleteModel:deleteModel,onDelete:isDelete})]});};const mapStateToProps=state=>{const{users,totalRecord,isLoading,allConfigData}=state;return{users,totalRecord,isLoading,allConfigData};};export default connect(mapStateToProps,{fetchUsers})(User);","map":{"version":3,"names":["React","useState","connect","Link","moment","MasterLayout","ReactDataTable","fetchUsers","DeleteUser","TabTitle","getAvatarName","getFormattedDate","getFormattedMessage","placeholderText","ActionButton","TopProgressBar","jsx","_jsx","jsxs","_jsxs","User","props","users","totalRecord","isLoading","allConfigData","deleteModel","setDeleteModel","isDelete","setIsDelete","onClickDeleteModel","arguments","length","undefined","itemsValue","map","user","date","attributes","created_at","time","format","image","first_name","last_name","email","phone","password","confirm_password","role_name","role","name","id","onChange","filter","goToEdit","item","window","location","href","columns","selector","row","sortField","sortable","cell","imageUrl","lastName","className","children","to","src","height","width","alt","right","ignoreRowClick","allowOverflow","button","goToEditProduct","isEditMode","title","items","ButtonValue","totalRows","onDelete","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/users/User.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport MasterLayout from '../MasterLayout';\nimport ReactDataTable from '../../shared/table/ReactDataTable';\nimport {fetchUsers} from '../../store/action/userAction';\nimport DeleteUser from './DeleteUser';\nimport TabTitle from '../../shared/tab-title/TabTitle';\nimport {getAvatarName, getFormattedDate} from '../../shared/sharedMethod';\nimport {getFormattedMessage} from '../../shared/sharedMethod';\nimport {placeholderText} from '../../shared/sharedMethod';\nimport ActionButton from '../../shared/action-buttons/ActionButton';\nimport TopProgressBar from \"../../shared/components/loaders/TopProgressBar\";\n\nconst User = (props) => {\n    const {users, fetchUsers, totalRecord, isLoading, allConfigData} = props;\n    const [deleteModel, setDeleteModel] = useState(false);\n    const [isDelete, setIsDelete] = useState(null);\n\n    const onClickDeleteModel = (isDelete = null) => {\n        setDeleteModel(!deleteModel);\n        setIsDelete(isDelete);\n    };\n\n    const itemsValue = users.length >= 0 && users.map(user => ({\n        date: getFormattedDate(user.attributes.created_at, allConfigData && allConfigData),\n        time: moment(user.attributes.created_at).format('LT'),\n        image: user.attributes.image,\n        first_name: user.attributes.first_name,\n        last_name: user.attributes.last_name,\n        email: user.attributes.email,\n        phone: user.attributes.phone,\n        password: user.attributes.password,\n        confirm_password: user.attributes.confirm_password,\n        // role_id: user.attributes.role.map(ro => ro.name),\n        role_name: user.attributes.role.map((role)=> role.name),\n        id: user.id\n    }));\n\n    const onChange = (filter) => {\n        fetchUsers(filter, true);\n    };\n\n    const goToEdit = (item) => {\n        const id = item.id;\n        window.location.href = '#/app/users/edit/' + id;\n    };\n\n    const columns = [\n        {\n            name: getFormattedMessage('users.table.user.column.title'),\n            selector: row => row.first_name,\n            sortField: 'first_name',\n            sortable: true,\n            cell: row => {\n                const imageUrl = row.image ? row.image : null;\n                const lastName = row.last_name ? row.last_name : '';\n                return <div className='d-flex align-items-center'>\n                    <div className='me-2'>\n                        <Link to={`/app/users/detail/${row.id}`}>\n                            {imageUrl ?\n                                <img src={imageUrl} height='50' width='50' alt='User Image'\n                                     className='image image-circle image-mini'/> :\n                                <span className='custom-user-avatar fs-5'>\n                                        {getAvatarName(row.first_name + ' ' + row.last_name)}\n                                </span>\n                            }\n                        </Link>\n                    </div>\n                    <div className='d-flex flex-column'>\n                        <Link to={`/app/users/detail/${row.id}`} className='text-decoration-none'>{row.first_name + ' ' + lastName}</Link>\n                        <span>{row.email}</span>\n                    </div>\n                </div>\n            }\n        },\n        {\n            name: getFormattedMessage(\"user.input.role.label\"),\n            selector: row => row.role_name,\n            sortField: 'role_name',\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage('users.table.phone-number.column.title'),\n            selector: row => row.phone,\n            sortField: 'phone',\n            sortable: true,\n        },\n        // {\n        //     name: getFormattedMessage('users.table.role.column.title'),\n        //     selector: row => row.role_id,\n        //     sortField: 'role_id',\n        //     sortable: false,\n        // },\n        {\n            name: getFormattedMessage('globally.react-table.column.created-date.label'),\n            selector: row => row.date,\n            sortField: 'created_at',\n            sortable: true,\n            cell: row => {\n                return (\n                    <span className='badge bg-light-info'>\n                        <div className='mb-1'>{row.time}</div>\n                        <div>{row.date}</div>\n                    </span>\n                )\n            }\n        },\n        {\n            name: getFormattedMessage('react-data-table.action.column.label'),\n            right: true,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n            cell: row => <ActionButton item={row} goToEditProduct={goToEdit} isEditMode={true}\n                                       onClickDeleteModel={onClickDeleteModel}/>\n        }\n    ];\n\n    return (\n        <MasterLayout>\n            <TopProgressBar />\n            <TabTitle title={placeholderText('users.title')}/>\n            <ReactDataTable columns={columns} items={itemsValue} onChange={onChange}\n                            ButtonValue={getFormattedMessage('user.create.title')}\n                            to='#/app/users/create' totalRows={totalRecord} isLoading={isLoading}/>\n            <DeleteUser onClickDeleteModel={onClickDeleteModel} deleteModel={deleteModel} onDelete={isDelete}/>\n        </MasterLayout>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    const {users, totalRecord, isLoading, allConfigData} = state;\n    return {users, totalRecord, isLoading, allConfigData}\n};\nexport default connect(mapStateToProps, {fetchUsers})(User);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}