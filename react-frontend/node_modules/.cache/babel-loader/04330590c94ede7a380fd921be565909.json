{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import MasterLayout from\"../../MasterLayout\";import TabTitle from\"../../../shared/tab-title/TabTitle\";import{currencySymbolHandling,getFormattedMessage,placeholderText}from\"../../../shared/sharedMethod\";import ReactDataTable from\"../../../shared/table/ReactDataTable\";import{fetchFrontSetting}from\"../../../store/action/frontSettingAction\";import{fetchSales}from\"../../../store/action/salesAction\";import{totalSaleReportExcel}from\"../../../store/action/totalSaleReportExcel\";import TopProgressBar from\"../../../shared/components/loaders/TopProgressBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SaleReport=props=>{const{isLoading,totalRecord,fetchFrontSetting,fetchSales,sales,frontSetting,dates,totalSaleReportExcel,allConfigData}=props;const[isWarehouseValue,setIsWarehouseValue]=useState(false);const currencySymbol=frontSetting&&frontSetting.value&&frontSetting.value.currency_symbol;useEffect(()=>{fetchFrontSetting();},[]);useEffect(()=>{if(isWarehouseValue===true){totalSaleReportExcel(dates,setIsWarehouseValue);}},[isWarehouseValue]);const itemsValue=currencySymbol&&sales.length>=0&&sales.map(sale=>({reference_code:sale.attributes.reference_code,customer_name:sale.attributes.customer_name,warehouse_name:sale.attributes.warehouse_name,status:sale.attributes.status,payment_status:sale.attributes.payment_status,grand_total:sale.attributes.grand_total,paid_amount:sale.attributes.paid_amount?sale.attributes.paid_amount:0.0.toFixed(2),currency:currencySymbol,id:sale.id}));const columns=[{name:getFormattedMessage(\"dashboard.recentSales.reference.label\"),sortField:\"reference_code\",sortable:false,cell:row=>{return/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-danger\",children:/*#__PURE__*/_jsx(\"span\",{children:row.reference_code})});}},{name:getFormattedMessage(\"customer.title\"),selector:row=>row.customer_name,sortField:\"customer_name\",sortable:false},{name:getFormattedMessage(\"purchase.select.status.label\"),sortField:\"status\",sortable:false,cell:row=>{return row.status===1&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-success\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.complated.label\")})})||row.status===2&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-primary\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.pending.label\")})})||row.status===3&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-warning\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.ordered.label\")})});}},{name:getFormattedMessage(\"purchase.grant-total.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.grand_total),sortField:\"grand_total\",sortable:true},{name:getFormattedMessage(\"dashboard.recentSales.paid.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.paid_amount),sortField:\"paid_amount\",sortable:true},{name:getFormattedMessage(\"dashboard.recentSales.paymentStatus.label\"),sortField:\"payment_status\",sortable:false,cell:row=>{return row.payment_status===1&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-success\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"payment-status.filter.paid.label\")})})||row.payment_status===2&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-danger\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"payment-status.filter.unpaid.label\")})})||row.payment_status===3&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-warning\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"payment-status.filter.partial.label\")})});}}];const onChange=filter=>{fetchSales(filter,true);};const onExcelClick=()=>{setIsWarehouseValue(true);};return/*#__PURE__*/_jsxs(MasterLayout,{children:[/*#__PURE__*/_jsx(TopProgressBar,{}),/*#__PURE__*/_jsx(TabTitle,{title:placeholderText(\"sale.reports.title\")}),/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,items:itemsValue,onChange:onChange,isLoading:isLoading,totalRows:totalRecord,isShowDateRangeField:true,isEXCEL:true,isShowFilterField:true,isStatus:true,isPaymentStatus:true,onExcelClick:onExcelClick})]});};const mapStateToProps=state=>{const{sales,frontSetting,isLoading,totalRecord,dates,allConfigData}=state;return{sales,frontSetting,isLoading,totalRecord,dates,allConfigData};};export default connect(mapStateToProps,{fetchFrontSetting,fetchSales,totalSaleReportExcel})(SaleReport);","map":{"version":3,"names":["React","useEffect","useState","connect","MasterLayout","TabTitle","currencySymbolHandling","getFormattedMessage","placeholderText","ReactDataTable","fetchFrontSetting","fetchSales","totalSaleReportExcel","TopProgressBar","jsx","_jsx","jsxs","_jsxs","SaleReport","props","isLoading","totalRecord","sales","frontSetting","dates","allConfigData","isWarehouseValue","setIsWarehouseValue","currencySymbol","value","currency_symbol","itemsValue","length","map","sale","reference_code","attributes","customer_name","warehouse_name","status","payment_status","grand_total","paid_amount","toFixed","currency","id","columns","name","sortField","sortable","cell","row","className","children","selector","onChange","filter","onExcelClick","title","items","totalRows","isShowDateRangeField","isEXCEL","isShowFilterField","isStatus","isPaymentStatus","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/report/saleReport/SaleReport.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport MasterLayout from \"../../MasterLayout\";\nimport TabTitle from \"../../../shared/tab-title/TabTitle\";\nimport {\n    currencySymbolHandling,\n    getFormattedMessage,\n    placeholderText,\n} from \"../../../shared/sharedMethod\";\nimport ReactDataTable from \"../../../shared/table/ReactDataTable\";\nimport { fetchFrontSetting } from \"../../../store/action/frontSettingAction\";\nimport { fetchSales } from \"../../../store/action/salesAction\";\nimport { totalSaleReportExcel } from \"../../../store/action/totalSaleReportExcel\";\nimport TopProgressBar from \"../../../shared/components/loaders/TopProgressBar\";\n\nconst SaleReport = (props) => {\n    const {\n        isLoading,\n        totalRecord,\n        fetchFrontSetting,\n        fetchSales,\n        sales,\n        frontSetting,\n        dates,\n        totalSaleReportExcel,\n        allConfigData,\n    } = props;\n    const [isWarehouseValue, setIsWarehouseValue] = useState(false);\n    const currencySymbol =\n        frontSetting &&\n        frontSetting.value &&\n        frontSetting.value.currency_symbol;\n\n    useEffect(() => {\n        fetchFrontSetting();\n    }, []);\n\n    useEffect(() => {\n        if (isWarehouseValue === true) {\n            totalSaleReportExcel(dates, setIsWarehouseValue);\n        }\n    }, [isWarehouseValue]);\n\n    const itemsValue =\n        currencySymbol &&\n        sales.length >= 0 &&\n        sales.map((sale) => ({\n            reference_code: sale.attributes.reference_code,\n            customer_name: sale.attributes.customer_name,\n            warehouse_name: sale.attributes.warehouse_name,\n            status: sale.attributes.status,\n            payment_status: sale.attributes.payment_status,\n            grand_total: sale.attributes.grand_total,\n            paid_amount: sale.attributes.paid_amount\n                ? sale.attributes.paid_amount\n                : (0.0).toFixed(2),\n            currency: currencySymbol,\n            id: sale.id,\n        }));\n\n    const columns = [\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.reference.label\"),\n            sortField: \"reference_code\",\n            sortable: false,\n            cell: (row) => {\n                return (\n                    <span className=\"badge bg-light-danger\">\n                        <span>{row.reference_code}</span>\n                    </span>\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"customer.title\"),\n            selector: (row) => row.customer_name,\n            sortField: \"customer_name\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"purchase.select.status.label\"),\n            sortField: \"status\",\n            sortable: false,\n            cell: (row) => {\n                return (\n                    (row.status === 1 && (\n                        <span className=\"badge bg-light-success\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.complated.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.status === 2 && (\n                        <span className=\"badge bg-light-primary\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.pending.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.status === 3 && (\n                        <span className=\"badge bg-light-warning\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.ordered.label\"\n                                )}\n                            </span>\n                        </span>\n                    ))\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"purchase.grant-total.label\"),\n            selector: (row) =>\n                currencySymbolHandling(\n                    allConfigData,\n                    row.currency,\n                    row.grand_total\n                ),\n            sortField: \"grand_total\",\n            sortable: true,\n        },\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.paid.label\"),\n            selector: (row) =>\n                currencySymbolHandling(\n                    allConfigData,\n                    row.currency,\n                    row.paid_amount\n                ),\n            sortField: \"paid_amount\",\n            sortable: true,\n        },\n        {\n            name: getFormattedMessage(\n                \"dashboard.recentSales.paymentStatus.label\"\n            ),\n            sortField: \"payment_status\",\n            sortable: false,\n            cell: (row) => {\n                return (\n                    (row.payment_status === 1 && (\n                        <span className=\"badge bg-light-success\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"payment-status.filter.paid.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.payment_status === 2 && (\n                        <span className=\"badge bg-light-danger\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"payment-status.filter.unpaid.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.payment_status === 3 && (\n                        <span className=\"badge bg-light-warning\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"payment-status.filter.partial.label\"\n                                )}\n                            </span>\n                        </span>\n                    ))\n                );\n            },\n        },\n    ];\n\n    const onChange = (filter) => {\n        fetchSales(filter, true);\n    };\n\n    const onExcelClick = () => {\n        setIsWarehouseValue(true);\n    };\n\n    return (\n        <MasterLayout>\n            <TopProgressBar />\n            <TabTitle title={placeholderText(\"sale.reports.title\")} />\n            <ReactDataTable\n                columns={columns}\n                items={itemsValue}\n                onChange={onChange}\n                isLoading={isLoading}\n                totalRows={totalRecord}\n                isShowDateRangeField\n                isEXCEL\n                isShowFilterField\n                isStatus\n                isPaymentStatus\n                onExcelClick={onExcelClick}\n            />\n        </MasterLayout>\n    );\n};\nconst mapStateToProps = (state) => {\n    const {\n        sales,\n        frontSetting,\n        isLoading,\n        totalRecord,\n        dates,\n        allConfigData,\n    } = state;\n    return {\n        sales,\n        frontSetting,\n        isLoading,\n        totalRecord,\n        dates,\n        allConfigData,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    fetchFrontSetting,\n    fetchSales,\n    totalSaleReportExcel,\n})(SaleReport);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}