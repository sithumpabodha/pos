{"ast":null,"code":"import apiConfig from'../../config/apiConfig';import{apiBaseURL,toastType,warehouseActionType}from'../../constants';import{addToast}from'./toastAction';export const fetchWarehouseReport=id=>async dispatch=>{await apiConfig.get(apiBaseURL.WAREHOUSE_REPORT+'?warehouse_id='+id).then(response=>{dispatch({type:warehouseActionType.FETCH_WAREHOUSE_REPORT,payload:response.data.data});}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","toastType","warehouseActionType","addToast","fetchWarehouseReport","id","dispatch","get","WAREHOUSE_REPORT","then","response","type","FETCH_WAREHOUSE_REPORT","payload","data","catch","_ref","text","message","ERROR"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/warehouseReportAction.js"],"sourcesContent":["import apiConfig from '../../config/apiConfig';\nimport {apiBaseURL, toastType, warehouseActionType} from '../../constants';\nimport {addToast} from './toastAction';\n\nexport const fetchWarehouseReport = (id) => async (dispatch) => {\n    await apiConfig.get(apiBaseURL.WAREHOUSE_REPORT + '?warehouse_id=' + id)\n        .then((response) => {\n            dispatch({type: warehouseActionType.FETCH_WAREHOUSE_REPORT, payload: response.data.data});\n        })\n        .catch(({response}) => {\n            dispatch(addToast(\n                {text: response.data.message, type: toastType.ERROR}));\n        });\n};\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,wBAAwB,CAC9C,OAAQC,UAAU,CAAEC,SAAS,CAAEC,mBAAmB,KAAO,iBAAiB,CAC1E,OAAQC,QAAQ,KAAO,eAAe,CAEtC,MAAO,MAAM,CAAAC,oBAAoB,CAAIC,EAAE,EAAK,KAAO,CAAAC,QAAQ,EAAK,CAC5D,KAAM,CAAAP,SAAS,CAACQ,GAAG,CAACP,UAAU,CAACQ,gBAAgB,CAAG,gBAAgB,CAAGH,EAAE,CAAC,CACnEI,IAAI,CAAEC,QAAQ,EAAK,CAChBJ,QAAQ,CAAC,CAACK,IAAI,CAAET,mBAAmB,CAACU,sBAAsB,CAAEC,OAAO,CAAEH,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,CAAC,CAC7F,CAAC,CAAC,CACDC,KAAK,CAACC,IAAA,EAAgB,IAAf,CAACN,QAAQ,CAAC,CAAAM,IAAA,CACdV,QAAQ,CAACH,QAAQ,CACb,CAACc,IAAI,CAAEP,QAAQ,CAACI,IAAI,CAACI,OAAO,CAAEP,IAAI,CAAEV,SAAS,CAACkB,KAAK,CAAC,CAAC,CAAC,CAC9D,CAAC,CAAC,CACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}