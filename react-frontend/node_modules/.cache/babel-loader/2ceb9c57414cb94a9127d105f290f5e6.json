{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,saleActionType,toastType}from\"../../constants\";import{addToast}from\"./toastAction\";import{addInToTotalRecord,removeFromTotalRecord,setTotalRecord}from\"./totalRecordAction\";import{setLoading}from\"./loadingAction\";import requestParam from\"../../shared/requestParam\";import{getFormattedMessage}from\"../../shared/sharedMethod\";import{callSaleApi}from\"./saleApiAction\";import{setSavingButton}from\"./saveButtonAction\";export const fetchSales=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}const admin=true;let url=apiBaseURL.SALES;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at||filter.customer_id)){url+=requestParam(filter,admin,null,null,url);}await apiConfig.get(url).then(response=>{dispatch({type:saleActionType.FETCH_SALES,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));dispatch(callSaleApi(false));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const fetchSale=function(saleId,singleSale){let isLoading=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}await apiConfig.get(apiBaseURL.SALES+\"/\"+saleId+\"/edit\",singleSale).then(response=>{dispatch({type:saleActionType.FETCH_SALE,payload:response.data.data});if(isLoading){dispatch(setLoading(false));}}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const addSale=(sale,navigate)=>async dispatch=>{dispatch(setSavingButton(true));await apiConfig.post(apiBaseURL.SALES,sale).then(response=>{dispatch({type:saleActionType.ADD_SALE,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"sale.success.create.message\")}));dispatch(addInToTotalRecord(1));navigate(\"/app/sales\");dispatch(setSavingButton(false));}).catch(_ref3=>{let{response}=_ref3;dispatch(setSavingButton(false));dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editSale=(saleId,sale,navigate)=>async dispatch=>{dispatch(setSavingButton(true));await apiConfig.patch(apiBaseURL.SALES+\"/\"+saleId,sale).then(response=>{dispatch(addToast({text:getFormattedMessage(\"sale.success.edit.message\")}));navigate(\"/app/sales\");dispatch({type:saleActionType.EDIT_SALE,payload:response.data.data});dispatch(setSavingButton(false));}).catch(_ref4=>{let{response}=_ref4;dispatch(setSavingButton(false));dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteSale=userId=>async dispatch=>{await apiConfig.delete(apiBaseURL.SALES+\"/\"+userId).then(()=>{dispatch(removeFromTotalRecord(1));dispatch({type:saleActionType.DELETE_SALE,payload:userId});dispatch(addToast({text:getFormattedMessage(\"sale.success.delete.message\")}));}).catch(_ref5=>{let{response}=_ref5;response&&dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","saleActionType","toastType","addToast","addInToTotalRecord","removeFromTotalRecord","setTotalRecord","setLoading","requestParam","getFormattedMessage","callSaleApi","setSavingButton","fetchSales","filter","arguments","length","undefined","isLoading","dispatch","admin","url","SALES","_","isEmpty","page","pageSize","search","order_By","created_at","customer_id","get","then","response","type","FETCH_SALES","payload","data","meta","total","catch","_ref","text","message","ERROR","fetchSale","saleId","singleSale","FETCH_SALE","_ref2","addSale","sale","navigate","post","ADD_SALE","_ref3","editSale","patch","EDIT_SALE","_ref4","deleteSale","userId","delete","DELETE_SALE","_ref5"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/salesAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport { apiBaseURL, saleActionType, toastType } from \"../../constants\";\nimport { addToast } from \"./toastAction\";\nimport {\n    addInToTotalRecord,\n    removeFromTotalRecord,\n    setTotalRecord,\n} from \"./totalRecordAction\";\nimport { setLoading } from \"./loadingAction\";\nimport requestParam from \"../../shared/requestParam\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\nimport { callSaleApi } from \"./saleApiAction\";\nimport { setSavingButton } from \"./saveButtonAction\";\n\nexport const fetchSales =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        const admin = true;\n        let url = apiBaseURL.SALES;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at ||\n                filter.customer_id)\n        ) {\n            url += requestParam(filter, admin, null, null, url);\n        }\n        await apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: saleActionType.FETCH_SALES,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                dispatch(callSaleApi(false));\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchSale =\n    (saleId, singleSale, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        await apiConfig\n            .get(apiBaseURL.SALES + \"/\" + saleId + \"/edit\", singleSale)\n            .then((response) => {\n                dispatch({\n                    type: saleActionType.FETCH_SALE,\n                    payload: response.data.data,\n                });\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const addSale = (sale, navigate) => async (dispatch) => {\n    dispatch(setSavingButton(true));\n    await apiConfig\n        .post(apiBaseURL.SALES, sale)\n        .then((response) => {\n            dispatch({\n                type: saleActionType.ADD_SALE,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"sale.success.create.message\"),\n                })\n            );\n            dispatch(addInToTotalRecord(1));\n            navigate(\"/app/sales\");\n            dispatch(setSavingButton(false));\n        })\n        .catch(({ response }) => {\n            dispatch(setSavingButton(false));\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editSale = (saleId, sale, navigate) => async (dispatch) => {\n    dispatch(setSavingButton(true));\n    await apiConfig\n        .patch(apiBaseURL.SALES + \"/\" + saleId, sale)\n        .then((response) => {\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"sale.success.edit.message\"),\n                })\n            );\n            navigate(\"/app/sales\");\n            dispatch({\n                type: saleActionType.EDIT_SALE,\n                payload: response.data.data,\n            });\n            dispatch(setSavingButton(false));\n        })\n        .catch(({ response }) => {\n            dispatch(setSavingButton(false));\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const deleteSale = (userId) => async (dispatch) => {\n    await apiConfig\n        .delete(apiBaseURL.SALES + \"/\" + userId)\n        .then(() => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({ type: saleActionType.DELETE_SALE, payload: userId });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"sale.success.delete.message\"),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            response &&\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}