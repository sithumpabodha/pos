{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import moment from\"moment\";import{connect}from\"react-redux\";import ReactDataTable from\"../../../shared/table/ReactDataTable\";import{currencySymbolHandling,getFormattedMessage}from\"../../../shared/sharedMethod\";import{fetchSales}from\"../../../store/action/salesAction\";import{fetchFrontSetting}from\"../../../store/action/frontSettingAction\";import{saleExcelAction}from\"../../../store/action/salesExcelAction\";import{jsx as _jsx}from\"react/jsx-runtime\";const SalesTab=props=>{const{isLoading,totalRecord,fetchSales,sales,frontSetting,fetchFrontSetting,warehouseValue,saleExcelAction,allConfigData}=props;const currencySymbol=frontSetting&&frontSetting.value&&frontSetting.value.currency_symbol;const[isWarehouseValue,setIsWarehouseValue]=useState(false);useEffect(()=>{fetchFrontSetting();},[warehouseValue]);const itemsValue=currencySymbol&&sales.length>=0&&sales.map(sale=>({time:moment(sale.attributes.created_at).format(\"LT\"),reference_code:sale.attributes.reference_code,customer_name:sale.attributes.customer_name,warehouse_name:sale.attributes.warehouse_name,status:sale.attributes.status,payment_status:sale.attributes.payment_status,grand_total:sale.attributes.grand_total,paid_amount:sale.attributes.paid_amount?sale.attributes.paid_amount:0.0.toFixed(2),id:sale.id,currency:currencySymbol}));useEffect(()=>{if(isWarehouseValue===true){saleExcelAction(warehouseValue.value,setIsWarehouseValue);}},[isWarehouseValue]);const columns=[{name:getFormattedMessage(\"dashboard.recentSales.reference.label\"),sortField:\"reference_code\",sortable:false,cell:row=>{return/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-danger\",children:/*#__PURE__*/_jsx(\"span\",{children:row.reference_code})});}},{name:getFormattedMessage(\"customer.title\"),selector:row=>row.customer_name,sortField:\"customer_name\",sortable:false},{name:getFormattedMessage(\"warehouse.title\"),selector:row=>row.warehouse_name,sortField:\"warehouse_name\",sortable:false},{name:getFormattedMessage(\"purchase.select.status.label\"),sortField:\"status\",sortable:false,cell:row=>{return row.status===1&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-success\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.complated.label\")})})||row.status===2&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-primary\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.pending.label\")})})||row.status===3&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-warning\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.ordered.label\")})});}},{name:getFormattedMessage(\"purchase.grant-total.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.grand_total),sortField:\"grand_total\",sortable:true},{name:getFormattedMessage(\"dashboard.recentSales.paid.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.paid_amount),sortField:\"paid_amount\",sortable:true},{name:getFormattedMessage(\"dashboard.recentSales.due.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,\"0.00\"),sortField:\"due\"// sortable: true,\n},{name:getFormattedMessage(\"dashboard.recentSales.paymentStatus.label\"),sortField:\"payment_status\",sortable:false,cell:row=>{return row.payment_status===1&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-success\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"payment-status.filter.paid.label\")})})||row.payment_status===2&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-danger\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"payment-status.filter.unpaid.label\")})})||row.payment_status===3&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-warning\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"payment-status.filter.partial.label\")})});}}];const onChange=filter=>{fetchSales(filter,true);};const onExcelClick=()=>{setIsWarehouseValue(true);};return/*#__PURE__*/_jsx(\"div\",{className:\"warehouse_sale_report_table\",children:/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,items:itemsValue,onChange:onChange,warehouseValue:warehouseValue,isLoading:isLoading,totalRows:totalRecord,isEXCEL:true,onExcelClick:onExcelClick,isPaymentStatus:true,isStatus:true,isShowFilterField:true})});};const mapStateToProps=state=>{const{isLoading,totalRecord,sales,frontSetting}=state;return{isLoading,totalRecord,sales,frontSetting};};export default connect(mapStateToProps,{fetchFrontSetting,fetchSales,saleExcelAction})(SalesTab);","map":{"version":3,"names":["React","useEffect","useState","moment","connect","ReactDataTable","currencySymbolHandling","getFormattedMessage","fetchSales","fetchFrontSetting","saleExcelAction","jsx","_jsx","SalesTab","props","isLoading","totalRecord","sales","frontSetting","warehouseValue","allConfigData","currencySymbol","value","currency_symbol","isWarehouseValue","setIsWarehouseValue","itemsValue","length","map","sale","time","attributes","created_at","format","reference_code","customer_name","warehouse_name","status","payment_status","grand_total","paid_amount","toFixed","id","currency","columns","name","sortField","sortable","cell","row","className","children","selector","onChange","filter","onExcelClick","items","totalRows","isEXCEL","isPaymentStatus","isStatus","isShowFilterField","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/report/warehouseReport/SalesTab.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport ReactDataTable from \"../../../shared/table/ReactDataTable\";\nimport {\n    currencySymbolHandling,\n    getFormattedMessage,\n} from \"../../../shared/sharedMethod\";\nimport { fetchSales } from \"../../../store/action/salesAction\";\nimport { fetchFrontSetting } from \"../../../store/action/frontSettingAction\";\nimport { saleExcelAction } from \"../../../store/action/salesExcelAction\";\n\nconst SalesTab = (props) => {\n    const {\n        isLoading,\n        totalRecord,\n        fetchSales,\n        sales,\n        frontSetting,\n        fetchFrontSetting,\n        warehouseValue,\n        saleExcelAction,\n        allConfigData,\n    } = props;\n    const currencySymbol =\n        frontSetting &&\n        frontSetting.value &&\n        frontSetting.value.currency_symbol;\n    const [isWarehouseValue, setIsWarehouseValue] = useState(false);\n\n    useEffect(() => {\n        fetchFrontSetting();\n    }, [warehouseValue]);\n\n    const itemsValue =\n        currencySymbol &&\n        sales.length >= 0 &&\n        sales.map((sale) => ({\n            time: moment(sale.attributes.created_at).format(\"LT\"),\n            reference_code: sale.attributes.reference_code,\n            customer_name: sale.attributes.customer_name,\n            warehouse_name: sale.attributes.warehouse_name,\n            status: sale.attributes.status,\n            payment_status: sale.attributes.payment_status,\n            grand_total: sale.attributes.grand_total,\n            paid_amount: sale.attributes.paid_amount\n                ? sale.attributes.paid_amount\n                : (0.0).toFixed(2),\n            id: sale.id,\n            currency: currencySymbol,\n        }));\n\n    useEffect(() => {\n        if (isWarehouseValue === true) {\n            saleExcelAction(warehouseValue.value, setIsWarehouseValue);\n        }\n    }, [isWarehouseValue]);\n\n    const columns = [\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.reference.label\"),\n            sortField: \"reference_code\",\n            sortable: false,\n            cell: (row) => {\n                return (\n                    <span className=\"badge bg-light-danger\">\n                        <span>{row.reference_code}</span>\n                    </span>\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"customer.title\"),\n            selector: (row) => row.customer_name,\n            sortField: \"customer_name\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"warehouse.title\"),\n            selector: (row) => row.warehouse_name,\n            sortField: \"warehouse_name\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"purchase.select.status.label\"),\n            sortField: \"status\",\n            sortable: false,\n            cell: (row) => {\n                return (\n                    (row.status === 1 && (\n                        <span className=\"badge bg-light-success\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.complated.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.status === 2 && (\n                        <span className=\"badge bg-light-primary\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.pending.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.status === 3 && (\n                        <span className=\"badge bg-light-warning\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.ordered.label\"\n                                )}\n                            </span>\n                        </span>\n                    ))\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"purchase.grant-total.label\"),\n            selector: (row) =>\n                currencySymbolHandling(\n                    allConfigData,\n                    row.currency,\n                    row.grand_total\n                ),\n            sortField: \"grand_total\",\n            sortable: true,\n        },\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.paid.label\"),\n            selector: (row) =>\n                currencySymbolHandling(\n                    allConfigData,\n                    row.currency,\n                    row.paid_amount\n                ),\n            sortField: \"paid_amount\",\n            sortable: true,\n        },\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.due.label\"),\n            selector: (row) =>\n                currencySymbolHandling(allConfigData, row.currency, \"0.00\"),\n            sortField: \"due\",\n            // sortable: true,\n        },\n        {\n            name: getFormattedMessage(\n                \"dashboard.recentSales.paymentStatus.label\"\n            ),\n            sortField: \"payment_status\",\n            sortable: false,\n            cell: (row) => {\n                return (\n                    (row.payment_status === 1 && (\n                        <span className=\"badge bg-light-success\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"payment-status.filter.paid.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.payment_status === 2 && (\n                        <span className=\"badge bg-light-danger\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"payment-status.filter.unpaid.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.payment_status === 3 && (\n                        <span className=\"badge bg-light-warning\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"payment-status.filter.partial.label\"\n                                )}\n                            </span>\n                        </span>\n                    ))\n                );\n            },\n        },\n    ];\n\n    const onChange = (filter) => {\n        fetchSales(filter, true);\n    };\n\n    const onExcelClick = () => {\n        setIsWarehouseValue(true);\n    };\n\n    return (\n        <div className=\"warehouse_sale_report_table\">\n            <ReactDataTable\n                columns={columns}\n                items={itemsValue}\n                onChange={onChange}\n                warehouseValue={warehouseValue}\n                isLoading={isLoading}\n                totalRows={totalRecord}\n                isEXCEL\n                onExcelClick={onExcelClick}\n                isPaymentStatus\n                isStatus\n                isShowFilterField\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { isLoading, totalRecord, sales, frontSetting } = state;\n    return { isLoading, totalRecord, sales, frontSetting };\n};\n\nexport default connect(mapStateToProps, {\n    fetchFrontSetting,\n    fetchSales,\n    saleExcelAction,\n})(SalesTab);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}