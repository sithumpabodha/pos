{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,userActionType,toastType}from\"../../constants\";import requestParam from\"../../shared/requestParam\";import{addToast}from\"./toastAction\";import{setTotalRecord,addInToTotalRecord,removeFromTotalRecord}from\"./totalRecordAction\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";import{setSavingButton}from\"./saveButtonAction\";export const fetchUsers=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;let allUser=arguments.length>2?arguments[2]:undefined;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}let url=apiBaseURL.USERS;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at)){url+=requestParam(filter,null,null,null,url);}url+=allUser?allUser:\"\";apiConfig.get(url).then(response=>{dispatch({type:userActionType.FETCH_USERS,payload:response.data.data});!allUser&&dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;if(isLoading){dispatch(setLoading(false));}dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const fetchUser=function(userId){let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}apiConfig.get(apiBaseURL.USERS+\"/\"+userId).then(response=>{dispatch({type:userActionType.FETCH_USER,payload:response.data.data});if(isLoading){dispatch(setLoading(false));}}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const addUser=(users,navigate)=>async dispatch=>{dispatch(setSavingButton(true));await apiConfig.post(apiBaseURL.USERS,users).then(response=>{dispatch({type:userActionType.ADD_USER,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"user.success.create.message\")}));navigate(\"/app/users\");dispatch(addInToTotalRecord(1));dispatch(setSavingButton(false));}).catch(_ref3=>{let{response}=_ref3;dispatch(setSavingButton(false));dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editUser=(userId,users,navigate)=>async dispatch=>{dispatch(setSavingButton(true));apiConfig.post(apiBaseURL.USERS+\"/\"+userId,users).then(response=>{dispatch({type:userActionType.EDIT_USER,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"user.success.edit.message\")}));navigate(\"/app/users\");dispatch(setSavingButton(false));}).catch(_ref4=>{let{response}=_ref4;dispatch(setSavingButton(false));dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteUser=userId=>async dispatch=>{apiConfig.delete(apiBaseURL.USERS+\"/\"+userId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch({type:userActionType.DELETE_USER,payload:userId});dispatch(addToast({text:getFormattedMessage(\"user.success.delete.message\")}));}).catch(_ref5=>{let{response}=_ref5;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","userActionType","toastType","requestParam","addToast","setTotalRecord","addInToTotalRecord","removeFromTotalRecord","setLoading","getFormattedMessage","setSavingButton","fetchUsers","filter","arguments","length","undefined","isLoading","allUser","dispatch","url","USERS","_","isEmpty","page","pageSize","search","order_By","created_at","get","then","response","type","FETCH_USERS","payload","data","meta","total","catch","_ref","text","message","ERROR","fetchUser","userId","FETCH_USER","_ref2","addUser","users","navigate","post","ADD_USER","_ref3","editUser","EDIT_USER","_ref4","deleteUser","delete","DELETE_USER","_ref5"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/userAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport { apiBaseURL, userActionType, toastType } from \"../../constants\";\nimport requestParam from \"../../shared/requestParam\";\nimport { addToast } from \"./toastAction\";\nimport {\n    setTotalRecord,\n    addInToTotalRecord,\n    removeFromTotalRecord,\n} from \"./totalRecordAction\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\nimport { setSavingButton } from \"./saveButtonAction\";\n\nexport const fetchUsers =\n    (filter = {}, isLoading = true, allUser) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        let url = apiBaseURL.USERS;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at)\n        ) {\n            url += requestParam(filter, null, null, null, url);\n        }\n        url += allUser ? allUser : \"\";\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: userActionType.FETCH_USERS,\n                    payload: response.data.data,\n                });\n                !allUser &&\n                    dispatch(\n                        setTotalRecord(\n                            response.data.meta.total !== undefined &&\n                                response.data.meta.total >= 0\n                                ? response.data.meta.total\n                                : response.data.data.total\n                        )\n                    );\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchUser =\n    (userId, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        apiConfig\n            .get(apiBaseURL.USERS + \"/\" + userId)\n            .then((response) => {\n                dispatch({\n                    type: userActionType.FETCH_USER,\n                    payload: response.data.data,\n                });\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const addUser = (users, navigate) => async (dispatch) => {\n    dispatch(setSavingButton(true));\n    await apiConfig\n        .post(apiBaseURL.USERS, users)\n        .then((response) => {\n            dispatch({\n                type: userActionType.ADD_USER,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"user.success.create.message\"),\n                })\n            );\n            navigate(\"/app/users\");\n            dispatch(addInToTotalRecord(1));\n            dispatch(setSavingButton(false));\n        })\n        .catch(({ response }) => {\n            dispatch(setSavingButton(false));\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editUser = (userId, users, navigate) => async (dispatch) => {\n    dispatch(setSavingButton(true));\n    apiConfig\n        .post(apiBaseURL.USERS + \"/\" + userId, users)\n        .then((response) => {\n            dispatch({\n                type: userActionType.EDIT_USER,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"user.success.edit.message\"),\n                })\n            );\n            navigate(\"/app/users\");\n            dispatch(setSavingButton(false));\n        })\n        .catch(({ response }) => {\n            dispatch(setSavingButton(false));\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.USERS + \"/\" + userId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({ type: userActionType.DELETE_USER, payload: userId });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"user.success.delete.message\"),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}