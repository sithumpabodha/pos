{"ast":null,"code":"import apiConfig from'../../config/apiConfig';import{authActionType,Tokens,toastType,apiBaseURL}from'../../constants';import{fetchPermissions}from'./permissionAction';import{addToast}from'./toastAction';import{fetchFrontSetting}from'./frontSettingAction';import{setLanguage}from'./changeLanguageAction';import{getFormattedMessage}from'../../shared/sharedMethod';import{fetchConfig}from\"./configAction\";const mapPermissionToRoute=permission=>{const entity=permission.split('_')[1];return`/app/${entity}`;};export const loginAction=(user,navigate,setLoading)=>async dispatch=>{await apiConfig.post('login',user).then(response=>{localStorage.setItem(Tokens.ADMIN,response.data.data.token);localStorage.setItem(Tokens.GET_PERMISSIONS,response.data.data.permissions);localStorage.setItem(Tokens.USER,response.data.data.user.email);localStorage.setItem(Tokens.IMAGE,response.data.data.user.image_url);localStorage.setItem(Tokens.FIRST_NAME,response.data.data.user.first_name);localStorage.setItem(Tokens.LANGUAGE,response.data.data.user.language);localStorage.setItem(Tokens.LAST_NAME,response.data.data.user.last_name);localStorage.setItem('loginUserArray',JSON.stringify(response.data.data.user));dispatch({type:authActionType.LOGIN_USER,payload:response.data.data});dispatch(setLanguage(response.data.data.user.language));localStorage.setItem(Tokens.UPDATED_LANGUAGE,response.data.data.user.language);const userPermissions=response.data.data.permissions;const mappedRoutes=userPermissions.map(mapPermissionToRoute);if(mappedRoutes&&mappedRoutes.length>0){if(userPermissions.includes('manage_dashboard')){// If 'manage_dashboard' permission is present, redirect to the first permission\nnavigate('/app/dashboard');}else{// If 'manage_dashboard' is not present, redirect to the first permission route\nnavigate(mappedRoutes[0]);;}}else{navigate('/app/dashboard');}dispatch(fetchPermissions());dispatch(fetchFrontSetting());dispatch(fetchConfig());dispatch(addToast({text:getFormattedMessage('login.success.message')}));if(response.data.data.user.language){window.location.reload();}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));setLoading(false);});};export const logoutAction=(token,navigate)=>async dispatch=>{await apiConfig.post('logout',token).then(()=>{localStorage.removeItem(Tokens.ADMIN);localStorage.removeItem(Tokens.USER);localStorage.removeItem(Tokens.IMAGE);localStorage.removeItem(Tokens.FIRST_NAME);localStorage.removeItem(Tokens.LAST_NAME);localStorage.removeItem('loginUserArray');localStorage.removeItem(Tokens.UPDATED_EMAIL);localStorage.removeItem(Tokens.UPDATED_FIRST_NAME);localStorage.removeItem(Tokens.UPDATED_LAST_NAME);localStorage.removeItem(Tokens.USER_IMAGE_URL);navigate('/login');dispatch(addToast({text:getFormattedMessage('logout.success.message')}));}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const forgotPassword=user=>async dispatch=>{await apiConfig.post(apiBaseURL.ADMIN_FORGOT_PASSWORD,user).then(response=>{dispatch({type:authActionType.ADMIN_FORGOT_PASSWORD,payload:response.data.message});dispatch(addToast({text:getFormattedMessage('forgot-password-form.success.reset-link.label')}));}).catch(_ref3=>{let{response}=_ref3;dispatch({type:toastType.ERROR,payload:response.data.message});dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const resetPassword=(user,navigate)=>async dispatch=>{await apiConfig.post(apiBaseURL.ADMIN_RESET_PASSWORD,user).then(response=>{dispatch({type:authActionType.ADMIN_RESET_PASSWORD,payload:user});dispatch(addToast({text:getFormattedMessage('reset-password.success.update.message')}));navigate('/login');}).catch(_ref4=>{let{response}=_ref4;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","authActionType","Tokens","toastType","apiBaseURL","fetchPermissions","addToast","fetchFrontSetting","setLanguage","getFormattedMessage","fetchConfig","mapPermissionToRoute","permission","entity","split","loginAction","user","navigate","setLoading","dispatch","post","then","response","localStorage","setItem","ADMIN","data","token","GET_PERMISSIONS","permissions","USER","email","IMAGE","image_url","FIRST_NAME","first_name","LANGUAGE","language","LAST_NAME","last_name","JSON","stringify","type","LOGIN_USER","payload","UPDATED_LANGUAGE","userPermissions","mappedRoutes","map","length","includes","text","window","location","reload","catch","_ref","message","ERROR","logoutAction","removeItem","UPDATED_EMAIL","UPDATED_FIRST_NAME","UPDATED_LAST_NAME","USER_IMAGE_URL","_ref2","forgotPassword","ADMIN_FORGOT_PASSWORD","_ref3","resetPassword","ADMIN_RESET_PASSWORD","_ref4"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/authAction.js"],"sourcesContent":["import apiConfig from '../../config/apiConfig';\nimport {authActionType, Tokens, toastType, apiBaseURL} from '../../constants';\nimport {fetchPermissions} from './permissionAction';\nimport {addToast} from './toastAction';\nimport {fetchFrontSetting} from './frontSettingAction';\nimport {setLanguage} from './changeLanguageAction';\nimport {getFormattedMessage} from '../../shared/sharedMethod';\nimport {fetchConfig} from \"./configAction\";\n\nconst mapPermissionToRoute = (permission) => {\n    const entity = permission.split('_')[1];\n    return `/app/${entity}`;\n};\n\nexport const loginAction = (user, navigate, setLoading) => async (dispatch) => {\n    await apiConfig.post('login', user)\n        .then((response) => {\n            localStorage.setItem(Tokens.ADMIN, response.data.data.token);\n            localStorage.setItem(Tokens.GET_PERMISSIONS, response.data.data.permissions);\n            localStorage.setItem(Tokens.USER, response.data.data.user.email);\n            localStorage.setItem(Tokens.IMAGE, response.data.data.user.image_url);\n            localStorage.setItem(Tokens.FIRST_NAME, response.data.data.user.first_name);\n            localStorage.setItem(Tokens.LANGUAGE, response.data.data.user.language);\n            localStorage.setItem(Tokens.LAST_NAME, response.data.data.user.last_name);\n            localStorage.setItem('loginUserArray', JSON.stringify(response.data.data.user));\n            dispatch({type: authActionType.LOGIN_USER, payload: response.data.data});\n            dispatch(setLanguage(response.data.data.user.language));\n            localStorage.setItem(Tokens.UPDATED_LANGUAGE, response.data.data.user.language);\n\n            const userPermissions = response.data.data.permissions;\n            const mappedRoutes = userPermissions.map(mapPermissionToRoute);\n\n            if (mappedRoutes && mappedRoutes.length > 0) {\n                if (userPermissions.includes('manage_dashboard')) {\n                    // If 'manage_dashboard' permission is present, redirect to the first permission\n                    navigate('/app/dashboard');\n                } else {\n                    // If 'manage_dashboard' is not present, redirect to the first permission route\n                    navigate(mappedRoutes[0]);;\n                }\n            } else {\n                navigate('/app/dashboard');\n            }\n\n            dispatch(fetchPermissions());\n            dispatch(fetchFrontSetting());\n            dispatch(fetchConfig())\n            dispatch(addToast({text: getFormattedMessage('login.success.message')}));\n            if(response.data.data.user.language) {\n                window.location.reload()\n            }\n        })\n        .catch(({response}) => {\n            dispatch(addToast({text: response.data.message, type: toastType.ERROR}));\n            setLoading(false);\n        });\n};\n\nexport const logoutAction = (token, navigate) => async (dispatch) => {\n    await apiConfig.post('logout', token)\n        .then(() => {\n            localStorage.removeItem(Tokens.ADMIN);\n            localStorage.removeItem(Tokens.USER);\n            localStorage.removeItem(Tokens.IMAGE);\n            localStorage.removeItem(Tokens.FIRST_NAME);\n            localStorage.removeItem(Tokens.LAST_NAME);\n            localStorage.removeItem('loginUserArray');\n            localStorage.removeItem(Tokens.UPDATED_EMAIL);\n            localStorage.removeItem(Tokens.UPDATED_FIRST_NAME);\n            localStorage.removeItem(Tokens.UPDATED_LAST_NAME);\n            localStorage.removeItem(Tokens.USER_IMAGE_URL);\n            navigate('/login');\n            dispatch(addToast({text: getFormattedMessage('logout.success.message')}));\n        })\n        .catch(({response}) => {\n            dispatch(addToast({text: response.data.message, type: toastType.ERROR}));\n        });\n};\n\nexport const forgotPassword = (user) => async (dispatch) => {\n    await apiConfig.post(apiBaseURL.ADMIN_FORGOT_PASSWORD, user).then((response) => {\n        dispatch({type: authActionType.ADMIN_FORGOT_PASSWORD, payload: response.data.message});\n        dispatch(addToast({text: getFormattedMessage('forgot-password-form.success.reset-link.label')}));\n    }).catch(({response}) => {\n        dispatch({type: toastType.ERROR, payload: response.data.message});\n        dispatch(\n            addToast({text: response.data.message, type: toastType.ERROR}));\n    });\n};\n\nexport const resetPassword = (user, navigate) => async (dispatch) => {\n    await apiConfig.post(apiBaseURL.ADMIN_RESET_PASSWORD, user).then((response) => {\n        dispatch({type: authActionType.ADMIN_RESET_PASSWORD, payload: user});\n        dispatch(addToast(\n            {text: getFormattedMessage('reset-password.success.update.message')}));\n        navigate('/login');\n    }).catch(({response}) => {\n        dispatch(\n            addToast({text: response.data.message, type: toastType.ERROR}))\n    });\n};\n\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,wBAAwB,CAC9C,OAAQC,cAAc,CAAEC,MAAM,CAAEC,SAAS,CAAEC,UAAU,KAAO,iBAAiB,CAC7E,OAAQC,gBAAgB,KAAO,oBAAoB,CACnD,OAAQC,QAAQ,KAAO,eAAe,CACtC,OAAQC,iBAAiB,KAAO,sBAAsB,CACtD,OAAQC,WAAW,KAAO,wBAAwB,CAClD,OAAQC,mBAAmB,KAAO,2BAA2B,CAC7D,OAAQC,WAAW,KAAO,gBAAgB,CAE1C,KAAM,CAAAC,oBAAoB,CAAIC,UAAU,EAAK,CACzC,KAAM,CAAAC,MAAM,CAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACvC,MAAO,QAAQD,MAAM,EAAE,CAC3B,CAAC,CAED,MAAO,MAAM,CAAAE,WAAW,CAAGA,CAACC,IAAI,CAAEC,QAAQ,CAAEC,UAAU,GAAK,KAAO,CAAAC,QAAQ,EAAK,CAC3E,KAAM,CAAAnB,SAAS,CAACoB,IAAI,CAAC,OAAO,CAAEJ,IAAI,CAAC,CAC9BK,IAAI,CAAEC,QAAQ,EAAK,CAChBC,YAAY,CAACC,OAAO,CAACtB,MAAM,CAACuB,KAAK,CAAEH,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC,CAC5DJ,YAAY,CAACC,OAAO,CAACtB,MAAM,CAAC0B,eAAe,CAAEN,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACG,WAAW,CAAC,CAC5EN,YAAY,CAACC,OAAO,CAACtB,MAAM,CAAC4B,IAAI,CAAER,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAACe,KAAK,CAAC,CAChER,YAAY,CAACC,OAAO,CAACtB,MAAM,CAAC8B,KAAK,CAAEV,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAACiB,SAAS,CAAC,CACrEV,YAAY,CAACC,OAAO,CAACtB,MAAM,CAACgC,UAAU,CAAEZ,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAACmB,UAAU,CAAC,CAC3EZ,YAAY,CAACC,OAAO,CAACtB,MAAM,CAACkC,QAAQ,CAAEd,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAACqB,QAAQ,CAAC,CACvEd,YAAY,CAACC,OAAO,CAACtB,MAAM,CAACoC,SAAS,CAAEhB,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAACuB,SAAS,CAAC,CACzEhB,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAEgB,IAAI,CAACC,SAAS,CAACnB,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAAC,CAAC,CAC/EG,QAAQ,CAAC,CAACuB,IAAI,CAAEzC,cAAc,CAAC0C,UAAU,CAAEC,OAAO,CAAEtB,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,CAAC,CACxEP,QAAQ,CAACX,WAAW,CAACc,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAACqB,QAAQ,CAAC,CAAC,CACvDd,YAAY,CAACC,OAAO,CAACtB,MAAM,CAAC2C,gBAAgB,CAAEvB,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAACqB,QAAQ,CAAC,CAE/E,KAAM,CAAAS,eAAe,CAAGxB,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACG,WAAW,CACtD,KAAM,CAAAkB,YAAY,CAAGD,eAAe,CAACE,GAAG,CAACrC,oBAAoB,CAAC,CAE9D,GAAIoC,YAAY,EAAIA,YAAY,CAACE,MAAM,CAAG,CAAC,CAAE,CACzC,GAAIH,eAAe,CAACI,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CAC9C;AACAjC,QAAQ,CAAC,gBAAgB,CAAC,CAC9B,CAAC,IAAM,CACH;AACAA,QAAQ,CAAC8B,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAC9B,CACJ,CAAC,IAAM,CACH9B,QAAQ,CAAC,gBAAgB,CAAC,CAC9B,CAEAE,QAAQ,CAACd,gBAAgB,CAAC,CAAC,CAAC,CAC5Bc,QAAQ,CAACZ,iBAAiB,CAAC,CAAC,CAAC,CAC7BY,QAAQ,CAACT,WAAW,CAAC,CAAC,CAAC,CACvBS,QAAQ,CAACb,QAAQ,CAAC,CAAC6C,IAAI,CAAE1C,mBAAmB,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CACxE,GAAGa,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACV,IAAI,CAACqB,QAAQ,CAAE,CACjCe,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC5B,CACJ,CAAC,CAAC,CACDC,KAAK,CAACC,IAAA,EAAgB,IAAf,CAAClC,QAAQ,CAAC,CAAAkC,IAAA,CACdrC,QAAQ,CAACb,QAAQ,CAAC,CAAC6C,IAAI,CAAE7B,QAAQ,CAACI,IAAI,CAAC+B,OAAO,CAAEf,IAAI,CAAEvC,SAAS,CAACuD,KAAK,CAAC,CAAC,CAAC,CACxExC,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CAAC,CACV,CAAC,CAED,MAAO,MAAM,CAAAyC,YAAY,CAAGA,CAAChC,KAAK,CAAEV,QAAQ,GAAK,KAAO,CAAAE,QAAQ,EAAK,CACjE,KAAM,CAAAnB,SAAS,CAACoB,IAAI,CAAC,QAAQ,CAAEO,KAAK,CAAC,CAChCN,IAAI,CAAC,IAAM,CACRE,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAACuB,KAAK,CAAC,CACrCF,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAAC4B,IAAI,CAAC,CACpCP,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAAC8B,KAAK,CAAC,CACrCT,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAACgC,UAAU,CAAC,CAC1CX,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAACoC,SAAS,CAAC,CACzCf,YAAY,CAACqC,UAAU,CAAC,gBAAgB,CAAC,CACzCrC,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAAC2D,aAAa,CAAC,CAC7CtC,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAAC4D,kBAAkB,CAAC,CAClDvC,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAAC6D,iBAAiB,CAAC,CACjDxC,YAAY,CAACqC,UAAU,CAAC1D,MAAM,CAAC8D,cAAc,CAAC,CAC9C/C,QAAQ,CAAC,QAAQ,CAAC,CAClBE,QAAQ,CAACb,QAAQ,CAAC,CAAC6C,IAAI,CAAE1C,mBAAmB,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAC7E,CAAC,CAAC,CACD8C,KAAK,CAACU,KAAA,EAAgB,IAAf,CAAC3C,QAAQ,CAAC,CAAA2C,KAAA,CACd9C,QAAQ,CAACb,QAAQ,CAAC,CAAC6C,IAAI,CAAE7B,QAAQ,CAACI,IAAI,CAAC+B,OAAO,CAAEf,IAAI,CAAEvC,SAAS,CAACuD,KAAK,CAAC,CAAC,CAAC,CAC5E,CAAC,CAAC,CACV,CAAC,CAED,MAAO,MAAM,CAAAQ,cAAc,CAAIlD,IAAI,EAAK,KAAO,CAAAG,QAAQ,EAAK,CACxD,KAAM,CAAAnB,SAAS,CAACoB,IAAI,CAAChB,UAAU,CAAC+D,qBAAqB,CAAEnD,IAAI,CAAC,CAACK,IAAI,CAAEC,QAAQ,EAAK,CAC5EH,QAAQ,CAAC,CAACuB,IAAI,CAAEzC,cAAc,CAACkE,qBAAqB,CAAEvB,OAAO,CAAEtB,QAAQ,CAACI,IAAI,CAAC+B,OAAO,CAAC,CAAC,CACtFtC,QAAQ,CAACb,QAAQ,CAAC,CAAC6C,IAAI,CAAE1C,mBAAmB,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC,CACpG,CAAC,CAAC,CAAC8C,KAAK,CAACa,KAAA,EAAgB,IAAf,CAAC9C,QAAQ,CAAC,CAAA8C,KAAA,CAChBjD,QAAQ,CAAC,CAACuB,IAAI,CAAEvC,SAAS,CAACuD,KAAK,CAAEd,OAAO,CAAEtB,QAAQ,CAACI,IAAI,CAAC+B,OAAO,CAAC,CAAC,CACjEtC,QAAQ,CACJb,QAAQ,CAAC,CAAC6C,IAAI,CAAE7B,QAAQ,CAACI,IAAI,CAAC+B,OAAO,CAAEf,IAAI,CAAEvC,SAAS,CAACuD,KAAK,CAAC,CAAC,CAAC,CACvE,CAAC,CAAC,CACN,CAAC,CAED,MAAO,MAAM,CAAAW,aAAa,CAAGA,CAACrD,IAAI,CAAEC,QAAQ,GAAK,KAAO,CAAAE,QAAQ,EAAK,CACjE,KAAM,CAAAnB,SAAS,CAACoB,IAAI,CAAChB,UAAU,CAACkE,oBAAoB,CAAEtD,IAAI,CAAC,CAACK,IAAI,CAAEC,QAAQ,EAAK,CAC3EH,QAAQ,CAAC,CAACuB,IAAI,CAAEzC,cAAc,CAACqE,oBAAoB,CAAE1B,OAAO,CAAE5B,IAAI,CAAC,CAAC,CACpEG,QAAQ,CAACb,QAAQ,CACb,CAAC6C,IAAI,CAAE1C,mBAAmB,CAAC,uCAAuC,CAAC,CAAC,CAAC,CAAC,CAC1EQ,QAAQ,CAAC,QAAQ,CAAC,CACtB,CAAC,CAAC,CAACsC,KAAK,CAACgB,KAAA,EAAgB,IAAf,CAACjD,QAAQ,CAAC,CAAAiD,KAAA,CAChBpD,QAAQ,CACJb,QAAQ,CAAC,CAAC6C,IAAI,CAAE7B,QAAQ,CAACI,IAAI,CAAC+B,OAAO,CAAEf,IAAI,CAAEvC,SAAS,CAACuD,KAAK,CAAC,CAAC,CAAC,CACvE,CAAC,CAAC,CACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}