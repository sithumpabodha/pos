{"ast":null,"code":"import{apiBaseURL,rolesActionType,toastType}from\"../../constants\";import apiConfig from\"../../config/apiConfig\";import{setTotalRecord,addInToTotalRecord,removeFromTotalRecord}from\"./totalRecordAction\";import{addToast}from\"./toastAction\";import requestParam from\"../../shared/requestParam\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";export const fetchRoles=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}const admin=true;let url=apiBaseURL.ROLES;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at)){url+=requestParam(filter,admin,null,null,url);}apiConfig.get(url).then(response=>{dispatch({type:rolesActionType.FETCH_ROLES,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const fetchRole=function(rolesId,singleRole){let isLoading=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}apiConfig.get(apiBaseURL.ROLES+\"/\"+rolesId,singleRole).then(response=>{dispatch({type:rolesActionType.FETCH_ROLE,payload:response.data.data});if(isLoading){dispatch(setLoading(false));}}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const addRole=(roles,navigate)=>async dispatch=>{await apiConfig.post(apiBaseURL.ROLES,roles).then(response=>{dispatch({type:rolesActionType.ADD_ROLES,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"role.success.create.message\")}));navigate(\"/app/roles\");dispatch(addInToTotalRecord(1));}).catch(_ref3=>{let{response}=_ref3;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editRole=(rolesId,role,navigate)=>async dispatch=>{await apiConfig.patch(apiBaseURL.ROLES+\"/\"+rolesId,role).then(response=>{dispatch({type:rolesActionType.EDIT_ROLES,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"role.success.edit.message\")}));navigate(\"/app/roles\");}).catch(_ref4=>{let{response}=_ref4;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteRole=rolesId=>async dispatch=>{apiConfig.delete(apiBaseURL.ROLES+\"/\"+rolesId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch({type:rolesActionType.DELETE_ROLES,payload:rolesId});dispatch(addToast({text:getFormattedMessage(\"role.success.delete.message\")}));}).catch(_ref5=>{let{response}=_ref5;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const fetchAllRoles=()=>async dispatch=>{apiConfig.get(`roles?page[size]=0`).then(response=>{dispatch({type:rolesActionType.FETCH_ALL_ROLES,payload:response.data.data});}).catch(_ref6=>{let{response}=_ref6;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiBaseURL","rolesActionType","toastType","apiConfig","setTotalRecord","addInToTotalRecord","removeFromTotalRecord","addToast","requestParam","setLoading","getFormattedMessage","fetchRoles","filter","arguments","length","undefined","isLoading","dispatch","admin","url","ROLES","_","isEmpty","page","pageSize","search","order_By","created_at","get","then","response","type","FETCH_ROLES","payload","data","meta","total","catch","_ref","text","message","ERROR","fetchRole","rolesId","singleRole","FETCH_ROLE","_ref2","addRole","roles","navigate","post","ADD_ROLES","_ref3","editRole","role","patch","EDIT_ROLES","_ref4","deleteRole","delete","DELETE_ROLES","_ref5","fetchAllRoles","FETCH_ALL_ROLES","_ref6"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/roleAction.js"],"sourcesContent":["import { apiBaseURL, rolesActionType, toastType } from \"../../constants\";\nimport apiConfig from \"../../config/apiConfig\";\nimport {\n    setTotalRecord,\n    addInToTotalRecord,\n    removeFromTotalRecord,\n} from \"./totalRecordAction\";\nimport { addToast } from \"./toastAction\";\nimport requestParam from \"../../shared/requestParam\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\n\nexport const fetchRoles =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        const admin = true;\n        let url = apiBaseURL.ROLES;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at)\n        ) {\n            url += requestParam(filter, admin, null, null, url);\n        }\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: rolesActionType.FETCH_ROLES,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchRole =\n    (rolesId, singleRole, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        apiConfig\n            .get(apiBaseURL.ROLES + \"/\" + rolesId, singleRole)\n            .then((response) => {\n                dispatch({\n                    type: rolesActionType.FETCH_ROLE,\n                    payload: response.data.data,\n                });\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const addRole = (roles, navigate) => async (dispatch) => {\n    await apiConfig\n        .post(apiBaseURL.ROLES, roles)\n        .then((response) => {\n            dispatch({\n                type: rolesActionType.ADD_ROLES,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"role.success.create.message\"),\n                })\n            );\n            navigate(\"/app/roles\");\n            dispatch(addInToTotalRecord(1));\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editRole = (rolesId, role, navigate) => async (dispatch) => {\n    await apiConfig\n        .patch(apiBaseURL.ROLES + \"/\" + rolesId, role)\n        .then((response) => {\n            dispatch({\n                type: rolesActionType.EDIT_ROLES,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"role.success.edit.message\"),\n                })\n            );\n            navigate(\"/app/roles\");\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const deleteRole = (rolesId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.ROLES + \"/\" + rolesId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({ type: rolesActionType.DELETE_ROLES, payload: rolesId });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"role.success.delete.message\"),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const fetchAllRoles = () => async (dispatch) => {\n    apiConfig\n        .get(`roles?page[size]=0`)\n        .then((response) => {\n            dispatch({\n                type: rolesActionType.FETCH_ALL_ROLES,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}