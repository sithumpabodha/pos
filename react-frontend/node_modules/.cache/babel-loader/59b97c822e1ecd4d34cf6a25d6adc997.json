{"ast":null,"code":"import React,{useState}from\"react\";import{connect}from\"react-redux\";import MasterLayout from\"../MasterLayout\";import ReactDataTable from\"../../shared/table/ReactDataTable\";import ModalAction from\"../../shared/action-buttons/ActionButton\";import{fetchRoles}from\"../../store/action/roleAction\";import DeleteRole from\"./DeleteRole\";import TabTitle from\"../../shared/tab-title/TabTitle\";import{getFormattedDate,getFormattedMessage,placeholderText}from\"../../shared/sharedMethod\";import TopProgressBar from\"../../shared/components/loaders/TopProgressBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Role=props=>{const{roles,fetchRoles,totalRecord,isLoading,allConfigData}=props;const[deleteModel,setDeleteModel]=useState(false);const[isDelete,setIsDelete]=useState(null);const onClickDeleteModel=function(){let isDelete=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setDeleteModel(!deleteModel);setIsDelete(isDelete);};const itemsValue=roles.length>=0&&roles.map(role=>({date:getFormattedDate(role.attributes.created_at,allConfigData&&allConfigData),name:role.attributes.name,id:role.id}));const onChange=filter=>{fetchRoles(filter,true);};const goToEdit=item=>{const id=item.id;window.location.href=\"#/app/roles/edit/\"+id;};const columns=[{name:getFormattedMessage(\"globally.input.name.label\"),selector:row=>row.name,sortable:true,sortField:\"name\"},{name:getFormattedMessage(\"react-data-table.date.column.label\"),selector:row=>row.date,sortField:\"date\",sortable:false},{name:getFormattedMessage(\"react-data-table.action.column.label\"),right:true,ignoreRowClick:true,allowOverflow:true,button:true,cell:row=>/*#__PURE__*/_jsx(ModalAction,{item:row,goToEditProduct:goToEdit,isEditMode:true,onClickDeleteModel:onClickDeleteModel})}];return/*#__PURE__*/_jsxs(MasterLayout,{children:[/*#__PURE__*/_jsx(TopProgressBar,{}),/*#__PURE__*/_jsx(TabTitle,{title:placeholderText(\"roles.title\")}),/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,items:itemsValue,onChange:onChange,ButtonValue:getFormattedMessage(\"role.create.title\"),to:\"#/app/roles/create\",totalRows:totalRecord,isLoading:isLoading}),/*#__PURE__*/_jsx(DeleteRole,{onClickDeleteModel:onClickDeleteModel,deleteModel:deleteModel,onDelete:isDelete})]});};const mapStateToProps=state=>{const{roles,totalRecord,isLoading,allConfigData}=state;return{roles,totalRecord,isLoading,allConfigData};};export default connect(mapStateToProps,{fetchRoles})(Role);","map":{"version":3,"names":["React","useState","connect","MasterLayout","ReactDataTable","ModalAction","fetchRoles","DeleteRole","TabTitle","getFormattedDate","getFormattedMessage","placeholderText","TopProgressBar","jsx","_jsx","jsxs","_jsxs","Role","props","roles","totalRecord","isLoading","allConfigData","deleteModel","setDeleteModel","isDelete","setIsDelete","onClickDeleteModel","arguments","length","undefined","itemsValue","map","role","date","attributes","created_at","name","id","onChange","filter","goToEdit","item","window","location","href","columns","selector","row","sortable","sortField","right","ignoreRowClick","allowOverflow","button","cell","goToEditProduct","isEditMode","children","title","items","ButtonValue","to","totalRows","onDelete","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/roles/Role.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport MasterLayout from \"../MasterLayout\";\nimport ReactDataTable from \"../../shared/table/ReactDataTable\";\nimport ModalAction from \"../../shared/action-buttons/ActionButton\";\nimport { fetchRoles } from \"../../store/action/roleAction\";\nimport DeleteRole from \"./DeleteRole\";\nimport TabTitle from \"../../shared/tab-title/TabTitle\";\nimport {\n    getFormattedDate,\n    getFormattedMessage,\n    placeholderText,\n} from \"../../shared/sharedMethod\";\nimport TopProgressBar from \"../../shared/components/loaders/TopProgressBar\";\n\nconst Role = (props) => {\n    const { roles, fetchRoles, totalRecord, isLoading, allConfigData } = props;\n    const [deleteModel, setDeleteModel] = useState(false);\n    const [isDelete, setIsDelete] = useState(null);\n\n    const onClickDeleteModel = (isDelete = null) => {\n        setDeleteModel(!deleteModel);\n        setIsDelete(isDelete);\n    };\n\n    const itemsValue =\n        roles.length >= 0 &&\n        roles.map((role) => ({\n            date: getFormattedDate(\n                role.attributes.created_at,\n                allConfigData && allConfigData\n            ),\n            name: role.attributes.name,\n            id: role.id,\n        }));\n\n    const onChange = (filter) => {\n        fetchRoles(filter, true);\n    };\n\n    const goToEdit = (item) => {\n        const id = item.id;\n        window.location.href = \"#/app/roles/edit/\" + id;\n    };\n\n    const columns = [\n        {\n            name: getFormattedMessage(\"globally.input.name.label\"),\n            selector: (row) => row.name,\n            sortable: true,\n            sortField: \"name\",\n        },\n        {\n            name: getFormattedMessage(\"react-data-table.date.column.label\"),\n            selector: (row) => row.date,\n            sortField: \"date\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"react-data-table.action.column.label\"),\n            right: true,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n            cell: (row) => (\n                <ModalAction\n                    item={row}\n                    goToEditProduct={goToEdit}\n                    isEditMode={true}\n                    onClickDeleteModel={onClickDeleteModel}\n                />\n            ),\n        },\n    ];\n\n    return (\n        <MasterLayout>\n            <TopProgressBar />\n            <TabTitle title={placeholderText(\"roles.title\")} />\n            <ReactDataTable\n                columns={columns}\n                items={itemsValue}\n                onChange={onChange}\n                ButtonValue={getFormattedMessage(\"role.create.title\")}\n                to=\"#/app/roles/create\"\n                totalRows={totalRecord}\n                isLoading={isLoading}\n            />\n            <DeleteRole\n                onClickDeleteModel={onClickDeleteModel}\n                deleteModel={deleteModel}\n                onDelete={isDelete}\n            />\n        </MasterLayout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { roles, totalRecord, isLoading, allConfigData } = state;\n    return { roles, totalRecord, isLoading, allConfigData };\n};\nexport default connect(mapStateToProps, { fetchRoles })(Role);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}