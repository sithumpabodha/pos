{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{connect,useDispatch}from\"react-redux\";import ReactDataTable from\"../../../../shared/table/ReactDataTable\";import{currencySymbolHandling,getFormattedMessage}from\"../../../../shared/sharedMethod\";import{stockDetailsPurchaseReturnAction}from\"../../../../store/action/stockDetailsPurchaseRetrunAction\";import{fetchFrontSetting}from\"../../../../store/action/frontSettingAction\";import{stockDetailsPurchaseReturnExcel}from\"../../../../store/action/stockDetailsPurchaseReturnExcel\";import{fetchSupplierPurchaseReturnReport}from\"../../../../store/action/supplierPurchaseReportAction\";import apiConfig from\"../../../../config/apiConfig\";import{apiBaseURL,toastType}from\"../../../../constants\";import{addToast}from\"../../../../store/action/toastAction\";import{jsx as _jsx}from\"react/jsx-runtime\";const PurchaseReturnTab=props=>{const{isLoading,totalRecord,frontSetting,fetchFrontSetting,warehouseValue,allConfigData,stockDetailsPurchaseReturnExcel,id,fetchSupplierPurchaseReturnReport,supplierPurchaseReport}=props;const currencySymbol=frontSetting&&frontSetting.value&&frontSetting.value.currency_symbol;const[isWarehouseValue,setIsWarehouseValue]=useState(false);const dispatch=useDispatch();useEffect(()=>{if(isWarehouseValue===true){stockDetailsPurchaseReturnExcel(id,setIsWarehouseValue);}},[isWarehouseValue]);useEffect(()=>{fetchFrontSetting();},[warehouseValue]);const itemsValue=currencySymbol&&supplierPurchaseReport.length>=0&&supplierPurchaseReport.map(purchase=>({reference_code:purchase.reference_code,supplier_name:purchase.supplier.name,warehouse_name:purchase.warehouse.name,grand_total:purchase.grand_total,status:purchase.status,// warehouse_name: sale.attributes.warehouse_name,\n// id: sale.id,\n// purchase_items: sale.attributes.purchase_items.map((item) => ({\n//     name: item.product && item.product.name,\n//     sub_total: item.sub_total,\n//     quantity: item.quantity,\n//     product_id: item.product_id,\n// })),\ncurrency:currencySymbol}));const columns=[{name:getFormattedMessage(\"dashboard.recentSales.reference.label\"),selector:row=>row.reference_code,sortField:\"reference_code\",sortable:true},{name:getFormattedMessage(\"supplier.table.name.column.title\"),selector:row=>row.supplier_name,sortField:\"supplier_name\",sortable:false},{name:getFormattedMessage(\"globally.detail.warehouse\"),sortField:\"warehouse_name\",sortable:false,selector:row=>row.warehouse_name},{name:getFormattedMessage(\"globally.detail.grand.total\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.grand_total),sortField:\"grand_total\",sortable:false},{name:getFormattedMessage(\"purchase.select.status.label\"),sortField:\"status\",sortable:false,cell:row=>{return row.status===1&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-primary\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.received.label\")})})||row.status===2&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-primary\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.pending.label\")})})||row.status===3&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-primary\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.ordered.label\")})});}}];const onChange=filter=>{fetchSupplierPurchaseReturnReport(id,filter,true);};const onExcelClick=()=>{apiConfig.get(apiBaseURL.SUPPLIER_PURCHASE_RETURN_EXCEL+\"?supplier_id=\"+id).then(response=>{window.open(response.data.data.purchase_return_excel_url,\"_blank\");}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};return/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,items:itemsValue,onChange:onChange,warehouseValue:warehouseValue,isLoading:isLoading,totalRows:totalRecord,isEXCEL:true,onExcelClick:onExcelClick});};const mapStateToProps=state=>{const{isLoading,totalRecord,stockDetailPurchaseReturn,frontSetting,supplierPurchaseReport}=state;return{isLoading,totalRecord,stockDetailPurchaseReturn,frontSetting,supplierPurchaseReport};};export default connect(mapStateToProps,{fetchFrontSetting,stockDetailsPurchaseReturnAction,stockDetailsPurchaseReturnExcel,fetchSupplierPurchaseReturnReport})(PurchaseReturnTab);","map":{"version":3,"names":["React","useEffect","useState","connect","useDispatch","ReactDataTable","currencySymbolHandling","getFormattedMessage","stockDetailsPurchaseReturnAction","fetchFrontSetting","stockDetailsPurchaseReturnExcel","fetchSupplierPurchaseReturnReport","apiConfig","apiBaseURL","toastType","addToast","jsx","_jsx","PurchaseReturnTab","props","isLoading","totalRecord","frontSetting","warehouseValue","allConfigData","id","supplierPurchaseReport","currencySymbol","value","currency_symbol","isWarehouseValue","setIsWarehouseValue","dispatch","itemsValue","length","map","purchase","reference_code","supplier_name","supplier","name","warehouse_name","warehouse","grand_total","status","currency","columns","selector","row","sortField","sortable","cell","className","children","onChange","filter","onExcelClick","get","SUPPLIER_PURCHASE_RETURN_EXCEL","then","response","window","open","data","purchase_return_excel_url","catch","_ref","text","message","type","ERROR","items","totalRows","isEXCEL","mapStateToProps","state","stockDetailPurchaseReturn"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/report/supplier-report/supplier-tab/PurchaseReturnTabs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport ReactDataTable from \"../../../../shared/table/ReactDataTable\";\nimport {\n    currencySymbolHandling,\n    getFormattedMessage,\n} from \"../../../../shared/sharedMethod\";\nimport { stockDetailsPurchaseReturnAction } from \"../../../../store/action/stockDetailsPurchaseRetrunAction\";\nimport { fetchFrontSetting } from \"../../../../store/action/frontSettingAction\";\nimport { stockDetailsPurchaseReturnExcel } from \"../../../../store/action/stockDetailsPurchaseReturnExcel\";\nimport { fetchSupplierPurchaseReturnReport } from \"../../../../store/action/supplierPurchaseReportAction\";\nimport apiConfig from \"../../../../config/apiConfig\";\nimport { apiBaseURL, toastType } from \"../../../../constants\";\nimport { addToast } from \"../../../../store/action/toastAction\";\n\nconst PurchaseReturnTab = (props) => {\n    const {\n        isLoading,\n        totalRecord,\n        frontSetting,\n        fetchFrontSetting,\n        warehouseValue,\n        allConfigData,\n        stockDetailsPurchaseReturnExcel,\n        id,\n        fetchSupplierPurchaseReturnReport,\n        supplierPurchaseReport,\n    } = props;\n    const currencySymbol =\n        frontSetting &&\n        frontSetting.value &&\n        frontSetting.value.currency_symbol;\n    const [isWarehouseValue, setIsWarehouseValue] = useState(false);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (isWarehouseValue === true) {\n            stockDetailsPurchaseReturnExcel(id, setIsWarehouseValue);\n        }\n    }, [isWarehouseValue]);\n\n    useEffect(() => {\n        fetchFrontSetting();\n    }, [warehouseValue]);\n\n    const itemsValue =\n        currencySymbol &&\n        supplierPurchaseReport.length >= 0 &&\n        supplierPurchaseReport.map((purchase) => ({\n            reference_code: purchase.reference_code,\n            supplier_name: purchase.supplier.name,\n            warehouse_name: purchase.warehouse.name,\n            grand_total: purchase.grand_total,\n            status: purchase.status,\n            // warehouse_name: sale.attributes.warehouse_name,\n            // id: sale.id,\n            // purchase_items: sale.attributes.purchase_items.map((item) => ({\n            //     name: item.product && item.product.name,\n            //     sub_total: item.sub_total,\n            //     quantity: item.quantity,\n            //     product_id: item.product_id,\n            // })),\n            currency: currencySymbol,\n        }));\n\n    const columns = [\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.reference.label\"),\n            selector: (row) => row.reference_code,\n            sortField: \"reference_code\",\n            sortable: true,\n        },\n        {\n            name: getFormattedMessage(\"supplier.table.name.column.title\"),\n            selector: (row) => row.supplier_name,\n            sortField: \"supplier_name\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"globally.detail.warehouse\"),\n            sortField: \"warehouse_name\",\n            sortable: false,\n            selector: (row) => row.warehouse_name,\n        },\n        {\n            name: getFormattedMessage(\"globally.detail.grand.total\"),\n            selector: (row) =>\n                currencySymbolHandling(\n                    allConfigData,\n                    row.currency,\n                    row.grand_total\n                ),\n            sortField: \"grand_total\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"purchase.select.status.label\"),\n            sortField: \"status\",\n            sortable: false,\n            cell: (row) => {\n                return (\n                    (row.status === 1 && (\n                        <span className=\"badge bg-light-primary\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.received.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.status === 2 && (\n                        <span className=\"badge bg-light-primary\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.pending.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.status === 3 && (\n                        <span className=\"badge bg-light-primary\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.ordered.label\"\n                                )}\n                            </span>\n                        </span>\n                    ))\n                );\n            },\n        },\n    ];\n\n    const onChange = (filter) => {\n        fetchSupplierPurchaseReturnReport(id, filter, true);\n    };\n\n    const onExcelClick = () => {\n        apiConfig\n            .get(\n                apiBaseURL.SUPPLIER_PURCHASE_RETURN_EXCEL + \"?supplier_id=\" + id\n            )\n            .then((response) => {\n                window.open(\n                    response.data.data.purchase_return_excel_url,\n                    \"_blank\"\n                );\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\n    return (\n        <ReactDataTable\n            columns={columns}\n            items={itemsValue}\n            onChange={onChange}\n            warehouseValue={warehouseValue}\n            isLoading={isLoading}\n            totalRows={totalRecord}\n            isEXCEL\n            onExcelClick={onExcelClick}\n        />\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const {\n        isLoading,\n        totalRecord,\n        stockDetailPurchaseReturn,\n        frontSetting,\n        supplierPurchaseReport,\n    } = state;\n    return {\n        isLoading,\n        totalRecord,\n        stockDetailPurchaseReturn,\n        frontSetting,\n        supplierPurchaseReport,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    fetchFrontSetting,\n    stockDetailsPurchaseReturnAction,\n    stockDetailsPurchaseReturnExcel,\n    fetchSupplierPurchaseReturnReport,\n})(PurchaseReturnTab);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}