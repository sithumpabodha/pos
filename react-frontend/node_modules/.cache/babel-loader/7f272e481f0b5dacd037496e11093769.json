{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,transferActionType,toastType}from\"../../constants\";import{addToast}from\"./toastAction\";import{setTotalRecord,addInToTotalRecord,removeFromTotalRecord}from\"./totalRecordAction\";import requestParam from\"../../shared/requestParam\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";import{setSavingButton}from\"./saveButtonAction\";export const fetchTransfers=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}let url=apiBaseURL.TRANSFERS;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at)){url+=requestParam(filter,null,null,null,url);}apiConfig.get(url).then(response=>{dispatch({type:transferActionType.FETCH_TRANSFERS,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const addTransfer=(transfer,navigate)=>async dispatch=>{dispatch(setSavingButton(true));apiConfig.post(apiBaseURL.TRANSFERS,transfer).then(response=>{dispatch({type:transferActionType.ADD_TRANSFER,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"transfer.success.create.message\")}));navigate(\"/app/transfers\");dispatch(addInToTotalRecord(1));dispatch(setSavingButton(false));}).catch(_ref2=>{let{response}=_ref2;dispatch(setSavingButton(false));response&&dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const fetchTransfer=function(transferId,singleTransfer){let isLoading=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}apiConfig.get(apiBaseURL.TRANSFERS+\"/\"+transferId+\"/edit\",singleTransfer).then(response=>{dispatch({type:transferActionType.FETCH_TRANSFER,payload:response.data.data});if(isLoading){dispatch(setLoading(false));}}).catch(_ref3=>{let{response}=_ref3;response&&dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const editTransfer=(transferId,transfer,navigate)=>async dispatch=>{dispatch(setSavingButton(true));await apiConfig.patch(apiBaseURL.TRANSFERS+\"/\"+transferId,transfer).then(response=>{dispatch(addToast({text:getFormattedMessage(\"sale.success.edit.message\")}));navigate(\"/app/transfers\");dispatch({type:transferActionType.EDIT_TRANSFER,payload:response.data.data});dispatch(setSavingButton(false));}).catch(_ref4=>{let{response}=_ref4;dispatch(setSavingButton(false));response&&dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deletetransfer=transferId=>async dispatch=>{apiConfig.delete(apiBaseURL.TRANSFERS+\"/\"+transferId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch(addToast({text:getFormattedMessage(\"transfer.success.delete.message\")}));dispatch({type:transferActionType.DELETE_TRANSFER,payload:purchaseId});}).catch(_ref5=>{let{response}=_ref5;response&&dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","transferActionType","toastType","addToast","setTotalRecord","addInToTotalRecord","removeFromTotalRecord","requestParam","setLoading","getFormattedMessage","setSavingButton","fetchTransfers","filter","arguments","length","undefined","isLoading","dispatch","url","TRANSFERS","_","isEmpty","page","pageSize","search","order_By","created_at","get","then","response","type","FETCH_TRANSFERS","payload","data","meta","total","catch","_ref","text","message","ERROR","addTransfer","transfer","navigate","post","ADD_TRANSFER","_ref2","fetchTransfer","transferId","singleTransfer","FETCH_TRANSFER","_ref3","editTransfer","patch","EDIT_TRANSFER","_ref4","deletetransfer","delete","DELETE_TRANSFER","purchaseId","_ref5"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/transfersAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport { apiBaseURL, transferActionType, toastType } from \"../../constants\";\nimport { addToast } from \"./toastAction\";\nimport {\n    setTotalRecord,\n    addInToTotalRecord,\n    removeFromTotalRecord,\n} from \"./totalRecordAction\";\nimport requestParam from \"../../shared/requestParam\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\nimport { setSavingButton } from \"./saveButtonAction\";\n\nexport const fetchTransfers =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        let url = apiBaseURL.TRANSFERS;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at)\n        ) {\n            url += requestParam(filter, null, null, null, url);\n        }\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: transferActionType.FETCH_TRANSFERS,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const addTransfer = (transfer, navigate) => async (dispatch) => {\n    dispatch(setSavingButton(true));\n    apiConfig\n        .post(apiBaseURL.TRANSFERS, transfer)\n        .then((response) => {\n            dispatch({\n                type: transferActionType.ADD_TRANSFER,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"transfer.success.create.message\"\n                    ),\n                })\n            );\n            navigate(\"/app/transfers\");\n            dispatch(addInToTotalRecord(1));\n            dispatch(setSavingButton(false));\n        })\n        .catch(({ response }) => {\n            dispatch(setSavingButton(false));\n            response &&\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n        });\n};\n\nexport const fetchTransfer =\n    (transferId, singleTransfer, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        apiConfig\n            .get(\n                apiBaseURL.TRANSFERS + \"/\" + transferId + \"/edit\",\n                singleTransfer\n            )\n            .then((response) => {\n                dispatch({\n                    type: transferActionType.FETCH_TRANSFER,\n                    payload: response.data.data,\n                });\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                response &&\n                    dispatch(\n                        addToast({\n                            text: response.data.message,\n                            type: toastType.ERROR,\n                        })\n                    );\n            });\n    };\n\nexport const editTransfer =\n    (transferId, transfer, navigate) => async (dispatch) => {\n        dispatch(setSavingButton(true));\n        await apiConfig\n            .patch(apiBaseURL.TRANSFERS + \"/\" + transferId, transfer)\n            .then((response) => {\n                dispatch(\n                    addToast({\n                        text: getFormattedMessage(\"sale.success.edit.message\"),\n                    })\n                );\n                navigate(\"/app/transfers\");\n                dispatch({\n                    type: transferActionType.EDIT_TRANSFER,\n                    payload: response.data.data,\n                });\n                dispatch(setSavingButton(false));\n            })\n            .catch(({ response }) => {\n                dispatch(setSavingButton(false));\n                response &&\n                    dispatch(\n                        addToast({\n                            text: response.data.message,\n                            type: toastType.ERROR,\n                        })\n                    );\n            });\n    };\n\nexport const deletetransfer = (transferId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.TRANSFERS + \"/\" + transferId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"transfer.success.delete.message\"\n                    ),\n                })\n            );\n            dispatch({\n                type: transferActionType.DELETE_TRANSFER,\n                payload: purchaseId,\n            });\n        })\n        .catch(({ response }) => {\n            response &&\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}