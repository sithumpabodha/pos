{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{Col,Container,Row,Table}from\"react-bootstrap-v5\";import{connect,useDispatch,useSelector}from\"react-redux\";import moment from\"moment\";import{useReactToPrint}from\"react-to-print\";import Category from\"./Category\";import Brands from\"./Brand\";import Product from\"./product/Product\";import ProductCartList from\"./cart-product/ProductCartList\";import{posSearchNameProduct,posSearchCodeProduct}from\"../../store/action/pos/posfetchProductAction\";import ProductSearchbar from\"./product/ProductSearchbar\";import{prepareCartArray}from\"../shared/PrepareCartArray\";import ProductDetailsModel from\"../shared/ProductDetailsModel\";import CartItemMainCalculation from\"./cart-product/CartItemMainCalculation\";import PosHeader from\"./header/PosHeader\";import{posCashPaymentAction}from\"../../store/action/pos/posCashPaymentAction\";import PaymentButton from\"./cart-product/PaymentButton\";import CashPaymentModel from\"./cart-product/paymentModel/CashPaymentModel\";import PrintData from\"./printModal/PrintData\";import PaymentSlipModal from\"./paymentSlipModal/PaymentSlipModal\";import{fetchFrontSetting}from\"../../store/action/frontSettingAction\";import{fetchSetting}from\"../../store/action/settingAction\";import{calculateProductCost}from\"../shared/SharedMethod\";import{fetchBrandClickable,posAllProduct}from\"../../store/action/pos/posAllProductAction\";import TabTitle from\"../../shared/tab-title/TabTitle\";import HeaderAllButton from\"./header/HeaderAllButton\";import RegisterDetailsModel from\"./register-detailsModal/RegisterDetailsModel\";import PrintRegisterDetailsData from\"./printModal/PrintRegisterDetailsData\";import{closeRegisterAction,fetchTodaySaleOverAllReport,getAllRegisterDetailsAction}from\"../../store/action/pos/posRegisterDetailsAction\";import{getFormattedMessage,getFormattedOptions}from\"../../shared/sharedMethod\";import{paymentMethodOptions,toastType}from\"../../constants\";import TopProgressBar from\"../../shared/components/loaders/TopProgressBar\";import CustomerForm from\"./customerModel/CustomerForm\";import HoldListModal from\"./holdListModal/HoldListModal\";import{fetchHoldLists}from\"../../store/action/pos/HoldListAction\";import{useNavigate}from\"react-router\";import PosCloseRegisterDetailsModel from\"../../components/posRegister/PosCloseRegisterDetailsModel.js\";import{addToast}from\"../../store/action/toastAction\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PosMainPage=props=>{const{onClickFullScreen,posAllProducts,customCart,posCashPaymentAction,frontSetting,fetchFrontSetting,settings,fetchSetting,paymentDetails,allConfigData,fetchBrandClickable,posAllTodaySaleOverAllReport,fetchHoldLists,holdListData}=props;const componentRef=useRef();const registerDetailsRef=useRef();// const [play] = useSound('https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3');\nconst[openCalculator,setOpenCalculator]=useState(false);const[quantity,setQuantity]=useState(1);const[updateProducts,setUpdateProducts]=useState([]);const[isOpenCartItemUpdateModel,setIsOpenCartItemUpdateModel]=useState(false);const[product,setProduct]=useState(null);const[cartProductIds,setCartProductIds]=useState([]);const[newCost,setNewCost]=useState(\"\");const[paymentPrint,setPaymentPrint]=useState({});const[cashPayment,setCashPayment]=useState(false);const[modalShowPaymentSlip,setModalShowPaymentSlip]=useState(false);const[modalShowCustomer,setModalShowCustomer]=useState(false);const[productMsg,setProductMsg]=useState(0);const[brandId,setBrandId]=useState();const[categoryId,setCategoryId]=useState();const[selectedCustomerOption,setSelectedCustomerOption]=useState(null);const[selectedOption,setSelectedOption]=useState(null);const[updateHolList,setUpdateHoldList]=useState(false);const[hold_ref_no,setHold_ref_no]=useState(\"\");const[cartItemValue,setCartItemValue]=useState({discount:0,tax:0,shipping:0});const[cashPaymentValue,setCashPaymentValue]=useState({notes:\"\",payment_status:{label:getFormattedMessage(\"dashboard.recentSales.paid.label\"),value:1}});const[errors,setErrors]=useState({notes:\"\"});// const [searchString, setSearchString] = useState('');\nconst[changeReturn,setChangeReturn]=useState(0);const[showCloseDetailsModal,setShowCloseDetailsModal]=useState(false);const{closeRegisterDetails}=useSelector(state=>state);const dispatch=useDispatch();const navigate=useNavigate();//total Qty on cart item\nconst localCart=updateProducts.map(updateQty=>Number(updateQty.quantity));const totalQty=localCart.length>0&&localCart.reduce((cart,current)=>{return cart+current;});//subtotal on cart item\nconst localTotal=updateProducts.map(updateQty=>calculateProductCost(updateQty).toFixed(2)*updateQty.quantity);const subTotal=localTotal.length>0&&localTotal.reduce((cart,current)=>{return cart+current;});const[holdListId,setHoldListValue]=useState({referenceNumber:\"\"});//grand total on cart item\nconst discountTotal=subTotal-cartItemValue.discount;const taxTotal=discountTotal*cartItemValue.tax/100;const mainTotal=discountTotal+taxTotal;const grandTotal=(Number(mainTotal)+Number(cartItemValue.shipping)).toFixed(2);useEffect(()=>{setPaymentPrint({...paymentPrint,barcode_url:paymentDetails.attributes&&paymentDetails.attributes.barcode_url,reference_code:paymentDetails.attributes&&paymentDetails.attributes.reference_code});},[paymentDetails]);useEffect(()=>{setSelectedCustomerOption(settings.attributes&&{value:Number(settings.attributes.default_customer),label:settings.attributes.customer_name});setSelectedOption(settings.attributes&&{value:Number(settings.attributes.default_warehouse),label:settings.attributes.warehouse_name});},[settings]);useEffect(()=>{fetchSetting();fetchFrontSetting();fetchTodaySaleOverAllReport();fetchHoldLists();},[]);useEffect(()=>{if(updateHolList===true){fetchHoldLists();setUpdateHoldList(false);}},[updateHolList]);useEffect(()=>{setUpdateProducts(updateProducts);},[quantity,grandTotal]);const handleValidation=()=>{let errors={};let isValid=false;if(cashPaymentValue[\"notes\"]&&cashPaymentValue[\"notes\"].length>100){errors[\"notes\"]=\"The notes must not be greater than 100 characters\";}else{isValid=true;}setErrors(errors);return isValid;};//filter on category id\nconst setCategory=item=>{setCategoryId(item);};useEffect(()=>{if(selectedOption){fetchBrandClickable(brandId,categoryId,selectedOption.value&&selectedOption.value);}},[selectedOption,brandId,categoryId]);//filter on brand id\nconst setBrand=item=>{setBrandId(item);};const onChangeInput=e=>{e.preventDefault();setCashPaymentValue(inputs=>({...inputs,[e.target.name]:e.target.value}));};const onPaymentStatusChange=obj=>{setCashPaymentValue(inputs=>({...inputs,payment_status:obj}));};const onChangeReturnChange=change=>{setChangeReturn(change);};// payment type dropdown functionality\nconst paymentTypeFilterOptions=getFormattedOptions(paymentMethodOptions);const paymentTypeDefaultValue=paymentTypeFilterOptions.map(option=>{return{value:option.id,label:option.name};});const[paymentValue,setPaymentValue]=useState({payment_type:paymentTypeDefaultValue[0]});const onPaymentTypeChange=obj=>{setPaymentValue({...paymentValue,payment_type:obj});};const onChangeCart=event=>{const{value}=event.target;// check if value includes a decimal point\nif(value.match(/\\./g)){const[,decimal]=value.split(\".\");// restrict value to only 2 decimal places\nif((decimal===null||decimal===void 0?void 0:decimal.length)>2){// do nothing\nreturn;}}setCartItemValue(inputs=>({...inputs,[event.target.name]:value}));};const onChangeTaxCart=event=>{const min=0;const max=100;const{value}=event.target;const values=Math.max(min,Math.min(max,Number(value)));// check if value includes a decimal point\nif(value.match(/\\./g)){const[,decimal]=value.split(\".\");// restrict value to only 2 decimal places\nif((decimal===null||decimal===void 0?void 0:decimal.length)>2){// do nothing\nreturn;}}setCartItemValue(inputs=>({...inputs,[event.target.name]:values}));};//payment slip model onchange\nconst handleCashPayment=()=>{setCashPaymentValue({notes:\"\",payment_status:{label:getFormattedMessage(\"dashboard.recentSales.paid.label\"),value:1}});setCashPayment(!cashPayment);};const updateCost=item=>{setNewCost(item);};//product details model onChange\nconst openProductDetailModal=()=>{setIsOpenCartItemUpdateModel(!isOpenCartItemUpdateModel);};//product details model updated value\nconst onClickUpdateItemInCart=item=>{setProduct(item);setIsOpenCartItemUpdateModel(true);};const onProductUpdateInCart=()=>{const localCart=updateProducts.slice();updateCart(localCart);};//updated Qty function\nconst updatedQty=qty=>{setQuantity(qty);};const updateCart=cartProducts=>{setUpdateProducts(cartProducts);};//cart item delete\nconst onDeleteCartItem=productId=>{const existingCart=updateProducts.filter(e=>e.id!==productId);updateCart(existingCart);};//product add to cart function\nconst addToCarts=items=>{updateCart(items);};// create customer model\nconst customerModel=val=>{setModalShowCustomer(val);};//prepare data for print Model\nconst preparePrintData=()=>{const formValue={products:updateProducts,discount:cartItemValue.discount?cartItemValue.discount:0,tax:cartItemValue.tax?cartItemValue.tax:0,cartItemPrint:cartItemValue,taxTotal:taxTotal,grandTotal:grandTotal,shipping:cartItemValue.shipping,subTotal:subTotal,frontSetting:frontSetting,customer_name:selectedCustomerOption,settings:settings,note:cashPaymentValue.notes,changeReturn,payment_status:cashPaymentValue.payment_status};return formValue;};//prepare data for payment api\nconst prepareData=updateProducts=>{var _paymentValue$payment,_cashPaymentValue$pay;const formValue={date:moment(new Date()).format(\"YYYY-MM-DD\"),customer_id:selectedCustomerOption&&selectedCustomerOption[0]?selectedCustomerOption[0].value:selectedCustomerOption&&selectedCustomerOption.value,warehouse_id:selectedOption&&selectedOption[0]?selectedOption[0].value:selectedOption&&selectedOption.value,sale_items:updateProducts,grand_total:grandTotal,payment_status:1,payment_type:paymentValue===null||paymentValue===void 0?void 0:(_paymentValue$payment=paymentValue.payment_type)===null||_paymentValue$payment===void 0?void 0:_paymentValue$payment.value,discount:cartItemValue.discount,shipping:cartItemValue.shipping,tax_rate:cartItemValue.tax,note:cashPaymentValue.notes,status:1,hold_ref_no:hold_ref_no,payment_status:cashPaymentValue===null||cashPaymentValue===void 0?void 0:(_cashPaymentValue$pay=cashPaymentValue.payment_status)===null||_cashPaymentValue$pay===void 0?void 0:_cashPaymentValue$pay.value};return formValue;};//cash payment method\nconst onCashPayment=event=>{event.preventDefault();const valid=handleValidation();if(valid){posCashPaymentAction(prepareData(updateProducts),setUpdateProducts,setModalShowPaymentSlip,posAllProduct,{brandId,categoryId,selectedOption});// setModalShowPaymentSlip(true);\nsetCashPayment(false);setPaymentPrint(preparePrintData);setCartItemValue({discount:0,tax:0,shipping:0});setCashPaymentValue({notes:\"\",payment_status:{label:getFormattedMessage(\"dashboard.recentSales.paid.label\"),value:1}});setCartProductIds(\"\");}};const printPaymentReceiptPdf=()=>{document.getElementById(\"printReceipt\").click();};const printRegisterDetails=()=>{document.getElementById(\"printRegisterDetailsId\").click();};const handlePrint=useReactToPrint({content:()=>componentRef.current});const handleRegisterDetailsPrint=useReactToPrint({content:()=>registerDetailsRef.current});//payment print\nconst loadPrintBlock=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"d-none\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"printReceipt\",onClick:handlePrint,children:\"Print this out!\"}),/*#__PURE__*/_jsx(PrintData,{ref:componentRef,paymentType:paymentValue.payment_type.label,allConfigData:allConfigData,updateProducts:paymentPrint})]});};//Register details  slip\nconst loadRegisterDetailsPrint=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"d-none\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"printRegisterDetailsId\",onClick:handleRegisterDetailsPrint,children:\"Print this out!\"}),/*#__PURE__*/_jsx(PrintRegisterDetailsData,{ref:registerDetailsRef,allConfigData:allConfigData,frontSetting:frontSetting,posAllTodaySaleOverAllReport:posAllTodaySaleOverAllReport,updateProducts:paymentPrint,closeRegisterDetails:closeRegisterDetails})]});};//payment slip\nconst loadPaymentSlip=()=>{return/*#__PURE__*/_jsx(\"div\",{className:\"d-none\",children:/*#__PURE__*/_jsx(PaymentSlipModal,{printPaymentReceiptPdf:printPaymentReceiptPdf,setPaymentValue:setPaymentValue,setModalShowPaymentSlip:setModalShowPaymentSlip,settings:settings,frontSetting:frontSetting,modalShowPaymentSlip:modalShowPaymentSlip,allConfigData:allConfigData,paymentDetails:paymentDetails,updateProducts:paymentPrint,paymentType:paymentValue.payment_type.label,paymentTypeDefaultValue:paymentTypeDefaultValue})});};const[isDetails,setIsDetails]=useState(null);const[lgShow,setLgShow]=useState(false);const[holdShow,setHoldShow]=useState(false);const onClickDetailsModel=function(){let isDetails=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setLgShow(true);};const onClickHoldModel=function(){let isDetails=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setHoldShow(true);};const handleClickCloseRegister=()=>{dispatch(getAllRegisterDetailsAction());setShowCloseDetailsModal(true);};const handleCloseRegisterDetails=data=>{var _data$cash_in_hand_wh;if(((_data$cash_in_hand_wh=data.cash_in_hand_while_closing.toString().trim())===null||_data$cash_in_hand_wh===void 0?void 0:_data$cash_in_hand_wh.length)===0){dispatch(addToast({text:getFormattedMessage(\"pos.cclose-register.enter-total-cash.message\"),type:toastType.ERROR}));}else{setShowCloseDetailsModal(false);dispatch(closeRegisterAction(data,navigate));}};return/*#__PURE__*/_jsxs(Container,{className:\"pos-screen px-3\",fluid:true,children:[/*#__PURE__*/_jsx(TabTitle,{title:\"POS\"}),loadPrintBlock(),loadPaymentSlip(),loadRegisterDetailsPrint(),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(TopProgressBar,{}),/*#__PURE__*/_jsxs(Col,{lg:5,xxl:4,xs:6,className:\"pos-left-scs\",children:[/*#__PURE__*/_jsx(PosHeader,{setSelectedCustomerOption:setSelectedCustomerOption,selectedCustomerOption:selectedCustomerOption,setSelectedOption:setSelectedOption,selectedOption:selectedOption,customerModel:customerModel,updateCustomer:modalShowCustomer}),/*#__PURE__*/_jsxs(\"div\",{className:\"left-content custom-card mb-3 p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main-table overflow-auto\",children:/*#__PURE__*/_jsxs(Table,{className:\"mb-0\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"position-sticky top-0\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:getFormattedMessage(\"pos-product.title\")}),/*#__PURE__*/_jsx(\"th\",{className:updateProducts&&updateProducts.length?\"text-center\":\"\",children:getFormattedMessage(\"pos-qty.title\")}),/*#__PURE__*/_jsx(\"th\",{children:getFormattedMessage(\"pos-price.title\")}),/*#__PURE__*/_jsx(\"th\",{colSpan:\"2\",children:getFormattedMessage(\"pos-sub-total.title\")})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"border-0\",children:updateProducts&&updateProducts.length?updateProducts.map((updateProduct,index)=>{return/*#__PURE__*/_jsx(ProductCartList,{singleProduct:updateProduct,index:index,posAllProducts:posAllProducts,onClickUpdateItemInCart:onClickUpdateItemInCart,updatedQty:updatedQty,updateCost:updateCost,onDeleteCartItem:onDeleteCartItem,quantity:quantity,frontSetting:frontSetting,newCost:newCost,allConfigData:allConfigData,setUpdateProducts:setUpdateProducts},index+1);}):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:4,className:\"custom-text-center text-gray-900 fw-bold py-5\",children:getFormattedMessage(\"sale.product.table.no-data.label\")})})})]})}),/*#__PURE__*/_jsx(CartItemMainCalculation,{totalQty:totalQty,subTotal:subTotal,grandTotal:grandTotal,cartItemValue:cartItemValue,onChangeCart:onChangeCart,allConfigData:allConfigData,frontSetting:frontSetting,onChangeTaxCart:onChangeTaxCart}),/*#__PURE__*/_jsx(PaymentButton,{updateProducts:updateProducts,updateCart:addToCarts,setUpdateProducts:setUpdateProducts,setCartItemValue:setCartItemValue,setCashPayment:setCashPayment,cartItemValue:cartItemValue,grandTotal:grandTotal,subTotal:subTotal,selectedOption:selectedOption,cashPaymentValue:cashPaymentValue,holdListId:holdListId,setHoldListValue:setHoldListValue,selectedCustomerOption:selectedCustomerOption,setUpdateHoldList:setUpdateHoldList})]})]}),/*#__PURE__*/_jsx(Col,{lg:7,xxl:8,xs:6,className:\"ps-lg-0 pos-right-scs\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"right-content mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-sm-flex align-items-center flex-xxl-nowrap flex-wrap\",children:[/*#__PURE__*/_jsx(ProductSearchbar,{customCart:customCart,setUpdateProducts:setUpdateProducts,updateProducts:updateProducts// handleOnSelect={handleOnSelect} handleOnSearch={handleOnSearch}\n// searchString={searchString}\n}),/*#__PURE__*/_jsx(HeaderAllButton,{holdListData:holdListData,goToHoldScreen:onClickHoldModel,goToDetailScreen:onClickDetailsModel,onClickFullScreen:onClickFullScreen,opneCalculator:openCalculator,setOpneCalculator:setOpenCalculator,handleClickCloseRegister:handleClickCloseRegister})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"custom-card h-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-3\",children:[/*#__PURE__*/_jsx(Category,{setCategory:setCategory,brandId:brandId,selectedOption:selectedOption}),/*#__PURE__*/_jsx(Brands,{categoryId:categoryId,setBrand:setBrand,selectedOption:selectedOption})]}),/*#__PURE__*/_jsx(Product,{cartProducts:updateProducts,updateCart:addToCarts,customCart:customCart,setCartProductIds:setCartProductIds,cartProductIds:cartProductIds,settings:settings,productMsg:productMsg,selectedOption:selectedOption})]})]})})]}),isOpenCartItemUpdateModel&&/*#__PURE__*/_jsx(ProductDetailsModel,{openProductDetailModal:openProductDetailModal,productModelId:product.id,onProductUpdateInCart:onProductUpdateInCart,updateCost:updateCost,cartProduct:product,isOpenCartItemUpdateModel:isOpenCartItemUpdateModel,frontSetting:frontSetting}),cashPayment&&/*#__PURE__*/_jsx(CashPaymentModel,{cashPayment:cashPayment,totalQty:totalQty,cartItemValue:cartItemValue,onChangeInput:onChangeInput,onPaymentStatusChange:onPaymentStatusChange,cashPaymentValue:cashPaymentValue,allConfigData:allConfigData,subTotal:subTotal,onPaymentTypeChange:onPaymentTypeChange,grandTotal:grandTotal,onCashPayment:onCashPayment,taxTotal:taxTotal,handleCashPayment:handleCashPayment,settings:settings,errors:errors,paymentTypeDefaultValue:paymentTypeDefaultValue,paymentTypeFilterOptions:paymentTypeFilterOptions,onChangeReturnChange:onChangeReturnChange,setPaymentValue:setPaymentValue}),lgShow&&/*#__PURE__*/_jsx(RegisterDetailsModel,{printRegisterDetails:printRegisterDetails,frontSetting:frontSetting,lgShow:lgShow,setLgShow:setLgShow}),holdShow&&/*#__PURE__*/_jsx(HoldListModal,{setUpdateHoldList:setUpdateHoldList,setCartItemValue:setCartItemValue,setUpdateProducts:setUpdateProducts,updateProduct:updateProducts,printRegisterDetails:printRegisterDetails,frontSetting:frontSetting,holdListData:holdListData,setHold_ref_no:setHold_ref_no,holdShow:holdShow,setHoldShow:setHoldShow,addCart:addToCarts,updateCart:updateCart,setSelectedCustomerOption:setSelectedCustomerOption,setSelectedOption:setSelectedOption}),modalShowCustomer&&/*#__PURE__*/_jsx(CustomerForm,{show:modalShowCustomer,hide:setModalShowCustomer}),/*#__PURE__*/_jsx(PosCloseRegisterDetailsModel,{showCloseDetailsModal:showCloseDetailsModal,handleCloseRegisterDetails:handleCloseRegisterDetails,setShowCloseDetailsModal:setShowCloseDetailsModal})]});};const mapStateToProps=state=>{const{posAllProducts,frontSetting,settings,cashPayment,allConfigData,posAllTodaySaleOverAllReport,holdListData}=state;return{holdListData,posAllProducts,frontSetting,settings,paymentDetails:cashPayment,customCart:prepareCartArray(posAllProducts),allConfigData,posAllTodaySaleOverAllReport};};export default connect(mapStateToProps,{fetchSetting,fetchFrontSetting,posSearchNameProduct,posCashPaymentAction,posSearchCodeProduct,posAllProduct,fetchBrandClickable,fetchHoldLists})(PosMainPage);","map":{"version":3,"names":["React","useState","useEffect","useRef","Col","Container","Row","Table","connect","useDispatch","useSelector","moment","useReactToPrint","Category","Brands","Product","ProductCartList","posSearchNameProduct","posSearchCodeProduct","ProductSearchbar","prepareCartArray","ProductDetailsModel","CartItemMainCalculation","PosHeader","posCashPaymentAction","PaymentButton","CashPaymentModel","PrintData","PaymentSlipModal","fetchFrontSetting","fetchSetting","calculateProductCost","fetchBrandClickable","posAllProduct","TabTitle","HeaderAllButton","RegisterDetailsModel","PrintRegisterDetailsData","closeRegisterAction","fetchTodaySaleOverAllReport","getAllRegisterDetailsAction","getFormattedMessage","getFormattedOptions","paymentMethodOptions","toastType","TopProgressBar","CustomerForm","HoldListModal","fetchHoldLists","useNavigate","PosCloseRegisterDetailsModel","addToast","jsx","_jsx","jsxs","_jsxs","PosMainPage","props","onClickFullScreen","posAllProducts","customCart","frontSetting","settings","paymentDetails","allConfigData","posAllTodaySaleOverAllReport","holdListData","componentRef","registerDetailsRef","openCalculator","setOpenCalculator","quantity","setQuantity","updateProducts","setUpdateProducts","isOpenCartItemUpdateModel","setIsOpenCartItemUpdateModel","product","setProduct","cartProductIds","setCartProductIds","newCost","setNewCost","paymentPrint","setPaymentPrint","cashPayment","setCashPayment","modalShowPaymentSlip","setModalShowPaymentSlip","modalShowCustomer","setModalShowCustomer","productMsg","setProductMsg","brandId","setBrandId","categoryId","setCategoryId","selectedCustomerOption","setSelectedCustomerOption","selectedOption","setSelectedOption","updateHolList","setUpdateHoldList","hold_ref_no","setHold_ref_no","cartItemValue","setCartItemValue","discount","tax","shipping","cashPaymentValue","setCashPaymentValue","notes","payment_status","label","value","errors","setErrors","changeReturn","setChangeReturn","showCloseDetailsModal","setShowCloseDetailsModal","closeRegisterDetails","state","dispatch","navigate","localCart","map","updateQty","Number","totalQty","length","reduce","cart","current","localTotal","toFixed","subTotal","holdListId","setHoldListValue","referenceNumber","discountTotal","taxTotal","mainTotal","grandTotal","barcode_url","attributes","reference_code","default_customer","customer_name","default_warehouse","warehouse_name","handleValidation","isValid","setCategory","item","setBrand","onChangeInput","e","preventDefault","inputs","target","name","onPaymentStatusChange","obj","onChangeReturnChange","change","paymentTypeFilterOptions","paymentTypeDefaultValue","option","id","paymentValue","setPaymentValue","payment_type","onPaymentTypeChange","onChangeCart","event","match","decimal","split","onChangeTaxCart","min","max","values","Math","handleCashPayment","updateCost","openProductDetailModal","onClickUpdateItemInCart","onProductUpdateInCart","slice","updateCart","updatedQty","qty","cartProducts","onDeleteCartItem","productId","existingCart","filter","addToCarts","items","customerModel","val","preparePrintData","formValue","products","cartItemPrint","note","prepareData","_paymentValue$payment","_cashPaymentValue$pay","date","Date","format","customer_id","warehouse_id","sale_items","grand_total","tax_rate","status","onCashPayment","valid","printPaymentReceiptPdf","document","getElementById","click","printRegisterDetails","handlePrint","content","handleRegisterDetailsPrint","loadPrintBlock","className","children","onClick","ref","paymentType","loadRegisterDetailsPrint","loadPaymentSlip","isDetails","setIsDetails","lgShow","setLgShow","holdShow","setHoldShow","onClickDetailsModel","arguments","undefined","onClickHoldModel","handleClickCloseRegister","handleCloseRegisterDetails","data","_data$cash_in_hand_wh","cash_in_hand_while_closing","toString","trim","text","type","ERROR","fluid","title","lg","xxl","xs","updateCustomer","colSpan","updateProduct","index","singleProduct","goToHoldScreen","goToDetailScreen","opneCalculator","setOpneCalculator","productModelId","cartProduct","addCart","show","hide","mapStateToProps"],"sources":["C:/Users/Sithu/Music/react-frontend/src/frontend/components/PosMainPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Col, Container, Row, Table } from \"react-bootstrap-v5\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useReactToPrint } from \"react-to-print\";\nimport Category from \"./Category\";\nimport Brands from \"./Brand\";\nimport Product from \"./product/Product\";\nimport ProductCartList from \"./cart-product/ProductCartList\";\nimport {\n    posSearchNameProduct,\n    posSearchCodeProduct,\n} from \"../../store/action/pos/posfetchProductAction\";\nimport ProductSearchbar from \"./product/ProductSearchbar\";\nimport { prepareCartArray } from \"../shared/PrepareCartArray\";\nimport ProductDetailsModel from \"../shared/ProductDetailsModel\";\nimport CartItemMainCalculation from \"./cart-product/CartItemMainCalculation\";\nimport PosHeader from \"./header/PosHeader\";\nimport { posCashPaymentAction } from \"../../store/action/pos/posCashPaymentAction\";\nimport PaymentButton from \"./cart-product/PaymentButton\";\nimport CashPaymentModel from \"./cart-product/paymentModel/CashPaymentModel\";\nimport PrintData from \"./printModal/PrintData\";\nimport PaymentSlipModal from \"./paymentSlipModal/PaymentSlipModal\";\nimport { fetchFrontSetting } from \"../../store/action/frontSettingAction\";\nimport { fetchSetting } from \"../../store/action/settingAction\";\nimport { calculateProductCost } from \"../shared/SharedMethod\";\nimport {\n    fetchBrandClickable,\n    posAllProduct,\n} from \"../../store/action/pos/posAllProductAction\";\nimport TabTitle from \"../../shared/tab-title/TabTitle\";\nimport HeaderAllButton from \"./header/HeaderAllButton\";\nimport RegisterDetailsModel from \"./register-detailsModal/RegisterDetailsModel\";\nimport PrintRegisterDetailsData from \"./printModal/PrintRegisterDetailsData\";\nimport {\n    closeRegisterAction,\n    fetchTodaySaleOverAllReport,\n    getAllRegisterDetailsAction,\n} from \"../../store/action/pos/posRegisterDetailsAction\";\nimport {\n    getFormattedMessage,\n    getFormattedOptions,\n} from \"../../shared/sharedMethod\";\nimport { paymentMethodOptions, toastType } from \"../../constants\";\nimport TopProgressBar from \"../../shared/components/loaders/TopProgressBar\";\nimport CustomerForm from \"./customerModel/CustomerForm\";\nimport HoldListModal from \"./holdListModal/HoldListModal\";\nimport { fetchHoldLists } from \"../../store/action/pos/HoldListAction\";\nimport { useNavigate } from \"react-router\";\nimport PosCloseRegisterDetailsModel from \"../../components/posRegister/PosCloseRegisterDetailsModel.js\";\nimport { addToast } from \"../../store/action/toastAction\";\n\nconst PosMainPage = (props) => {\n    const {\n        onClickFullScreen,\n        posAllProducts,\n        customCart,\n        posCashPaymentAction,\n        frontSetting,\n        fetchFrontSetting,\n        settings,\n        fetchSetting,\n        paymentDetails,\n        allConfigData,\n        fetchBrandClickable,\n        posAllTodaySaleOverAllReport,\n        fetchHoldLists,\n        holdListData,\n    } = props;\n    const componentRef = useRef();\n    const registerDetailsRef = useRef();\n    // const [play] = useSound('https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3');\n    const [openCalculator, setOpenCalculator] = useState(false);\n    const [quantity, setQuantity] = useState(1);\n    const [updateProducts, setUpdateProducts] = useState([]);\n    const [isOpenCartItemUpdateModel, setIsOpenCartItemUpdateModel] =\n        useState(false);\n    const [product, setProduct] = useState(null);\n    const [cartProductIds, setCartProductIds] = useState([]);\n    const [newCost, setNewCost] = useState(\"\");\n    const [paymentPrint, setPaymentPrint] = useState({});\n    const [cashPayment, setCashPayment] = useState(false);\n    const [modalShowPaymentSlip, setModalShowPaymentSlip] = useState(false);\n    const [modalShowCustomer, setModalShowCustomer] = useState(false);\n    const [productMsg, setProductMsg] = useState(0);\n    const [brandId, setBrandId] = useState();\n    const [categoryId, setCategoryId] = useState();\n    const [selectedCustomerOption, setSelectedCustomerOption] = useState(null);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [updateHolList, setUpdateHoldList] = useState(false);\n    const [hold_ref_no, setHold_ref_no] = useState(\"\");\n    const [cartItemValue, setCartItemValue] = useState({\n        discount: 0,\n        tax: 0,\n        shipping: 0,\n    });\n    const [cashPaymentValue, setCashPaymentValue] = useState({\n        notes: \"\",\n        payment_status: {\n            label: getFormattedMessage(\"dashboard.recentSales.paid.label\"),\n            value: 1,\n        },\n    });\n    const [errors, setErrors] = useState({ notes: \"\" });\n    // const [searchString, setSearchString] = useState('');\n    const [changeReturn, setChangeReturn] = useState(0);\n    const [showCloseDetailsModal, setShowCloseDetailsModal] = useState(false);\n    const { closeRegisterDetails } = useSelector((state) => state);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    //total Qty on cart item\n    const localCart = updateProducts.map((updateQty) =>\n        Number(updateQty.quantity)\n    );\n    const totalQty =\n        localCart.length > 0 &&\n        localCart.reduce((cart, current) => {\n            return cart + current;\n        });\n\n    //subtotal on cart item\n    const localTotal = updateProducts.map(\n        (updateQty) =>\n            calculateProductCost(updateQty).toFixed(2) * updateQty.quantity\n    );\n    const subTotal =\n        localTotal.length > 0 &&\n        localTotal.reduce((cart, current) => {\n            return cart + current;\n        });\n\n    const [holdListId, setHoldListValue] = useState({\n        referenceNumber: \"\",\n    });\n\n    //grand total on cart item\n    const discountTotal = subTotal - cartItemValue.discount;\n    const taxTotal = (discountTotal * cartItemValue.tax) / 100;\n    const mainTotal = discountTotal + taxTotal;\n    const grandTotal = (\n        Number(mainTotal) + Number(cartItemValue.shipping)\n    ).toFixed(2);\n\n    useEffect(() => {\n        setPaymentPrint({\n            ...paymentPrint,\n            barcode_url:\n                paymentDetails.attributes &&\n                paymentDetails.attributes.barcode_url,\n            reference_code:\n                paymentDetails.attributes &&\n                paymentDetails.attributes.reference_code,\n        });\n    }, [paymentDetails]);\n\n    useEffect(() => {\n        setSelectedCustomerOption(\n            settings.attributes && {\n                value: Number(settings.attributes.default_customer),\n                label: settings.attributes.customer_name,\n            }\n        );\n        setSelectedOption(\n            settings.attributes && {\n                value: Number(settings.attributes.default_warehouse),\n                label: settings.attributes.warehouse_name,\n            }\n        );\n    }, [settings]);\n\n    useEffect(() => {\n        fetchSetting();\n        fetchFrontSetting();\n        fetchTodaySaleOverAllReport();\n        fetchHoldLists();\n    }, []);\n\n    useEffect(() => {\n        if (updateHolList === true) {\n            fetchHoldLists();\n            setUpdateHoldList(false);\n        }\n    }, [updateHolList]);\n\n    useEffect(() => {\n        setUpdateProducts(updateProducts);\n    }, [quantity, grandTotal]);\n\n    const handleValidation = () => {\n        let errors = {};\n        let isValid = false;\n        if (\n            cashPaymentValue[\"notes\"] &&\n            cashPaymentValue[\"notes\"].length > 100\n        ) {\n            errors[\"notes\"] =\n                \"The notes must not be greater than 100 characters\";\n        } else {\n            isValid = true;\n        }\n        setErrors(errors);\n        return isValid;\n    };\n\n    //filter on category id\n    const setCategory = (item) => {\n        setCategoryId(item);\n    };\n\n    useEffect(() => {\n        if (selectedOption) {\n            fetchBrandClickable(\n                brandId,\n                categoryId,\n                selectedOption.value && selectedOption.value\n            );\n        }\n    }, [selectedOption, brandId, categoryId]);\n\n    //filter on brand id\n    const setBrand = (item) => {\n        setBrandId(item);\n    };\n\n    const onChangeInput = (e) => {\n        e.preventDefault();\n        setCashPaymentValue((inputs) => ({\n            ...inputs,\n            [e.target.name]: e.target.value,\n        }));\n    };\n\n    const onPaymentStatusChange = (obj) => {\n        setCashPaymentValue((inputs) => ({ ...inputs, payment_status: obj }));\n    };\n\n    const onChangeReturnChange = (change) => {\n        setChangeReturn(change);\n    };\n\n    // payment type dropdown functionality\n    const paymentTypeFilterOptions = getFormattedOptions(paymentMethodOptions);\n    const paymentTypeDefaultValue = paymentTypeFilterOptions.map((option) => {\n        return {\n            value: option.id,\n            label: option.name,\n        };\n    });\n    const [paymentValue, setPaymentValue] = useState({\n        payment_type: paymentTypeDefaultValue[0],\n    });\n\n    const onPaymentTypeChange = (obj) => {\n        setPaymentValue({ ...paymentValue, payment_type: obj });\n    };\n\n    const onChangeCart = (event) => {\n        const { value } = event.target;\n        // check if value includes a decimal point\n        if (value.match(/\\./g)) {\n            const [, decimal] = value.split(\".\");\n            // restrict value to only 2 decimal places\n            if (decimal?.length > 2) {\n                // do nothing\n                return;\n            }\n        }\n        setCartItemValue((inputs) => ({\n            ...inputs,\n            [event.target.name]: value,\n        }));\n    };\n\n    const onChangeTaxCart = (event) => {\n        const min = 0;\n        const max = 100;\n        const { value } = event.target;\n        const values = Math.max(min, Math.min(max, Number(value)));\n        // check if value includes a decimal point\n        if (value.match(/\\./g)) {\n            const [, decimal] = value.split(\".\");\n            // restrict value to only 2 decimal places\n            if (decimal?.length > 2) {\n                // do nothing\n                return;\n            }\n        }\n        setCartItemValue((inputs) => ({\n            ...inputs,\n            [event.target.name]: values,\n        }));\n    };\n\n    //payment slip model onchange\n    const handleCashPayment = () => {\n        setCashPaymentValue({\n            notes: \"\",\n            payment_status: {\n                label: getFormattedMessage(\"dashboard.recentSales.paid.label\"),\n                value: 1,\n            },\n        });\n        setCashPayment(!cashPayment);\n    };\n\n    const updateCost = (item) => {\n        setNewCost(item);\n    };\n\n    //product details model onChange\n    const openProductDetailModal = () => {\n        setIsOpenCartItemUpdateModel(!isOpenCartItemUpdateModel);\n    };\n\n    //product details model updated value\n    const onClickUpdateItemInCart = (item) => {\n        setProduct(item);\n        setIsOpenCartItemUpdateModel(true);\n    };\n\n    const onProductUpdateInCart = () => {\n        const localCart = updateProducts.slice();\n        updateCart(localCart);\n    };\n\n    //updated Qty function\n    const updatedQty = (qty) => {\n        setQuantity(qty);\n    };\n\n    const updateCart = (cartProducts) => {\n        setUpdateProducts(cartProducts);\n    };\n\n    //cart item delete\n    const onDeleteCartItem = (productId) => {\n        const existingCart = updateProducts.filter((e) => e.id !== productId);\n        updateCart(existingCart);\n    };\n\n    //product add to cart function\n    const addToCarts = (items) => {\n        updateCart(items);\n    };\n\n    // create customer model\n    const customerModel = (val) => {\n        setModalShowCustomer(val);\n    };\n\n    //prepare data for print Model\n    const preparePrintData = () => {\n        const formValue = {\n            products: updateProducts,\n            discount: cartItemValue.discount ? cartItemValue.discount : 0,\n            tax: cartItemValue.tax ? cartItemValue.tax : 0,\n            cartItemPrint: cartItemValue,\n            taxTotal: taxTotal,\n            grandTotal: grandTotal,\n            shipping: cartItemValue.shipping,\n            subTotal: subTotal,\n            frontSetting: frontSetting,\n            customer_name: selectedCustomerOption,\n            settings: settings,\n            note: cashPaymentValue.notes,\n            changeReturn,\n            payment_status: cashPaymentValue.payment_status,\n        };\n        return formValue;\n    };\n\n    //prepare data for payment api\n    const prepareData = (updateProducts) => {\n        const formValue = {\n            date: moment(new Date()).format(\"YYYY-MM-DD\"),\n            customer_id:\n                selectedCustomerOption && selectedCustomerOption[0]\n                    ? selectedCustomerOption[0].value\n                    : selectedCustomerOption && selectedCustomerOption.value,\n            warehouse_id:\n                selectedOption && selectedOption[0]\n                    ? selectedOption[0].value\n                    : selectedOption && selectedOption.value,\n            sale_items: updateProducts,\n            grand_total: grandTotal,\n            payment_status: 1,\n            payment_type: paymentValue?.payment_type?.value,\n            discount: cartItemValue.discount,\n            shipping: cartItemValue.shipping,\n            tax_rate: cartItemValue.tax,\n            note: cashPaymentValue.notes,\n            status: 1,\n            hold_ref_no: hold_ref_no,\n            payment_status: cashPaymentValue?.payment_status?.value,\n        };\n        return formValue;\n    };\n\n    //cash payment method\n    const onCashPayment = (event) => {\n        event.preventDefault();\n        const valid = handleValidation();\n        if (valid) {\n            posCashPaymentAction(\n                prepareData(updateProducts),\n                setUpdateProducts,\n                setModalShowPaymentSlip,\n                posAllProduct,\n                {\n                    brandId,\n                    categoryId,\n                    selectedOption,\n                }\n            );\n            // setModalShowPaymentSlip(true);\n            setCashPayment(false);\n            setPaymentPrint(preparePrintData);\n            setCartItemValue({\n                discount: 0,\n                tax: 0,\n                shipping: 0,\n            });\n            setCashPaymentValue({\n                notes: \"\",\n                payment_status: {\n                    label: getFormattedMessage(\n                        \"dashboard.recentSales.paid.label\"\n                    ),\n                    value: 1,\n                },\n            });\n            setCartProductIds(\"\");\n        }\n    };\n\n    const printPaymentReceiptPdf = () => {\n        document.getElementById(\"printReceipt\").click();\n    };\n\n    const printRegisterDetails = () => {\n        document.getElementById(\"printRegisterDetailsId\").click();\n    };\n\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const handleRegisterDetailsPrint = useReactToPrint({\n        content: () => registerDetailsRef.current,\n    });\n\n    //payment print\n    const loadPrintBlock = () => {\n        return (\n            <div className=\"d-none\">\n                <button id=\"printReceipt\" onClick={handlePrint}>\n                    Print this out!\n                </button>\n                <PrintData\n                    ref={componentRef}\n                    paymentType={paymentValue.payment_type.label}\n                    allConfigData={allConfigData}\n                    updateProducts={paymentPrint}\n                />\n            </div>\n        );\n    };\n\n    //Register details  slip\n    const loadRegisterDetailsPrint = () => {\n        return (\n            <div className=\"d-none\">\n                <button\n                    id=\"printRegisterDetailsId\"\n                    onClick={handleRegisterDetailsPrint}\n                >\n                    Print this out!\n                </button>\n                <PrintRegisterDetailsData\n                    ref={registerDetailsRef}\n                    allConfigData={allConfigData}\n                    frontSetting={frontSetting}\n                    posAllTodaySaleOverAllReport={posAllTodaySaleOverAllReport}\n                    updateProducts={paymentPrint}\n                    closeRegisterDetails={closeRegisterDetails}\n                />\n            </div>\n        );\n    };\n\n    //payment slip\n    const loadPaymentSlip = () => {\n        return (\n            <div className=\"d-none\">\n                <PaymentSlipModal\n                    printPaymentReceiptPdf={printPaymentReceiptPdf}\n                    setPaymentValue={setPaymentValue}\n                    setModalShowPaymentSlip={setModalShowPaymentSlip}\n                    settings={settings}\n                    frontSetting={frontSetting}\n                    modalShowPaymentSlip={modalShowPaymentSlip}\n                    allConfigData={allConfigData}\n                    paymentDetails={paymentDetails}\n                    updateProducts={paymentPrint}\n                    paymentType={paymentValue.payment_type.label}\n                    paymentTypeDefaultValue={paymentTypeDefaultValue}\n                />\n            </div>\n        );\n    };\n    const [isDetails, setIsDetails] = useState(null);\n    const [lgShow, setLgShow] = useState(false);\n    const [holdShow, setHoldShow] = useState(false);\n\n    const onClickDetailsModel = (isDetails = null) => {\n        setLgShow(true);\n    };\n\n    const onClickHoldModel = (isDetails = null) => {\n        setHoldShow(true);\n    };\n\n    const handleClickCloseRegister = () => {\n        dispatch(getAllRegisterDetailsAction());\n        setShowCloseDetailsModal(true);\n    };\n\n    const handleCloseRegisterDetails = (data) => {\n        if (data.cash_in_hand_while_closing.toString().trim()?.length === 0) {\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"pos.cclose-register.enter-total-cash.message\"\n                    ),\n                    type: toastType.ERROR,\n                })\n            );\n        } else {\n            setShowCloseDetailsModal(false);\n            dispatch(closeRegisterAction(data, navigate));\n        }\n    };\n\n    return (\n        <Container className=\"pos-screen px-3\" fluid>\n            <TabTitle title=\"POS\" />\n            {loadPrintBlock()}\n            {loadPaymentSlip()}\n            {loadRegisterDetailsPrint()}\n            <Row>\n                <TopProgressBar />\n                <Col lg={5} xxl={4} xs={6} className=\"pos-left-scs\">\n                    <PosHeader\n                        setSelectedCustomerOption={setSelectedCustomerOption}\n                        selectedCustomerOption={selectedCustomerOption}\n                        setSelectedOption={setSelectedOption}\n                        selectedOption={selectedOption}\n                        customerModel={customerModel}\n                        updateCustomer={modalShowCustomer}\n                    />\n                    <div className=\"left-content custom-card mb-3 p-3\">\n                        <div className=\"main-table overflow-auto\">\n                            <Table className=\"mb-0\">\n                                <thead className=\"position-sticky top-0\">\n                                    <tr>\n                                        <th>\n                                            {getFormattedMessage(\n                                                \"pos-product.title\"\n                                            )}\n                                        </th>\n                                        <th\n                                            className={\n                                                updateProducts &&\n                                                updateProducts.length\n                                                    ? \"text-center\"\n                                                    : \"\"\n                                            }\n                                        >\n                                            {getFormattedMessage(\n                                                \"pos-qty.title\"\n                                            )}\n                                        </th>\n                                        <th>\n                                            {getFormattedMessage(\n                                                \"pos-price.title\"\n                                            )}\n                                        </th>\n                                        <th colSpan=\"2\">\n                                            {getFormattedMessage(\n                                                \"pos-sub-total.title\"\n                                            )}\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"border-0\">\n                                    {updateProducts && updateProducts.length ? (\n                                        updateProducts.map(\n                                            (updateProduct, index) => {\n                                                return (\n                                                    <ProductCartList\n                                                        singleProduct={\n                                                            updateProduct\n                                                        }\n                                                        key={index + 1}\n                                                        index={index}\n                                                        posAllProducts={\n                                                            posAllProducts\n                                                        }\n                                                        onClickUpdateItemInCart={\n                                                            onClickUpdateItemInCart\n                                                        }\n                                                        updatedQty={updatedQty}\n                                                        updateCost={updateCost}\n                                                        onDeleteCartItem={\n                                                            onDeleteCartItem\n                                                        }\n                                                        quantity={quantity}\n                                                        frontSetting={\n                                                            frontSetting\n                                                        }\n                                                        newCost={newCost}\n                                                        allConfigData={\n                                                            allConfigData\n                                                        }\n                                                        setUpdateProducts={\n                                                            setUpdateProducts\n                                                        }\n                                                    />\n                                                );\n                                            }\n                                        )\n                                    ) : (\n                                        <tr>\n                                            <td\n                                                colSpan={4}\n                                                className=\"custom-text-center text-gray-900 fw-bold py-5\"\n                                            >\n                                                {getFormattedMessage(\n                                                    \"sale.product.table.no-data.label\"\n                                                )}\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </Table>\n                        </div>\n                        <CartItemMainCalculation\n                            totalQty={totalQty}\n                            subTotal={subTotal}\n                            grandTotal={grandTotal}\n                            cartItemValue={cartItemValue}\n                            onChangeCart={onChangeCart}\n                            allConfigData={allConfigData}\n                            frontSetting={frontSetting}\n                            onChangeTaxCart={onChangeTaxCart}\n                        />\n                        <PaymentButton\n                            updateProducts={updateProducts}\n                            updateCart={addToCarts}\n                            setUpdateProducts={setUpdateProducts}\n                            setCartItemValue={setCartItemValue}\n                            setCashPayment={setCashPayment}\n                            cartItemValue={cartItemValue}\n                            grandTotal={grandTotal}\n                            subTotal={subTotal}\n                            selectedOption={selectedOption}\n                            cashPaymentValue={cashPaymentValue}\n                            holdListId={holdListId}\n                            setHoldListValue={setHoldListValue}\n                            selectedCustomerOption={selectedCustomerOption}\n                            setUpdateHoldList={setUpdateHoldList}\n                        />\n                    </div>\n                </Col>\n                <Col lg={7} xxl={8} xs={6} className=\"ps-lg-0 pos-right-scs\">\n                    <div className=\"right-content mb-3\">\n                        <div className=\"d-sm-flex align-items-center flex-xxl-nowrap flex-wrap\">\n                            <ProductSearchbar\n                                customCart={customCart}\n                                setUpdateProducts={setUpdateProducts}\n                                updateProducts={updateProducts}\n                                // handleOnSelect={handleOnSelect} handleOnSearch={handleOnSearch}\n                                // searchString={searchString}\n                            />\n                            <HeaderAllButton\n                                holdListData={holdListData}\n                                goToHoldScreen={onClickHoldModel}\n                                goToDetailScreen={onClickDetailsModel}\n                                onClickFullScreen={onClickFullScreen}\n                                opneCalculator={openCalculator}\n                                setOpneCalculator={setOpenCalculator}\n                                handleClickCloseRegister={\n                                    handleClickCloseRegister\n                                }\n                            />\n                        </div>\n                        <div className=\"custom-card h-100\">\n                            <div className=\"p-3\">\n                                <Category\n                                    setCategory={setCategory}\n                                    brandId={brandId}\n                                    selectedOption={selectedOption}\n                                />\n                                <Brands\n                                    categoryId={categoryId}\n                                    setBrand={setBrand}\n                                    selectedOption={selectedOption}\n                                />\n                            </div>\n                            <Product\n                                cartProducts={updateProducts}\n                                updateCart={addToCarts}\n                                customCart={customCart}\n                                setCartProductIds={setCartProductIds}\n                                cartProductIds={cartProductIds}\n                                settings={settings}\n                                productMsg={productMsg}\n                                selectedOption={selectedOption}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n            {isOpenCartItemUpdateModel && (\n                <ProductDetailsModel\n                    openProductDetailModal={openProductDetailModal}\n                    productModelId={product.id}\n                    onProductUpdateInCart={onProductUpdateInCart}\n                    updateCost={updateCost}\n                    cartProduct={product}\n                    isOpenCartItemUpdateModel={isOpenCartItemUpdateModel}\n                    frontSetting={frontSetting}\n                />\n            )}\n            {cashPayment && (\n                <CashPaymentModel\n                    cashPayment={cashPayment}\n                    totalQty={totalQty}\n                    cartItemValue={cartItemValue}\n                    onChangeInput={onChangeInput}\n                    onPaymentStatusChange={onPaymentStatusChange}\n                    cashPaymentValue={cashPaymentValue}\n                    allConfigData={allConfigData}\n                    subTotal={subTotal}\n                    onPaymentTypeChange={onPaymentTypeChange}\n                    grandTotal={grandTotal}\n                    onCashPayment={onCashPayment}\n                    taxTotal={taxTotal}\n                    handleCashPayment={handleCashPayment}\n                    settings={settings}\n                    errors={errors}\n                    paymentTypeDefaultValue={paymentTypeDefaultValue}\n                    paymentTypeFilterOptions={paymentTypeFilterOptions}\n                    onChangeReturnChange={onChangeReturnChange}\n                    setPaymentValue={setPaymentValue}\n                />\n            )}\n            {lgShow && (\n                <RegisterDetailsModel\n                    printRegisterDetails={printRegisterDetails}\n                    frontSetting={frontSetting}\n                    lgShow={lgShow}\n                    setLgShow={setLgShow}\n                />\n            )}\n            {holdShow && (\n                <HoldListModal\n                    setUpdateHoldList={setUpdateHoldList}\n                    setCartItemValue={setCartItemValue}\n                    setUpdateProducts={setUpdateProducts}\n                    updateProduct={updateProducts}\n                    printRegisterDetails={printRegisterDetails}\n                    frontSetting={frontSetting}\n                    holdListData={holdListData}\n                    setHold_ref_no={setHold_ref_no}\n                    holdShow={holdShow}\n                    setHoldShow={setHoldShow}\n                    addCart={addToCarts}\n                    updateCart={updateCart}\n                    setSelectedCustomerOption={setSelectedCustomerOption}\n                    setSelectedOption={setSelectedOption}\n                />\n            )}\n            {modalShowCustomer && (\n                <CustomerForm\n                    show={modalShowCustomer}\n                    hide={setModalShowCustomer}\n                />\n            )}\n            <PosCloseRegisterDetailsModel\n                showCloseDetailsModal={showCloseDetailsModal}\n                handleCloseRegisterDetails={handleCloseRegisterDetails}\n                setShowCloseDetailsModal={setShowCloseDetailsModal}\n            />\n        </Container>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const {\n        posAllProducts,\n        frontSetting,\n        settings,\n        cashPayment,\n        allConfigData,\n        posAllTodaySaleOverAllReport,\n        holdListData,\n    } = state;\n    return {\n        holdListData,\n        posAllProducts,\n        frontSetting,\n        settings,\n        paymentDetails: cashPayment,\n        customCart: prepareCartArray(posAllProducts),\n        allConfigData,\n        posAllTodaySaleOverAllReport,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    fetchSetting,\n    fetchFrontSetting,\n    posSearchNameProduct,\n    posCashPaymentAction,\n    posSearchCodeProduct,\n    posAllProduct,\n    fetchBrandClickable,\n    fetchHoldLists,\n})(PosMainPage);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}