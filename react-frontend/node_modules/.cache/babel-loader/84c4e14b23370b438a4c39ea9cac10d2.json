{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,productCategoriesActionType,toastType}from\"../../constants\";import{addToast}from\"./toastAction\";import{addInToTotalRecord,setTotalRecord,removeFromTotalRecord}from\"./totalRecordAction\";import requestParam from\"../../shared/requestParam\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";export const fetchProductCategories=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}let url=apiBaseURL.PRODUCTS_CATEGORIES;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at)){url+=requestParam(filter,null,null,null,url);}apiConfig.get(url).then(response=>{dispatch({type:productCategoriesActionType.FETCH_PRODUCTS_CATEGORIES,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total));}).catch(response=>{dispatch(addToast({text:response.response.data.message,type:toastType.ERROR}));}).finally(()=>{if(isLoading){dispatch(setLoading(false));}});};};export const fetchProductCategory=(productId,singleProduct)=>async dispatch=>{apiConfig.get(apiBaseURL.PRODUCTS_CATEGORIES+\"/\"+productId,singleProduct).then(response=>{dispatch({type:productCategoriesActionType.FETCH_PRODUCT_CATEGORIES,payload:response.data.data});}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const addProductCategory=products=>async dispatch=>{await apiConfig.post(apiBaseURL.PRODUCTS_CATEGORIES,products).then(response=>{dispatch({type:productCategoriesActionType.ADD_PRODUCT_CATEGORIES,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"product-category.success.create.message\")}));dispatch(addInToTotalRecord(1));}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editProductCategory=(productId,products,handleClose)=>async dispatch=>{apiConfig.post(apiBaseURL.PRODUCTS_CATEGORIES+\"/\"+productId,products).then(response=>{dispatch({type:productCategoriesActionType.EDIT_PRODUCT_CATEGORIES,payload:response.data.data});handleClose(false);dispatch(addToast({text:getFormattedMessage(\"product-category.success.edit.message\")}));}).catch(_ref3=>{let{response}=_ref3;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteProductCategory=productId=>async dispatch=>{apiConfig.delete(apiBaseURL.PRODUCTS_CATEGORIES+\"/\"+productId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch({type:productCategoriesActionType.DELETE_PRODUCT_CATEGORIES,payload:productId});dispatch(addToast({text:getFormattedMessage(\"product-category.success.delete.message\")}));}).catch(_ref4=>{let{response}=_ref4;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const fetchAllProductCategories=()=>async dispatch=>{apiConfig.get(`product-categories?page[size]=0`).then(response=>{dispatch({type:productCategoriesActionType.FETCH_ALL_PRODUCTS_CATEGORIES,payload:response.data.data});}).catch(_ref5=>{let{response}=_ref5;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","productCategoriesActionType","toastType","addToast","addInToTotalRecord","setTotalRecord","removeFromTotalRecord","requestParam","setLoading","getFormattedMessage","fetchProductCategories","filter","arguments","length","undefined","isLoading","dispatch","url","PRODUCTS_CATEGORIES","_","isEmpty","page","pageSize","search","order_By","created_at","get","then","response","type","FETCH_PRODUCTS_CATEGORIES","payload","data","meta","total","catch","text","message","ERROR","finally","fetchProductCategory","productId","singleProduct","FETCH_PRODUCT_CATEGORIES","_ref","addProductCategory","products","post","ADD_PRODUCT_CATEGORIES","_ref2","editProductCategory","handleClose","EDIT_PRODUCT_CATEGORIES","_ref3","deleteProductCategory","delete","DELETE_PRODUCT_CATEGORIES","_ref4","fetchAllProductCategories","FETCH_ALL_PRODUCTS_CATEGORIES","_ref5"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/productCategoryAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport {\n    apiBaseURL,\n    productCategoriesActionType,\n    toastType,\n} from \"../../constants\";\nimport { addToast } from \"./toastAction\";\nimport {\n    addInToTotalRecord,\n    setTotalRecord,\n    removeFromTotalRecord,\n} from \"./totalRecordAction\";\nimport requestParam from \"../../shared/requestParam\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\n\nexport const fetchProductCategories =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        let url = apiBaseURL.PRODUCTS_CATEGORIES;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at)\n        ) {\n            url += requestParam(filter, null, null, null, url);\n        }\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: productCategoriesActionType.FETCH_PRODUCTS_CATEGORIES,\n                    payload: response.data.data,\n                });\n                dispatch(setTotalRecord(response.data.meta.total));\n            })\n            .catch((response) => {\n                dispatch(\n                    addToast({\n                        text: response.response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            })\n            .finally(() => {\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            });\n    };\n\nexport const fetchProductCategory =\n    (productId, singleProduct) => async (dispatch) => {\n        apiConfig\n            .get(\n                apiBaseURL.PRODUCTS_CATEGORIES + \"/\" + productId,\n                singleProduct\n            )\n            .then((response) => {\n                dispatch({\n                    type: productCategoriesActionType.FETCH_PRODUCT_CATEGORIES,\n                    payload: response.data.data,\n                });\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const addProductCategory = (products) => async (dispatch) => {\n    await apiConfig\n        .post(apiBaseURL.PRODUCTS_CATEGORIES, products)\n        .then((response) => {\n            dispatch({\n                type: productCategoriesActionType.ADD_PRODUCT_CATEGORIES,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"product-category.success.create.message\"\n                    ),\n                })\n            );\n            dispatch(addInToTotalRecord(1));\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editProductCategory =\n    (productId, products, handleClose) => async (dispatch) => {\n        apiConfig\n            .post(apiBaseURL.PRODUCTS_CATEGORIES + \"/\" + productId, products)\n            .then((response) => {\n                dispatch({\n                    type: productCategoriesActionType.EDIT_PRODUCT_CATEGORIES,\n                    payload: response.data.data,\n                });\n                handleClose(false);\n                dispatch(\n                    addToast({\n                        text: getFormattedMessage(\n                            \"product-category.success.edit.message\"\n                        ),\n                    })\n                );\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const deleteProductCategory = (productId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.PRODUCTS_CATEGORIES + \"/\" + productId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({\n                type: productCategoriesActionType.DELETE_PRODUCT_CATEGORIES,\n                payload: productId,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"product-category.success.delete.message\"\n                    ),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const fetchAllProductCategories = () => async (dispatch) => {\n    apiConfig\n        .get(`product-categories?page[size]=0`)\n        .then((response) => {\n            dispatch({\n                type: productCategoriesActionType.FETCH_ALL_PRODUCTS_CATEGORIES,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}