{"ast":null,"code":"import React,{useState}from\"react\";import{connect}from\"react-redux\";import moment from\"moment\";import{useNavigate}from\"react-router-dom\";import MasterLayout from\"../MasterLayout\";import{fetchCustomers}from\"../../store/action/customerAction\";import ReactDataTable from\"../../shared/table/ReactDataTable\";import DeleteCustomer from\"./DeleteCustomer\";import TabTitle from\"../../shared/tab-title/TabTitle\";import{getFormattedDate,getFormattedMessage,placeholderText}from\"../../shared/sharedMethod\";import ActionButton from\"../../shared/action-buttons/ActionButton\";import TopProgressBar from\"../../shared/components/loaders/TopProgressBar\";import ImportCustomersModel from\"./ImportCustomersModel\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Customers=props=>{const{fetchCustomers,customers,totalRecord,isLoading,allConfigData}=props;const[deleteModel,setDeleteModel]=useState(false);const[isDelete,setIsDelete]=useState(null);const navigate=useNavigate();const[importCustomers,setImportCustomers]=useState(false);const handleClose=()=>{setImportCustomers(!importCustomers);};const onClickDeleteModel=function(){let isDelete=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setDeleteModel(!deleteModel);setIsDelete(isDelete);};const onChange=filter=>{fetchCustomers(filter,true);};const goToEditProduct=item=>{const id=item.id;navigate(`/app/customers/edit/${id}`);};const itemsValue=customers.length>=0&&customers.map(customer=>({date:getFormattedDate(customer.attributes.created_at,allConfigData&&allConfigData),time:moment(customer.attributes.created_at).format(\"LT\"),name:customer.attributes.name,email:customer.attributes.email,phone:customer.attributes.phone,country:customer.attributes.country,city:customer.attributes.city,id:customer.id}));const columns=[{name:getFormattedMessage(\"customer.title\"),selector:row=>row.name,sortField:\"name\",sortable:true,cell:row=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-primary\",children:row.name}),/*#__PURE__*/_jsx(\"div\",{children:row.email})]});}},{name:getFormattedMessage(\"globally.input.phone-number.label\"),selector:row=>row.phone,sortField:\"phone\",sortable:true},{name:getFormattedMessage(\"globally.react-table.column.created-date.label\"),selector:row=>row.date,sortField:\"created_at\",sortable:true,cell:row=>{return/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-light-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-1\",children:row.time}),row.date]});}},{name:getFormattedMessage(\"react-data-table.action.column.label\"),right:true,ignoreRowClick:true,allowOverflow:true,button:true,cell:row=>/*#__PURE__*/_jsx(ActionButton,{item:row,goToEditProduct:goToEditProduct,isEditMode:true,onClickDeleteModel:onClickDeleteModel})}];return/*#__PURE__*/_jsxs(MasterLayout,{children:[/*#__PURE__*/_jsx(TopProgressBar,{}),/*#__PURE__*/_jsx(TabTitle,{title:placeholderText(\"customers.title\")}),/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,items:itemsValue,onChange:onChange,isLoading:isLoading,ButtonValue:getFormattedMessage(\"customer.create.title\"),totalRows:totalRecord,buttonImport:true,goToImport:handleClose,importBtnTitle:\"customers.import.title\",to:\"#/app/customers/create\"}),/*#__PURE__*/_jsx(DeleteCustomer,{onClickDeleteModel:onClickDeleteModel,deleteModel:deleteModel,onDelete:isDelete}),importCustomers&&/*#__PURE__*/_jsx(ImportCustomersModel,{handleClose:handleClose,show:importCustomers})]});};const mapStateToProps=state=>{const{customers,totalRecord,isLoading,allConfigData}=state;return{customers,totalRecord,isLoading,allConfigData};};export default connect(mapStateToProps,{fetchCustomers})(Customers);","map":{"version":3,"names":["React","useState","connect","moment","useNavigate","MasterLayout","fetchCustomers","ReactDataTable","DeleteCustomer","TabTitle","getFormattedDate","getFormattedMessage","placeholderText","ActionButton","TopProgressBar","ImportCustomersModel","jsx","_jsx","jsxs","_jsxs","Customers","props","customers","totalRecord","isLoading","allConfigData","deleteModel","setDeleteModel","isDelete","setIsDelete","navigate","importCustomers","setImportCustomers","handleClose","onClickDeleteModel","arguments","length","undefined","onChange","filter","goToEditProduct","item","id","itemsValue","map","customer","date","attributes","created_at","time","format","name","email","phone","country","city","columns","selector","row","sortField","sortable","cell","children","className","right","ignoreRowClick","allowOverflow","button","isEditMode","title","items","ButtonValue","totalRows","buttonImport","goToImport","importBtnTitle","to","onDelete","show","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/customer/Customers.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport MasterLayout from \"../MasterLayout\";\nimport { fetchCustomers } from \"../../store/action/customerAction\";\nimport ReactDataTable from \"../../shared/table/ReactDataTable\";\nimport DeleteCustomer from \"./DeleteCustomer\";\nimport TabTitle from \"../../shared/tab-title/TabTitle\";\nimport {\n    getFormattedDate,\n    getFormattedMessage,\n    placeholderText,\n} from \"../../shared/sharedMethod\";\nimport ActionButton from \"../../shared/action-buttons/ActionButton\";\nimport TopProgressBar from \"../../shared/components/loaders/TopProgressBar\";\nimport ImportCustomersModel from \"./ImportCustomersModel\";\n\nconst Customers = (props) => {\n    const { fetchCustomers, customers, totalRecord, isLoading, allConfigData } =\n        props;\n    const [deleteModel, setDeleteModel] = useState(false);\n    const [isDelete, setIsDelete] = useState(null);\n    const navigate = useNavigate();\n    const [importCustomers, setImportCustomers] = useState(false);\n    const handleClose = () => {\n        setImportCustomers(!importCustomers);\n    };\n    const onClickDeleteModel = (isDelete = null) => {\n        setDeleteModel(!deleteModel);\n        setIsDelete(isDelete);\n    };\n\n    const onChange = (filter) => {\n        fetchCustomers(filter, true);\n    };\n\n    const goToEditProduct = (item) => {\n        const id = item.id;\n        navigate(`/app/customers/edit/${id}`);\n    };\n\n    const itemsValue =\n        customers.length >= 0 &&\n        customers.map((customer) => ({\n            date: getFormattedDate(\n                customer.attributes.created_at,\n                allConfigData && allConfigData\n            ),\n            time: moment(customer.attributes.created_at).format(\"LT\"),\n            name: customer.attributes.name,\n            email: customer.attributes.email,\n            phone: customer.attributes.phone,\n            country: customer.attributes.country,\n            city: customer.attributes.city,\n            id: customer.id,\n        }));\n\n    const columns = [\n        {\n            name: getFormattedMessage(\"customer.title\"),\n            selector: (row) => row.name,\n            sortField: \"name\",\n            sortable: true,\n            cell: (row) => {\n                return (\n                    <div>\n                        <div className=\"text-primary\">{row.name}</div>\n                        <div>{row.email}</div>\n                    </div>\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"globally.input.phone-number.label\"),\n            selector: (row) => row.phone,\n            sortField: \"phone\",\n            sortable: true,\n        },\n        {\n            name: getFormattedMessage(\n                \"globally.react-table.column.created-date.label\"\n            ),\n            selector: (row) => row.date,\n            sortField: \"created_at\",\n            sortable: true,\n            cell: (row) => {\n                return (\n                    <span className=\"badge bg-light-info\">\n                        <div className=\"mb-1\">{row.time}</div>\n                        {row.date}\n                    </span>\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"react-data-table.action.column.label\"),\n            right: true,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n            cell: (row) => (\n                <ActionButton\n                    item={row}\n                    goToEditProduct={goToEditProduct}\n                    isEditMode={true}\n                    onClickDeleteModel={onClickDeleteModel}\n                />\n            ),\n        },\n    ];\n\n    return (\n        <MasterLayout>\n            <TopProgressBar />\n            <TabTitle title={placeholderText(\"customers.title\")} />\n            <ReactDataTable\n                columns={columns}\n                items={itemsValue}\n                onChange={onChange}\n                isLoading={isLoading}\n                ButtonValue={getFormattedMessage(\"customer.create.title\")}\n                totalRows={totalRecord}\n                buttonImport={true}\n                goToImport={handleClose}\n                importBtnTitle={\"customers.import.title\"}\n                to=\"#/app/customers/create\"\n            />\n            <DeleteCustomer\n                onClickDeleteModel={onClickDeleteModel}\n                deleteModel={deleteModel}\n                onDelete={isDelete}\n            />\n            {importCustomers && (\n                <ImportCustomersModel\n                    handleClose={handleClose}\n                    show={importCustomers}\n                />\n            )}\n        </MasterLayout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { customers, totalRecord, isLoading, allConfigData } = state;\n    return { customers, totalRecord, isLoading, allConfigData };\n};\n\nexport default connect(mapStateToProps, { fetchCustomers })(Customers);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}