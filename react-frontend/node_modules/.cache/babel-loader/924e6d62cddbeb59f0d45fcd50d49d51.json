{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,unitsActionType,toastType,Filters}from\"../../constants\";import requestParam from\"../../shared/requestParam\";import{addToast}from\"./toastAction\";import{setTotalRecord,addInToTotalRecord,removeFromTotalRecord}from\"./totalRecordAction\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";export const fetchUnits=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}let url=apiBaseURL.UNITS;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at)){url+=requestParam(filter,null,null,null,url);}apiConfig.get(url).then(response=>{dispatch({type:unitsActionType.FETCH_UNITS,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const fetchAllunits=()=>async dispatch=>{apiConfig.get(`units?page[size]=0`).then(response=>{dispatch({type:warehouseActionType.FETCH_UNITS,payload:response.data.data});}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const fetchUnit=(unitId,singleUnit)=>async dispatch=>{apiConfig.get(apiBaseURL.UNITS+\"/\"+unitId,singleUnit).then(response=>{dispatch({type:unitsActionType.FETCH_UNIT,payload:response.data.data});}).catch(_ref3=>{let{response}=_ref3;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const addUnit=units=>async dispatch=>{await apiConfig.post(apiBaseURL.UNITS,units).then(response=>{dispatch({type:unitsActionType.ADD_UNIT,payload:response.data.data});dispatch(fetchUnits(Filters.OBJ));dispatch(addToast({text:getFormattedMessage(\"unit.success.create.message\")}));dispatch(addInToTotalRecord(1));}).catch(_ref4=>{let{response}=_ref4;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editUnit=(unitId,units,handleClose)=>async dispatch=>{apiConfig.patch(apiBaseURL.UNITS+\"/\"+unitId,units).then(response=>{dispatch({type:unitsActionType.EDIT_UNIT,payload:response.data.data});handleClose(false);dispatch(addToast({text:getFormattedMessage(\"unit.success.edit.message\")}));}).catch(_ref5=>{let{response}=_ref5;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteUnit=unitId=>async dispatch=>{apiConfig.delete(apiBaseURL.UNITS+\"/\"+unitId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch({type:unitsActionType.DELETE_UNIT,payload:unitId});dispatch(addToast({text:getFormattedMessage(\"unit.success.delete.message\")}));}).catch(_ref6=>{let{response}=_ref6;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","unitsActionType","toastType","Filters","requestParam","addToast","setTotalRecord","addInToTotalRecord","removeFromTotalRecord","setLoading","getFormattedMessage","fetchUnits","filter","arguments","length","undefined","isLoading","dispatch","url","UNITS","_","isEmpty","page","pageSize","search","order_By","created_at","get","then","response","type","FETCH_UNITS","payload","data","meta","total","catch","_ref","text","message","ERROR","fetchAllunits","warehouseActionType","_ref2","fetchUnit","unitId","singleUnit","FETCH_UNIT","_ref3","addUnit","units","post","ADD_UNIT","OBJ","_ref4","editUnit","handleClose","patch","EDIT_UNIT","_ref5","deleteUnit","delete","DELETE_UNIT","_ref6"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/unitsAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport {\n    apiBaseURL,\n    unitsActionType,\n    toastType,\n    Filters,\n} from \"../../constants\";\nimport requestParam from \"../../shared/requestParam\";\nimport { addToast } from \"./toastAction\";\nimport {\n    setTotalRecord,\n    addInToTotalRecord,\n    removeFromTotalRecord,\n} from \"./totalRecordAction\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\n\nexport const fetchUnits =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        let url = apiBaseURL.UNITS;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at)\n        ) {\n            url += requestParam(filter, null, null, null, url);\n        }\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: unitsActionType.FETCH_UNITS,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchAllunits = () => async (dispatch) => {\n    apiConfig\n        .get(`units?page[size]=0`)\n        .then((response) => {\n            dispatch({\n                type: warehouseActionType.FETCH_UNITS,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const fetchUnit = (unitId, singleUnit) => async (dispatch) => {\n    apiConfig\n        .get(apiBaseURL.UNITS + \"/\" + unitId, singleUnit)\n        .then((response) => {\n            dispatch({\n                type: unitsActionType.FETCH_UNIT,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const addUnit = (units) => async (dispatch) => {\n    await apiConfig\n        .post(apiBaseURL.UNITS, units)\n        .then((response) => {\n            dispatch({\n                type: unitsActionType.ADD_UNIT,\n                payload: response.data.data,\n            });\n            dispatch(fetchUnits(Filters.OBJ));\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"unit.success.create.message\"),\n                })\n            );\n            dispatch(addInToTotalRecord(1));\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editUnit = (unitId, units, handleClose) => async (dispatch) => {\n    apiConfig\n        .patch(apiBaseURL.UNITS + \"/\" + unitId, units)\n        .then((response) => {\n            dispatch({\n                type: unitsActionType.EDIT_UNIT,\n                payload: response.data.data,\n            });\n            handleClose(false);\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"unit.success.edit.message\"),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const deleteUnit = (unitId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.UNITS + \"/\" + unitId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({ type: unitsActionType.DELETE_UNIT, payload: unitId });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"unit.success.delete.message\"),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}