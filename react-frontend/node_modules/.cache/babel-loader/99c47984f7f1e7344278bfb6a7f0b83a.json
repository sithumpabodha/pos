{"ast":null,"code":"import React,{useEffect}from'react';import{useNavigate}from'react-router-dom';import{connect}from'react-redux';import RoleFrom from'./RoleForm';import{addRole}from'../../store/action/roleAction';import MasterLayout from'../MasterLayout';import HeaderTitle from'../header/HeaderTitle';import{fetchPermissions}from'../../store/action/permissionAction';import{getFormattedMessage}from\"../../shared/sharedMethod\";import TopProgressBar from\"../../shared/components/loaders/TopProgressBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const CreateRole=props=>{const{addRole,fetchPermissions,permissions}=props;const navigate=useNavigate();useEffect(()=>{fetchPermissions();},[]);const addRolesData=formValue=>{addRole(formValue,navigate);};const prepareFormOption={addRolesData,permissionsArray:permissions};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(MasterLayout,{children:[/*#__PURE__*/_jsx(TopProgressBar,{}),/*#__PURE__*/_jsx(HeaderTitle,{title:getFormattedMessage(\"role.create.title\"),to:\"/app/roles\"}),permissions.length!==0&&/*#__PURE__*/_jsx(RoleFrom,{...prepareFormOption})]})});};const preparePermissions=permissions=>{let permissionArray=[];permissions.forEach(permission=>{permissionArray.push({id:permission.id,name:permission.attributes.display_name});});return permissionArray;};const mapStateToProps=state=>{const{permissions}=state;return{permissions:preparePermissions(permissions)};};export default connect(mapStateToProps,{addRole,fetchPermissions})(CreateRole);","map":{"version":3,"names":["React","useEffect","useNavigate","connect","RoleFrom","addRole","MasterLayout","HeaderTitle","fetchPermissions","getFormattedMessage","TopProgressBar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CreateRole","props","permissions","navigate","addRolesData","formValue","prepareFormOption","permissionsArray","children","title","to","length","preparePermissions","permissionArray","forEach","permission","push","id","name","attributes","display_name","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/roles/CreateRole.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport RoleFrom from './RoleForm';\nimport {addRole} from '../../store/action/roleAction';\nimport MasterLayout from '../MasterLayout';\nimport HeaderTitle from '../header/HeaderTitle';\nimport {fetchPermissions} from '../../store/action/permissionAction';\nimport {getFormattedMessage} from \"../../shared/sharedMethod\";\nimport TopProgressBar from \"../../shared/components/loaders/TopProgressBar\";\n\nconst CreateRole = (props) => {\n    const {addRole, fetchPermissions, permissions} = props;\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchPermissions();\n    }, []);\n\n    const addRolesData = (formValue) => {\n        addRole(formValue, navigate);\n    };\n\n    const prepareFormOption = {\n        addRolesData,\n        permissionsArray: permissions\n    };\n\n    return (\n        <>\n            <MasterLayout>\n                <TopProgressBar/>\n                <HeaderTitle title={getFormattedMessage(\"role.create.title\")} to='/app/roles'/>\n                {permissions.length !== 0 && <RoleFrom {...prepareFormOption}/>}\n            </MasterLayout>\n        </>\n    );\n}\n\nconst preparePermissions = permissions => {\n    let permissionArray = [];\n    permissions.forEach(permission => {\n        permissionArray.push({id: permission.id, name: permission.attributes.display_name})\n    });\n    return permissionArray;\n};\n\nconst mapStateToProps = (state) => {\n    const {permissions} = state;\n    return {permissions: preparePermissions(permissions)}\n};\n\nexport default connect(mapStateToProps, {addRole, fetchPermissions})(CreateRole);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,KAAO,OAAO,CACtC,OAAQC,WAAW,KAAO,kBAAkB,CAC5C,OAAQC,OAAO,KAAO,aAAa,CACnC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,OAAQC,OAAO,KAAO,+BAA+B,CACrD,MAAO,CAAAC,YAAY,KAAM,iBAAiB,CAC1C,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAC/C,OAAQC,gBAAgB,KAAO,qCAAqC,CACpE,OAAQC,mBAAmB,KAAO,2BAA2B,CAC7D,MAAO,CAAAC,cAAc,KAAM,gDAAgD,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE5E,KAAM,CAAAC,UAAU,CAAIC,KAAK,EAAK,CAC1B,KAAM,CAACb,OAAO,CAAEG,gBAAgB,CAAEW,WAAW,CAAC,CAAGD,KAAK,CACtD,KAAM,CAAAE,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACZO,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAa,YAAY,CAAIC,SAAS,EAAK,CAChCjB,OAAO,CAACiB,SAAS,CAAEF,QAAQ,CAAC,CAChC,CAAC,CAED,KAAM,CAAAG,iBAAiB,CAAG,CACtBF,YAAY,CACZG,gBAAgB,CAAEL,WACtB,CAAC,CAED,mBACIP,IAAA,CAAAI,SAAA,EAAAS,QAAA,cACIX,KAAA,CAACR,YAAY,EAAAmB,QAAA,eACTb,IAAA,CAACF,cAAc,GAAC,CAAC,cACjBE,IAAA,CAACL,WAAW,EAACmB,KAAK,CAAEjB,mBAAmB,CAAC,mBAAmB,CAAE,CAACkB,EAAE,CAAC,YAAY,CAAC,CAAC,CAC9ER,WAAW,CAACS,MAAM,GAAK,CAAC,eAAIhB,IAAA,CAACR,QAAQ,KAAKmB,iBAAiB,CAAE,CAAC,EACrD,CAAC,CACjB,CAAC,CAEX,CAAC,CAED,KAAM,CAAAM,kBAAkB,CAAGV,WAAW,EAAI,CACtC,GAAI,CAAAW,eAAe,CAAG,EAAE,CACxBX,WAAW,CAACY,OAAO,CAACC,UAAU,EAAI,CAC9BF,eAAe,CAACG,IAAI,CAAC,CAACC,EAAE,CAAEF,UAAU,CAACE,EAAE,CAAEC,IAAI,CAAEH,UAAU,CAACI,UAAU,CAACC,YAAY,CAAC,CAAC,CACvF,CAAC,CAAC,CACF,MAAO,CAAAP,eAAe,CAC1B,CAAC,CAED,KAAM,CAAAQ,eAAe,CAAIC,KAAK,EAAK,CAC/B,KAAM,CAACpB,WAAW,CAAC,CAAGoB,KAAK,CAC3B,MAAO,CAACpB,WAAW,CAAEU,kBAAkB,CAACV,WAAW,CAAC,CAAC,CACzD,CAAC,CAED,cAAe,CAAAhB,OAAO,CAACmC,eAAe,CAAE,CAACjC,OAAO,CAAEG,gBAAgB,CAAC,CAAC,CAACS,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}