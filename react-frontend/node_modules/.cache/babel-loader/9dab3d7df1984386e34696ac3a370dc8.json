{"ast":null,"code":"import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import MasterLayout from'../MasterLayout';import{fetchBrands}from'../../store/action/brandsAction';import ReactDataTable from'../../shared/table/ReactDataTable';import ActionButton from'../../shared/action-buttons/ActionButton';import DeleteBrands from'./DeleteBrands';import user from'../../assets/images/brand_logo.png';import CreateBrands from'./CreateBrands.js';import EditBrands from'./EditBrands';import TabTitle from'../../shared/tab-title/TabTitle';import{getFormattedMessage,placeholderText}from'../../shared/sharedMethod';import{Tokens}from'../../constants';import TopProgressBar from\"../../shared/components/loaders/TopProgressBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Brands=()=>{const{brands,totalRecord,isLoading,isCallBrandApi}=useSelector(state=>state);const Dispatch=useDispatch();const[deleteModel,setDeleteModel]=useState(false);const[isDelete,setIsDelete]=useState(null);const[edit,setEdit]=useState(false);const[brand,setBrand]=useState();const updatedLanguage=localStorage.getItem(Tokens.UPDATED_LANGUAGE);const handleClose=item=>{setEdit(!edit);setBrand(item);};const onClickDeleteModel=function(){let isDelete=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setDeleteModel(!deleteModel);setIsDelete(isDelete);};const onChange=filter=>{Dispatch(fetchBrands(filter,true));};const itemsValue=brands.length>=0&&brands.map(item=>({name:item.attributes.name,image:item.attributes.image,product_count:item.attributes.product_count,id:item.id}));const columns=[{name:getFormattedMessage('brand.table.brand-name.column.label'),selector:row=>row.name,sortable:true,sortField:'name',cell:row=>{const imageUrl=row.image?row.image:user;return/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"me-2\",children:/*#__PURE__*/_jsx(\"img\",{src:imageUrl,height:\"50\",width:\"50\",alt:\"Brand Image\",className:\"image image-circle image-mini\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-column\",children:/*#__PURE__*/_jsx(\"span\",{children:row.name})})]});}},{name:getFormattedMessage('brand.table.product-count.column.label'),selector:row=>row.product_count,style:updatedLanguage==='ar'?{paddingRight:'87px'}:{paddingLeft:'130px'}},{name:getFormattedMessage('react-data-table.action.column.label'),right:true,ignoreRowClick:true,allowOverflow:true,button:true,cell:row=>/*#__PURE__*/_jsx(ActionButton,{item:row,goToEditProduct:handleClose,isEditMode:true,onClickDeleteModel:onClickDeleteModel})}];return/*#__PURE__*/_jsxs(MasterLayout,{children:[/*#__PURE__*/_jsx(TopProgressBar,{}),/*#__PURE__*/_jsx(TabTitle,{title:placeholderText('brands.title')}),/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,items:itemsValue,onChange:onChange,AddButton:/*#__PURE__*/_jsx(CreateBrands,{}),totalRows:totalRecord,isLoading:isLoading,isCallBrandApi:isCallBrandApi}),/*#__PURE__*/_jsx(EditBrands,{handleClose:handleClose,show:edit,brand:brand}),/*#__PURE__*/_jsx(DeleteBrands,{onClickDeleteModel:onClickDeleteModel,deleteModel:deleteModel,onDelete:isDelete})]});};export default Brands;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","MasterLayout","fetchBrands","ReactDataTable","ActionButton","DeleteBrands","user","CreateBrands","EditBrands","TabTitle","getFormattedMessage","placeholderText","Tokens","TopProgressBar","jsx","_jsx","jsxs","_jsxs","Brands","brands","totalRecord","isLoading","isCallBrandApi","state","Dispatch","deleteModel","setDeleteModel","isDelete","setIsDelete","edit","setEdit","brand","setBrand","updatedLanguage","localStorage","getItem","UPDATED_LANGUAGE","handleClose","item","onClickDeleteModel","arguments","length","undefined","onChange","filter","itemsValue","map","name","attributes","image","product_count","id","columns","selector","row","sortable","sortField","cell","imageUrl","className","children","src","height","width","alt","style","paddingRight","paddingLeft","right","ignoreRowClick","allowOverflow","button","goToEditProduct","isEditMode","title","items","AddButton","totalRows","show","onDelete"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/brands/Brands.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport MasterLayout from '../MasterLayout';\nimport {fetchBrands} from '../../store/action/brandsAction';\nimport ReactDataTable from '../../shared/table/ReactDataTable';\nimport ActionButton from '../../shared/action-buttons/ActionButton';\nimport DeleteBrands from './DeleteBrands';\nimport user from '../../assets/images/brand_logo.png';\nimport CreateBrands from './CreateBrands.js';\nimport EditBrands from './EditBrands';\nimport TabTitle from '../../shared/tab-title/TabTitle';\nimport {getFormattedMessage, placeholderText} from '../../shared/sharedMethod';\nimport { Tokens } from '../../constants';\nimport TopProgressBar from \"../../shared/components/loaders/TopProgressBar\";\n\nconst Brands = () => {\n    const {brands, totalRecord, isLoading, isCallBrandApi} = useSelector(state => state);\n    const Dispatch = useDispatch();\n    const [deleteModel, setDeleteModel] = useState(false);\n    const [isDelete, setIsDelete] = useState(null);\n    const [edit, setEdit] = useState(false);\n    const [brand, setBrand] = useState();\n    const updatedLanguage = localStorage.getItem(Tokens.UPDATED_LANGUAGE)\n\n    const handleClose = (item) => {\n        setEdit(!edit);\n        setBrand(item);\n    };\n\n    const onClickDeleteModel = (isDelete = null) => {\n        setDeleteModel(!deleteModel);\n        setIsDelete(isDelete);\n    };\n\n    const onChange = (filter) => {\n        Dispatch(fetchBrands(filter, true));\n    };\n\n    const itemsValue = brands.length >= 0 && brands.map(item => ({\n        name: item.attributes.name,\n        image: item.attributes.image,\n        product_count: item.attributes.product_count,\n        id: item.id\n    }));\n\n    const columns = [\n        {\n            name: getFormattedMessage('brand.table.brand-name.column.label'),\n            selector: row => row.name,\n            sortable: true,\n            sortField: 'name',\n            cell: row => {\n                const imageUrl = row.image ? row.image : user;\n                return (\n                    <div className='d-flex align-items-center'>\n                        <div className='me-2'>\n                            <img src={imageUrl} height='50' width='50' alt='Brand Image'\n                                 className='image image-circle image-mini'/>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <span>{row.name}</span>\n                        </div>\n                    </div>\n                )\n            },\n        },\n        {\n            name: getFormattedMessage('brand.table.product-count.column.label'),\n            selector: row => row.product_count,\n            style: updatedLanguage === 'ar' ? {paddingRight: '87px'} : {paddingLeft: '130px'},\n        },\n        {\n            name: getFormattedMessage('react-data-table.action.column.label'),\n            right: true,\n            ignoreRowClick: true,\n            allowOverflow: true,\n            button: true,\n            cell: row => <ActionButton item={row} goToEditProduct={handleClose} isEditMode={true}\n                                       onClickDeleteModel={onClickDeleteModel}/>\n        }\n    ];\n\n    return (\n        <MasterLayout>\n            <TopProgressBar />\n            <TabTitle title={placeholderText('brands.title')}/>\n            <ReactDataTable columns={columns} items={itemsValue} onChange={onChange} AddButton={<CreateBrands/>}\n                            totalRows={totalRecord} isLoading={isLoading} isCallBrandApi={isCallBrandApi}/>\n            <EditBrands handleClose={handleClose} show={edit} brand={brand}/>\n            <DeleteBrands onClickDeleteModel={onClickDeleteModel} deleteModel={deleteModel} onDelete={isDelete}/>\n        </MasterLayout>\n    )\n};\n\nexport default Brands;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}