{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,currencyActionType,toastType}from\"../../constants\";import requestParam from\"../../shared/requestParam\";import{addToast}from\"./toastAction\";import{addInToTotalRecord,removeFromTotalRecord,setTotalRecord}from\"./totalRecordAction\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";export const fetchCurrencies=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}let url=apiBaseURL.CURRENCY;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at)){url+=requestParam(filter,null,null,null,url);}apiConfig.get(url).then(response=>{dispatch({type:currencyActionType.FETCH_CURRENCIES,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const fetchCurrency=currencyId=>async dispatch=>{apiConfig.get(apiBaseURL.CURRENCY+\"/\"+currencyId).then(response=>{dispatch({type:currencyActionType.FETCH_CURRENCY,payload:response.data.data});}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const addCurrency=currency=>async dispatch=>{await apiConfig.post(apiBaseURL.CURRENCY,currency).then(response=>{dispatch({type:currencyActionType.ADD_CURRENCY,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"currency.success.create.message\")}));dispatch(addInToTotalRecord(1));}).catch(_ref3=>{let{response}=_ref3;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editCurrency=(currencyId,currency,handleClose)=>async dispatch=>{apiConfig.put(apiBaseURL.CURRENCY+\"/\"+currencyId,currency).then(response=>{dispatch({type:currencyActionType.EDIT_CURRENCY,payload:response.data.data});handleClose(false);dispatch(addToast({text:getFormattedMessage(\"currency.success.edit.message\")}));}).catch(_ref4=>{let{response}=_ref4;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteCurrency=currencyId=>async dispatch=>{apiConfig.delete(apiBaseURL.CURRENCY+\"/\"+currencyId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch({type:currencyActionType.DELETE_CURRENCY,payload:currencyId});dispatch(addToast({text:getFormattedMessage(\"currency.success.delete.message\")}));}).catch(_ref5=>{let{response}=_ref5;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","currencyActionType","toastType","requestParam","addToast","addInToTotalRecord","removeFromTotalRecord","setTotalRecord","setLoading","getFormattedMessage","fetchCurrencies","filter","arguments","length","undefined","isLoading","dispatch","url","CURRENCY","_","isEmpty","page","pageSize","search","order_By","created_at","get","then","response","type","FETCH_CURRENCIES","payload","data","meta","total","catch","_ref","text","message","ERROR","fetchCurrency","currencyId","FETCH_CURRENCY","_ref2","addCurrency","currency","post","ADD_CURRENCY","_ref3","editCurrency","handleClose","put","EDIT_CURRENCY","_ref4","deleteCurrency","delete","DELETE_CURRENCY","_ref5"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/currencyAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport { apiBaseURL, currencyActionType, toastType } from \"../../constants\";\nimport requestParam from \"../../shared/requestParam\";\nimport { addToast } from \"./toastAction\";\nimport {\n    addInToTotalRecord,\n    removeFromTotalRecord,\n    setTotalRecord,\n} from \"./totalRecordAction\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\n\nexport const fetchCurrencies =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        let url = apiBaseURL.CURRENCY;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at)\n        ) {\n            url += requestParam(filter, null, null, null, url);\n        }\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: currencyActionType.FETCH_CURRENCIES,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchCurrency = (currencyId) => async (dispatch) => {\n    apiConfig\n        .get(apiBaseURL.CURRENCY + \"/\" + currencyId)\n        .then((response) => {\n            dispatch({\n                type: currencyActionType.FETCH_CURRENCY,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const addCurrency = (currency) => async (dispatch) => {\n    await apiConfig\n        .post(apiBaseURL.CURRENCY, currency)\n        .then((response) => {\n            dispatch({\n                type: currencyActionType.ADD_CURRENCY,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"currency.success.create.message\"\n                    ),\n                })\n            );\n            dispatch(addInToTotalRecord(1));\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editCurrency =\n    (currencyId, currency, handleClose) => async (dispatch) => {\n        apiConfig\n            .put(apiBaseURL.CURRENCY + \"/\" + currencyId, currency)\n            .then((response) => {\n                dispatch({\n                    type: currencyActionType.EDIT_CURRENCY,\n                    payload: response.data.data,\n                });\n                handleClose(false);\n                dispatch(\n                    addToast({\n                        text: getFormattedMessage(\n                            \"currency.success.edit.message\"\n                        ),\n                    })\n                );\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const deleteCurrency = (currencyId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.CURRENCY + \"/\" + currencyId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({\n                type: currencyActionType.DELETE_CURRENCY,\n                payload: currencyId,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"currency.success.delete.message\"\n                    ),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}