{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,adjustMentActionType,toastType}from\"../../constants\";import{addToast}from\"./toastAction\";import{addInToTotalRecord,removeFromTotalRecord,setTotalRecord}from\"./totalRecordAction\";import{setLoading}from\"./loadingAction\";import requestParam from\"../../shared/requestParam\";import{getFormattedMessage}from\"../../shared/sharedMethod\";import{callSaleApi}from\"./saleApiAction\";import{setSavingButton}from\"./saveButtonAction\";export const fetchAdjustments=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}const admin=true;let url=apiBaseURL.ADJUSTMENTS;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search)){url+=requestParam(filter,admin,null,null,url);}await apiConfig.get(url).then(response=>{dispatch({type:adjustMentActionType.FETCH_ADJUSTMENTS,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));dispatch(callSaleApi(false));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const fetchAdjustment=function(adjustmentId,singleAdjustment){let isLoading=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}await apiConfig.get(apiBaseURL.ADJUSTMENTS+\"/\"+adjustmentId+\"/edit\",singleAdjustment).then(response=>{dispatch({type:adjustMentActionType.FETCH_ADJUSTMENT,payload:response.data.data});if(isLoading){dispatch(setLoading(false));}}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const addAdjustment=(adjustment,navigate)=>async dispatch=>{dispatch(setSavingButton(true));await apiConfig.post(apiBaseURL.ADJUSTMENTS,adjustment).then(response=>{dispatch({type:adjustMentActionType.ADD_ADJUSTMENTS,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"Adjustment.success.create.message\")}));dispatch(addInToTotalRecord(1));navigate(\"/app/adjustments\");dispatch(setSavingButton(false));}).catch(_ref3=>{let{response}=_ref3;dispatch(setSavingButton(false));dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editAdjustment=(adjustmentId,adjustment,navigate)=>async dispatch=>{dispatch(setSavingButton(true));await apiConfig.patch(apiBaseURL.ADJUSTMENTS+\"/\"+adjustmentId,adjustment).then(response=>{dispatch(addToast({text:getFormattedMessage(\"Adjustment.success.edit.message\")}));navigate(\"/app/adjustments\");dispatch({type:adjustMentActionType.EDIT_ADJUSTMENTS,payload:response.data.data});dispatch(setSavingButton(false));}).catch(_ref4=>{let{response}=_ref4;dispatch(setSavingButton(false));response&&dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteAdjustment=userId=>async dispatch=>{await apiConfig.delete(apiBaseURL.ADJUSTMENTS+\"/\"+userId).then(()=>{dispatch(removeFromTotalRecord(1));dispatch({type:adjustMentActionType.DELETE_ADJUSTMENT,payload:userId});dispatch(addToast({text:getFormattedMessage(\"Adjustment.success.delete.message\")}));}).catch(_ref5=>{let{response}=_ref5;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","adjustMentActionType","toastType","addToast","addInToTotalRecord","removeFromTotalRecord","setTotalRecord","setLoading","requestParam","getFormattedMessage","callSaleApi","setSavingButton","fetchAdjustments","filter","arguments","length","undefined","isLoading","dispatch","admin","url","ADJUSTMENTS","_","isEmpty","page","pageSize","search","get","then","response","type","FETCH_ADJUSTMENTS","payload","data","meta","total","catch","_ref","text","message","ERROR","fetchAdjustment","adjustmentId","singleAdjustment","FETCH_ADJUSTMENT","_ref2","addAdjustment","adjustment","navigate","post","ADD_ADJUSTMENTS","_ref3","editAdjustment","patch","EDIT_ADJUSTMENTS","_ref4","deleteAdjustment","userId","delete","DELETE_ADJUSTMENT","_ref5"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/adjustMentAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport { apiBaseURL, adjustMentActionType, toastType } from \"../../constants\";\nimport { addToast } from \"./toastAction\";\nimport {\n    addInToTotalRecord,\n    removeFromTotalRecord,\n    setTotalRecord,\n} from \"./totalRecordAction\";\nimport { setLoading } from \"./loadingAction\";\nimport requestParam from \"../../shared/requestParam\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\nimport { callSaleApi } from \"./saleApiAction\";\nimport { setSavingButton } from \"./saveButtonAction\";\n\nexport const fetchAdjustments =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        const admin = true;\n        let url = apiBaseURL.ADJUSTMENTS;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page || filter.pageSize || filter.search)\n        ) {\n            url += requestParam(filter, admin, null, null, url);\n        }\n        await apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: adjustMentActionType.FETCH_ADJUSTMENTS,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                dispatch(callSaleApi(false));\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchAdjustment =\n    (adjustmentId, singleAdjustment, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        await apiConfig\n            .get(\n                apiBaseURL.ADJUSTMENTS + \"/\" + adjustmentId + \"/edit\",\n                singleAdjustment\n            )\n            .then((response) => {\n                dispatch({\n                    type: adjustMentActionType.FETCH_ADJUSTMENT,\n                    payload: response.data.data,\n                });\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const addAdjustment = (adjustment, navigate) => async (dispatch) => {\n    dispatch(setSavingButton(true));\n    await apiConfig\n        .post(apiBaseURL.ADJUSTMENTS, adjustment)\n        .then((response) => {\n            dispatch({\n                type: adjustMentActionType.ADD_ADJUSTMENTS,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"Adjustment.success.create.message\"\n                    ),\n                })\n            );\n            dispatch(addInToTotalRecord(1));\n            navigate(\"/app/adjustments\");\n            dispatch(setSavingButton(false));\n        })\n        .catch(({ response }) => {\n            dispatch(setSavingButton(false));\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editAdjustment =\n    (adjustmentId, adjustment, navigate) => async (dispatch) => {\n        dispatch(setSavingButton(true));\n        await apiConfig\n            .patch(apiBaseURL.ADJUSTMENTS + \"/\" + adjustmentId, adjustment)\n            .then((response) => {\n                dispatch(\n                    addToast({\n                        text: getFormattedMessage(\n                            \"Adjustment.success.edit.message\"\n                        ),\n                    })\n                );\n                navigate(\"/app/adjustments\");\n                dispatch({\n                    type: adjustMentActionType.EDIT_ADJUSTMENTS,\n                    payload: response.data.data,\n                });\n                dispatch(setSavingButton(false));\n            })\n            .catch(({ response }) => {\n                dispatch(setSavingButton(false));\n                response &&\n                    dispatch(\n                        addToast({\n                            text: response.data.message,\n                            type: toastType.ERROR,\n                        })\n                    );\n            });\n    };\n\nexport const deleteAdjustment = (userId) => async (dispatch) => {\n    await apiConfig\n        .delete(apiBaseURL.ADJUSTMENTS + \"/\" + userId)\n        .then(() => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({\n                type: adjustMentActionType.DELETE_ADJUSTMENT,\n                payload: userId,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"Adjustment.success.delete.message\"\n                    ),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}