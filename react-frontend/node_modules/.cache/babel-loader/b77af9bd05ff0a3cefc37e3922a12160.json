{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import moment from\"moment\";import{connect}from\"react-redux\";import ReactDataTable from\"../../../shared/table/ReactDataTable\";import{currencySymbolHandling,getFormattedMessage}from\"../../../shared/sharedMethod\";import{fetchPurchasesReturn}from\"../../../store/action/purchaseReturnAction\";import{fetchFrontSetting}from\"../../../store/action/frontSettingAction\";import{fetchAllSuppliers}from\"../../../store/action/supplierAction\";import{purchaseReturnExcelAction}from\"../../../store/action/purchaseReturnExcelAction\";import{jsx as _jsx}from\"react/jsx-runtime\";const PurchaseReturnTab=props=>{const{isLoading,totalRecord,fetchPurchasesReturn,purchaseReturn,suppliers,frontSetting,fetchFrontSetting,fetchAllSuppliers,warehouseValue,purchaseReturnExcelAction,allConfigData}=props;const currencySymbol=frontSetting&&frontSetting.value&&frontSetting.value.currency_symbol;const[isWarehouseValue,setIsWarehouseValue]=useState(false);useEffect(()=>{fetchFrontSetting();},[]);useEffect(()=>{if(isWarehouseValue===true){purchaseReturnExcelAction(warehouseValue.value,setIsWarehouseValue);}},[isWarehouseValue]);const columns=[{name:getFormattedMessage(\"dashboard.recentSales.reference.label\"),sortField:\"reference_code\",sortable:true,cell:row=>{return/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-danger\",children:/*#__PURE__*/_jsx(\"span\",{children:row.reference_code})});}},{name:getFormattedMessage(\"supplier.title\"),selector:row=>row.supplier,sortField:\"supplier\",sortable:false},{name:getFormattedMessage(\"warehouse.title\"),selector:row=>row.warehouse,sortField:\"warehouse\",sortable:false},{name:getFormattedMessage(\"purchase.grant-total.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.grand_total),sortField:\"grand_total\",sortable:true},{name:getFormattedMessage(\"dashboard.recentSales.paid.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.paid),sortField:\"paid\",sortable:false},{name:getFormattedMessage(\"dashboard.recentSales.due.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.due),sortField:\"due\",sortable:false},{name:getFormattedMessage(\"purchase.select.status.label\"),sortField:\"status\",sortable:false,cell:row=>{return row.status===1&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-success\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.received.label\")})})||row.status===2&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-primary\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.pending.label\")})})||row.status===3&&/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-warning\",children:/*#__PURE__*/_jsx(\"span\",{children:getFormattedMessage(\"status.filter.ordered.label\")})});}}];const onChange=filter=>{fetchAllSuppliers();fetchPurchasesReturn(filter,true);};const onExcelClick=()=>{setIsWarehouseValue(true);};const itemsValue=currencySymbol&&purchaseReturn.length>=0&&purchaseReturn.map(purchase=>{const supplier=suppliers.filter(supplier=>supplier.id===purchase.attributes.supplier_id);const supplierName=supplier[0]&&supplier[0].attributes&&supplier[0].attributes.name;return{reference_code:purchase.attributes.reference_code,supplier:supplierName,warehouse:purchase.attributes.warehouse_name,status:purchase.attributes.status,paid:0,due:0,payment_type:purchase.attributes.payment_type,time:moment(purchase.attributes.created_at).format(\"LT\"),grand_total:purchase.attributes.grand_total,id:purchase.id,currency:currencySymbol};});return/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,isEXCEL:true,items:itemsValue,totalRows:totalRecord,onChange:onChange,isLoading:isLoading,warehouseValue:warehouseValue,onExcelClick:onExcelClick,isStatus:true,isShowFilterField:true});};const mapStateToProps=state=>{const{isLoading,totalRecord,purchaseReturn,suppliers,frontSetting}=state;return{isLoading,totalRecord,purchaseReturn,suppliers,frontSetting};};export default connect(mapStateToProps,{fetchFrontSetting,fetchPurchasesReturn,fetchAllSuppliers,purchaseReturnExcelAction})(PurchaseReturnTab);","map":{"version":3,"names":["React","useEffect","useState","moment","connect","ReactDataTable","currencySymbolHandling","getFormattedMessage","fetchPurchasesReturn","fetchFrontSetting","fetchAllSuppliers","purchaseReturnExcelAction","jsx","_jsx","PurchaseReturnTab","props","isLoading","totalRecord","purchaseReturn","suppliers","frontSetting","warehouseValue","allConfigData","currencySymbol","value","currency_symbol","isWarehouseValue","setIsWarehouseValue","columns","name","sortField","sortable","cell","row","className","children","reference_code","selector","supplier","warehouse","currency","grand_total","paid","due","status","onChange","filter","onExcelClick","itemsValue","length","map","purchase","id","attributes","supplier_id","supplierName","warehouse_name","payment_type","time","created_at","format","isEXCEL","items","totalRows","isStatus","isShowFilterField","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/report/warehouseReport/PurchaseReturnTab.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport ReactDataTable from \"../../../shared/table/ReactDataTable\";\nimport {\n    currencySymbolHandling,\n    getFormattedMessage,\n} from \"../../../shared/sharedMethod\";\nimport { fetchPurchasesReturn } from \"../../../store/action/purchaseReturnAction\";\nimport { fetchFrontSetting } from \"../../../store/action/frontSettingAction\";\nimport { fetchAllSuppliers } from \"../../../store/action/supplierAction\";\nimport { purchaseReturnExcelAction } from \"../../../store/action/purchaseReturnExcelAction\";\n\nconst PurchaseReturnTab = (props) => {\n    const {\n        isLoading,\n        totalRecord,\n        fetchPurchasesReturn,\n        purchaseReturn,\n        suppliers,\n        frontSetting,\n        fetchFrontSetting,\n        fetchAllSuppliers,\n        warehouseValue,\n        purchaseReturnExcelAction,\n        allConfigData,\n    } = props;\n    const currencySymbol =\n        frontSetting &&\n        frontSetting.value &&\n        frontSetting.value.currency_symbol;\n    const [isWarehouseValue, setIsWarehouseValue] = useState(false);\n\n    useEffect(() => {\n        fetchFrontSetting();\n    }, []);\n\n    useEffect(() => {\n        if (isWarehouseValue === true) {\n            purchaseReturnExcelAction(\n                warehouseValue.value,\n                setIsWarehouseValue\n            );\n        }\n    }, [isWarehouseValue]);\n\n    const columns = [\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.reference.label\"),\n            sortField: \"reference_code\",\n            sortable: true,\n            cell: (row) => {\n                return (\n                    <span className=\"badge bg-light-danger\">\n                        <span>{row.reference_code}</span>\n                    </span>\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"supplier.title\"),\n            selector: (row) => row.supplier,\n            sortField: \"supplier\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"warehouse.title\"),\n            selector: (row) => row.warehouse,\n            sortField: \"warehouse\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"purchase.grant-total.label\"),\n            selector: (row) =>\n                currencySymbolHandling(\n                    allConfigData,\n                    row.currency,\n                    row.grand_total\n                ),\n            sortField: \"grand_total\",\n            sortable: true,\n        },\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.paid.label\"),\n            selector: (row) =>\n                currencySymbolHandling(allConfigData, row.currency, row.paid),\n            sortField: \"paid\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.due.label\"),\n            selector: (row) =>\n                currencySymbolHandling(allConfigData, row.currency, row.due),\n            sortField: \"due\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"purchase.select.status.label\"),\n            sortField: \"status\",\n            sortable: false,\n            cell: (row) => {\n                return (\n                    (row.status === 1 && (\n                        <span className=\"badge bg-light-success\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.received.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.status === 2 && (\n                        <span className=\"badge bg-light-primary\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.pending.label\"\n                                )}\n                            </span>\n                        </span>\n                    )) ||\n                    (row.status === 3 && (\n                        <span className=\"badge bg-light-warning\">\n                            <span>\n                                {getFormattedMessage(\n                                    \"status.filter.ordered.label\"\n                                )}\n                            </span>\n                        </span>\n                    ))\n                );\n            },\n        },\n    ];\n\n    const onChange = (filter) => {\n        fetchAllSuppliers();\n        fetchPurchasesReturn(filter, true);\n    };\n\n    const onExcelClick = () => {\n        setIsWarehouseValue(true);\n    };\n\n    const itemsValue =\n        currencySymbol &&\n        purchaseReturn.length >= 0 &&\n        purchaseReturn.map((purchase) => {\n            const supplier = suppliers.filter(\n                (supplier) => supplier.id === purchase.attributes.supplier_id\n            );\n            const supplierName =\n                supplier[0] &&\n                supplier[0].attributes &&\n                supplier[0].attributes.name;\n            return {\n                reference_code: purchase.attributes.reference_code,\n                supplier: supplierName,\n                warehouse: purchase.attributes.warehouse_name,\n                status: purchase.attributes.status,\n                paid: 0,\n                due: 0,\n                payment_type: purchase.attributes.payment_type,\n                time: moment(purchase.attributes.created_at).format(\"LT\"),\n                grand_total: purchase.attributes.grand_total,\n                id: purchase.id,\n                currency: currencySymbol,\n            };\n        });\n\n    return (\n        <ReactDataTable\n            columns={columns}\n            isEXCEL\n            items={itemsValue}\n            totalRows={totalRecord}\n            onChange={onChange}\n            isLoading={isLoading}\n            warehouseValue={warehouseValue}\n            onExcelClick={onExcelClick}\n            isStatus\n            isShowFilterField\n        />\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { isLoading, totalRecord, purchaseReturn, suppliers, frontSetting } =\n        state;\n    return { isLoading, totalRecord, purchaseReturn, suppliers, frontSetting };\n};\n\nexport default connect(mapStateToProps, {\n    fetchFrontSetting,\n    fetchPurchasesReturn,\n    fetchAllSuppliers,\n    purchaseReturnExcelAction,\n})(PurchaseReturnTab);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}