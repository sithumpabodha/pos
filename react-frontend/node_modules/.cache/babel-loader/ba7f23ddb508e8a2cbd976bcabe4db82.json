{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{useParams}from'react-router-dom';import MasterLayout from'../MasterLayout';import HeaderTitle from'../header/HeaderTitle';import{fetchAdjustment}from'../../store/action/adjustMentAction';import{fetchAllWarehouses}from'../../store/action/warehouseAction';import{getFormattedMessage}from'../../shared/sharedMethod';import AdjustmentType from'../../shared/option-lists/AdjustmentType.json';import AdjustmentForm from'./AdjustmentForm';import Spinner from\"../../shared/components/loaders/Spinner\";import TopProgressBar from\"../../shared/components/loaders/TopProgressBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const EditAdjustMent=props=>{const{warehouses,fetchAllWarehouses,isLoading,fetchAdjustment,adjustments}=props;const{id}=useParams();useEffect(()=>{fetchAllWarehouses();fetchAdjustment(id);},[]);const method_type=adjustments.attributes&&adjustments.attributes.adjustment_items&&adjustments.attributes.adjustment_items.map(item=>item.method_type);const selectedAdjustMentType=adjustments.attributes&&adjustments.attributes.adjustment_items&&AdjustmentType.filter(item=>item.value===method_type[0]);const itemsValue=adjustments&&adjustments.attributes&&{date:adjustments.attributes.date,warehouse_id:{value:adjustments.attributes.warehouse_id,label:adjustments.attributes.warehouse_name},adjustment_items:adjustments.attributes.adjustment_items.map(item=>({code:item.product&&item.product.code,name:item.product&&item.product.name,product_unit:item.product.product_unit,product_id:item.product_id,short_name:item.sale_unit&&item.sale_unit,stock_alert:item.product&&item.product.stock_alert,product_price:item.product&&item.product.product_price,fix_net_unit:item.product&&item.product.product_price,net_unit_price:item.product&&item.product.product_price,tax_type:item.product&&item.product.tax_type,tax_value:item.tax_value,tax_amount:item.tax_amount,discount_type:item.discount_type,discount_value:item.discount_value,discount_amount:item.discount_amount,sub_total:item.sub_total,sale_unit:item.product&&item.product.sale_unit,quantity:item.quantity,stock:item.product&&item.product.stocks.filter(items=>items.warehouse_id===adjustments.attributes.warehouse_id),id:item.product_id,sale_item_id:item.id,newItem:'',adjustMethod:item.method_type,isEdit:true,adjustment_item_id:item.id})),id:adjustments.id,notes:adjustments.attributes.note,AdjustmentType:{label:selectedAdjustMentType&&selectedAdjustMentType[0]&&selectedAdjustMentType[0].label,value:selectedAdjustMentType&&selectedAdjustMentType[0]&&selectedAdjustMentType[0].value}};return/*#__PURE__*/_jsxs(MasterLayout,{children:[/*#__PURE__*/_jsx(TopProgressBar,{}),/*#__PURE__*/_jsx(HeaderTitle,{title:getFormattedMessage('adjustments.edit.title'),to:\"/app/adjustments\"}),isLoading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsx(AdjustmentForm,{singleAdjustMent:itemsValue,id:id,warehouses:warehouses})]});};const mapStateToProps=state=>{const{warehouses,isLoading,adjustments}=state;return{warehouses,isLoading,adjustments};};export default connect(mapStateToProps,{fetchAllWarehouses,fetchAdjustment})(EditAdjustMent);","map":{"version":3,"names":["React","useEffect","connect","useParams","MasterLayout","HeaderTitle","fetchAdjustment","fetchAllWarehouses","getFormattedMessage","AdjustmentType","AdjustmentForm","Spinner","TopProgressBar","jsx","_jsx","jsxs","_jsxs","EditAdjustMent","props","warehouses","isLoading","adjustments","id","method_type","attributes","adjustment_items","map","item","selectedAdjustMentType","filter","value","itemsValue","date","warehouse_id","label","warehouse_name","code","product","name","product_unit","product_id","short_name","sale_unit","stock_alert","product_price","fix_net_unit","net_unit_price","tax_type","tax_value","tax_amount","discount_type","discount_value","discount_amount","sub_total","quantity","stock","stocks","items","sale_item_id","newItem","adjustMethod","isEdit","adjustment_item_id","notes","note","children","title","to","singleAdjustMent","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/adjustments/EditAdjustMent.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {useParams} from 'react-router-dom';\nimport MasterLayout from '../MasterLayout';\nimport HeaderTitle from '../header/HeaderTitle';\nimport {fetchAdjustment} from '../../store/action/adjustMentAction';\nimport {fetchAllWarehouses} from '../../store/action/warehouseAction';\nimport {getFormattedMessage} from '../../shared/sharedMethod';\nimport AdjustmentType from '../../shared/option-lists/AdjustmentType.json';\nimport AdjustmentForm from './AdjustmentForm';\nimport Spinner from \"../../shared/components/loaders/Spinner\";\nimport TopProgressBar from \"../../shared/components/loaders/TopProgressBar\";\n\nconst EditAdjustMent = (props) => {\n    const {warehouses, fetchAllWarehouses, isLoading, fetchAdjustment, adjustments} = props;\n    const {id} = useParams();\n\n    useEffect(() => {\n        fetchAllWarehouses();\n        fetchAdjustment(id)\n    }, []);\n\n    const method_type = adjustments.attributes && adjustments.attributes.adjustment_items && adjustments.attributes.adjustment_items.map((item) => item.method_type)\n    const selectedAdjustMentType = adjustments.attributes && adjustments.attributes.adjustment_items && AdjustmentType.filter((item) => item.value === method_type[0])\n\n    const itemsValue = adjustments && adjustments.attributes && {\n        date: adjustments.attributes.date,\n        warehouse_id: {\n            value: adjustments.attributes.warehouse_id,\n            label: adjustments.attributes.warehouse_name,\n        },\n        adjustment_items: adjustments.attributes.adjustment_items.map((item) => ({\n            code: item.product && item.product.code,\n            name: item.product && item.product.name,\n            product_unit: item.product.product_unit,\n            product_id: item.product_id,\n            short_name: item.sale_unit && item.sale_unit,\n            stock_alert:  item.product && item.product.stock_alert,\n            product_price: item.product && item.product.product_price,\n            fix_net_unit: item.product && item.product.product_price,\n            net_unit_price: item.product && item.product.product_price,\n            tax_type: item.product && item.product.tax_type,\n            tax_value: item.tax_value,\n            tax_amount: item.tax_amount,\n            discount_type: item.discount_type,\n            discount_value: item.discount_value,\n            discount_amount: item.discount_amount,\n            sub_total: item.sub_total,\n            sale_unit: item.product && item.product.sale_unit,\n            quantity: item.quantity,\n            stock: item.product && item.product.stocks.filter(items => items.warehouse_id === adjustments.attributes.warehouse_id),\n            id: item.product_id,\n            sale_item_id: item.id,\n            newItem: '',\n            adjustMethod: item.method_type,\n            isEdit: true,\n            adjustment_item_id: item.id\n\n        })),\n        id: adjustments.id,\n        notes: adjustments.attributes.note,\n        AdjustmentType: {\n            label: selectedAdjustMentType && selectedAdjustMentType[0] && selectedAdjustMentType[0].label,\n            value: selectedAdjustMentType && selectedAdjustMentType[0] && selectedAdjustMentType[0].value\n        }\n    };\n\n    return (\n        <MasterLayout>\n            <TopProgressBar />\n            <HeaderTitle title={getFormattedMessage('adjustments.edit.title')} to='/app/adjustments'/>\n            {isLoading ? <Spinner /> :\n                <AdjustmentForm singleAdjustMent={itemsValue} id={id} warehouses={warehouses}/>}\n        </MasterLayout>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    const {warehouses, isLoading, adjustments} = state;\n    return {warehouses, isLoading, adjustments}\n};\n\nexport default connect(mapStateToProps, {fetchAllWarehouses, fetchAdjustment})(EditAdjustMent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}