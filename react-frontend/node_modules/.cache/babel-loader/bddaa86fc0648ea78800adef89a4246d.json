{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,expenseCategoriesActionType,toastType}from\"../../constants\";import{addToast}from\"./toastAction\";import{removeFromTotalRecord,setTotalRecord,addInToTotalRecord}from\"./totalRecordAction\";import requestParam from\"../../shared/requestParam\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";export const fetchExpenseCategories=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}let url=apiBaseURL.EXPENSES_CATEGORIES;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By)){url+=requestParam(filter,null,null,null,url);}apiConfig.get(url).then(response=>{dispatch({type:expenseCategoriesActionType.FETCH_EXPENSES_CATEGORIES,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const fetchExpenseCategory=(expensesId,singleExpense)=>async dispatch=>{apiConfig.get(apiBaseURL.EXPENSES_CATEGORIES+\"/\"+expensesId,singleExpense).then(response=>{dispatch({type:expenseCategoriesActionType.FETCH_EXPENSE_CATEGORIES,payload:response.data.data});}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const addExpenseCategory=expenses=>async dispatch=>{await apiConfig.post(apiBaseURL.EXPENSES_CATEGORIES,expenses).then(response=>{dispatch({type:expenseCategoriesActionType.ADD_EXPENSE_CATEGORIES,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"expense-category.success.create.message\")}));dispatch(addInToTotalRecord(1));}).catch(_ref3=>{let{response}=_ref3;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editExpenseCategory=(expensesId,expenses)=>async dispatch=>{apiConfig.put(apiBaseURL.EXPENSES_CATEGORIES+\"/\"+expensesId,expenses).then(response=>{dispatch({type:expenseCategoriesActionType.EDIT_EXPENSE_CATEGORIES,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"expense-category.success.edit.message\")}));}).catch(_ref4=>{let{response}=_ref4;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteExpenseCategory=expensesId=>async dispatch=>{apiConfig.delete(apiBaseURL.EXPENSES_CATEGORIES+\"/\"+expensesId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch({type:expenseCategoriesActionType.DELETE_EXPENSE_CATEGORIES,payload:expensesId});dispatch(addToast({text:getFormattedMessage(\"expense-category.success.delete.message\")}));}).catch(_ref5=>{let{response}=_ref5;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const fetchAllExpenseCategories=()=>async dispatch=>{apiConfig.get(`expense-categories?page[size]=0`).then(response=>{dispatch({type:expenseCategoriesActionType.FETCH_ALL_EXPENSES_CATEGORIES,payload:response.data.data});}).catch(_ref6=>{let{response}=_ref6;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","expenseCategoriesActionType","toastType","addToast","removeFromTotalRecord","setTotalRecord","addInToTotalRecord","requestParam","setLoading","getFormattedMessage","fetchExpenseCategories","filter","arguments","length","undefined","isLoading","dispatch","url","EXPENSES_CATEGORIES","_","isEmpty","page","pageSize","search","order_By","get","then","response","type","FETCH_EXPENSES_CATEGORIES","payload","data","meta","total","catch","_ref","text","message","ERROR","fetchExpenseCategory","expensesId","singleExpense","FETCH_EXPENSE_CATEGORIES","_ref2","addExpenseCategory","expenses","post","ADD_EXPENSE_CATEGORIES","_ref3","editExpenseCategory","put","EDIT_EXPENSE_CATEGORIES","_ref4","deleteExpenseCategory","delete","DELETE_EXPENSE_CATEGORIES","_ref5","fetchAllExpenseCategories","FETCH_ALL_EXPENSES_CATEGORIES","_ref6"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/expenseCategoryAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport {\n    apiBaseURL,\n    expenseCategoriesActionType,\n    toastType,\n} from \"../../constants\";\nimport { addToast } from \"./toastAction\";\nimport {\n    removeFromTotalRecord,\n    setTotalRecord,\n    addInToTotalRecord,\n} from \"./totalRecordAction\";\nimport requestParam from \"../../shared/requestParam\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\n\nexport const fetchExpenseCategories =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        let url = apiBaseURL.EXPENSES_CATEGORIES;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page || filter.pageSize || filter.search || filter.order_By)\n        ) {\n            url += requestParam(filter, null, null, null, url);\n        }\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: expenseCategoriesActionType.FETCH_EXPENSES_CATEGORIES,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchExpenseCategory =\n    (expensesId, singleExpense) => async (dispatch) => {\n        apiConfig\n            .get(\n                apiBaseURL.EXPENSES_CATEGORIES + \"/\" + expensesId,\n                singleExpense\n            )\n            .then((response) => {\n                dispatch({\n                    type: expenseCategoriesActionType.FETCH_EXPENSE_CATEGORIES,\n                    payload: response.data.data,\n                });\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const addExpenseCategory = (expenses) => async (dispatch) => {\n    await apiConfig\n        .post(apiBaseURL.EXPENSES_CATEGORIES, expenses)\n        .then((response) => {\n            dispatch({\n                type: expenseCategoriesActionType.ADD_EXPENSE_CATEGORIES,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"expense-category.success.create.message\"\n                    ),\n                })\n            );\n            dispatch(addInToTotalRecord(1));\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editExpenseCategory =\n    (expensesId, expenses) => async (dispatch) => {\n        apiConfig\n            .put(apiBaseURL.EXPENSES_CATEGORIES + \"/\" + expensesId, expenses)\n            .then((response) => {\n                dispatch({\n                    type: expenseCategoriesActionType.EDIT_EXPENSE_CATEGORIES,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    addToast({\n                        text: getFormattedMessage(\n                            \"expense-category.success.edit.message\"\n                        ),\n                    })\n                );\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const deleteExpenseCategory = (expensesId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.EXPENSES_CATEGORIES + \"/\" + expensesId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({\n                type: expenseCategoriesActionType.DELETE_EXPENSE_CATEGORIES,\n                payload: expensesId,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"expense-category.success.delete.message\"\n                    ),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const fetchAllExpenseCategories = () => async (dispatch) => {\n    apiConfig\n        .get(`expense-categories?page[size]=0`)\n        .then((response) => {\n            dispatch({\n                type: expenseCategoriesActionType.FETCH_ALL_EXPENSES_CATEGORIES,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}