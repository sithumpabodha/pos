{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,toastType,baseUnitsActionType,Filters}from\"../../constants\";import requestParam from\"../../shared/requestParam\";import{addToast}from\"./toastAction\";import{setTotalRecord,addInToTotalRecord,removeFromTotalRecord}from\"./totalRecordAction\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";export const fetchBaseUnits=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}let url=apiBaseURL.BASE_UNITS;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at)){url+=requestParam(filter,null,null,null,url);}apiConfig.get(url).then(response=>{dispatch({type:baseUnitsActionType.FETCH_UNITS,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{var _response$data;let{response}=_ref;dispatch(addToast({text:response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.message,type:toastType.ERROR}));});};};export const fetchBaseUnit=(unitId,singleUnit)=>async dispatch=>{apiConfig.get(apiBaseURL.BASE_UNITS+\"/\"+unitId,singleUnit).then(response=>{dispatch({type:baseUnitsActionType.FETCH_UNIT,payload:response.data.data});}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const addBaseUnit=base_units=>async dispatch=>{await apiConfig.post(apiBaseURL.BASE_UNITS,base_units).then(response=>{dispatch({type:baseUnitsActionType.ADD_UNIT,payload:response.data.data});dispatch(fetchBaseUnits(Filters.OBJ));dispatch(addToast({text:getFormattedMessage(\"base-unit.success.create.message\")}));dispatch(addInToTotalRecord(1));}).catch(_ref3=>{var _response$data2;let{response}=_ref3;dispatch(addToast({text:response===null||response===void 0?void 0:(_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.message,type:toastType.ERROR}));});};export const editBaseUnit=(unitId,units,handleClose)=>async dispatch=>{apiConfig.patch(apiBaseURL.BASE_UNITS+\"/\"+unitId,units).then(response=>{dispatch({type:baseUnitsActionType.EDIT_UNIT,payload:response.data.data});handleClose(false);dispatch(addToast({text:getFormattedMessage(\"base-unit.success.edit.message\")}));}).catch(_ref4=>{var _response$data3;let{response}=_ref4;dispatch(addToast({text:response===null||response===void 0?void 0:(_response$data3=response.data)===null||_response$data3===void 0?void 0:_response$data3.message,type:toastType.ERROR}));});};export const deleteBaseUnit=unitId=>async dispatch=>{apiConfig.delete(apiBaseURL.BASE_UNITS+\"/\"+unitId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch({type:baseUnitsActionType.DELETE_UNIT,payload:unitId});dispatch(addToast({text:getFormattedMessage(\"base-unit.success.delete.message\")}));}).catch(_ref5=>{var _response$data4;let{response}=_ref5;dispatch(addToast({text:response===null||response===void 0?void 0:(_response$data4=response.data)===null||_response$data4===void 0?void 0:_response$data4.message,type:toastType.ERROR}));});};export const fetchAllBaseUnits=()=>async dispatch=>{apiConfig.get(`base-units?page[size]=0`).then(response=>{dispatch({type:baseUnitsActionType.FETCH_ALL_BASE_UNITS,payload:response.data.data});}).catch(_ref6=>{var _response$data5;let{response}=_ref6;dispatch(addToast({text:response===null||response===void 0?void 0:(_response$data5=response.data)===null||_response$data5===void 0?void 0:_response$data5.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","toastType","baseUnitsActionType","Filters","requestParam","addToast","setTotalRecord","addInToTotalRecord","removeFromTotalRecord","setLoading","getFormattedMessage","fetchBaseUnits","filter","arguments","length","undefined","isLoading","dispatch","url","BASE_UNITS","_","isEmpty","page","pageSize","search","order_By","created_at","get","then","response","type","FETCH_UNITS","payload","data","meta","total","catch","_ref","_response$data","text","message","ERROR","fetchBaseUnit","unitId","singleUnit","FETCH_UNIT","_ref2","addBaseUnit","base_units","post","ADD_UNIT","OBJ","_ref3","_response$data2","editBaseUnit","units","handleClose","patch","EDIT_UNIT","_ref4","_response$data3","deleteBaseUnit","delete","DELETE_UNIT","_ref5","_response$data4","fetchAllBaseUnits","FETCH_ALL_BASE_UNITS","_ref6","_response$data5"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/baseUnitsAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport {\n    apiBaseURL,\n    toastType,\n    baseUnitsActionType,\n    Filters,\n} from \"../../constants\";\nimport requestParam from \"../../shared/requestParam\";\nimport { addToast } from \"./toastAction\";\nimport {\n    setTotalRecord,\n    addInToTotalRecord,\n    removeFromTotalRecord,\n} from \"./totalRecordAction\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\n\nexport const fetchBaseUnits =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        let url = apiBaseURL.BASE_UNITS;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at)\n        ) {\n            url += requestParam(filter, null, null, null, url);\n        }\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: baseUnitsActionType.FETCH_UNITS,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response?.data?.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchBaseUnit = (unitId, singleUnit) => async (dispatch) => {\n    apiConfig\n        .get(apiBaseURL.BASE_UNITS + \"/\" + unitId, singleUnit)\n        .then((response) => {\n            dispatch({\n                type: baseUnitsActionType.FETCH_UNIT,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const addBaseUnit = (base_units) => async (dispatch) => {\n    await apiConfig\n        .post(apiBaseURL.BASE_UNITS, base_units)\n        .then((response) => {\n            dispatch({\n                type: baseUnitsActionType.ADD_UNIT,\n                payload: response.data.data,\n            });\n            dispatch(fetchBaseUnits(Filters.OBJ));\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"base-unit.success.create.message\"\n                    ),\n                })\n            );\n            dispatch(addInToTotalRecord(1));\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({\n                    text: response?.data?.message,\n                    type: toastType.ERROR,\n                })\n            );\n        });\n};\n\nexport const editBaseUnit =\n    (unitId, units, handleClose) => async (dispatch) => {\n        apiConfig\n            .patch(apiBaseURL.BASE_UNITS + \"/\" + unitId, units)\n            .then((response) => {\n                dispatch({\n                    type: baseUnitsActionType.EDIT_UNIT,\n                    payload: response.data.data,\n                });\n                handleClose(false);\n                dispatch(\n                    addToast({\n                        text: getFormattedMessage(\n                            \"base-unit.success.edit.message\"\n                        ),\n                    })\n                );\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response?.data?.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const deleteBaseUnit = (unitId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.BASE_UNITS + \"/\" + unitId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({\n                type: baseUnitsActionType.DELETE_UNIT,\n                payload: unitId,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\n                        \"base-unit.success.delete.message\"\n                    ),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({\n                    text: response?.data?.message,\n                    type: toastType.ERROR,\n                })\n            );\n        });\n};\n\nexport const fetchAllBaseUnits = () => async (dispatch) => {\n    apiConfig\n        .get(`base-units?page[size]=0`)\n        .then((response) => {\n            dispatch({\n                type: baseUnitsActionType.FETCH_ALL_BASE_UNITS,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({\n                    text: response?.data?.message,\n                    type: toastType.ERROR,\n                })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}