{"ast":null,"code":"import React,{useEffect}from'react';import{ToastContainer}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";const Toast=props=>{const{onCancel,language}=props;useEffect(()=>{setTimeout(()=>onCancel(),5000);},[]);return/*#__PURE__*/_jsx(ToastContainer,{autoClose:5000,hideProgressBar:true,newestOnTop:true,closeOnClick:true,rtl:language===\"ar\"?true:false,draggable:true,pauseOnHover:true,pauseOnFocusLoss:true});};export default Toast;","map":{"version":3,"names":["React","useEffect","ToastContainer","jsx","_jsx","Toast","props","onCancel","language","setTimeout","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","pauseOnFocusLoss"],"sources":["C:/Users/Sithu/Music/react-frontend/src/shared/toast/Toast.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {ToastContainer} from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nconst Toast = (props) => {\n    const {onCancel, language} = props;\n\n    useEffect(() => {\n        setTimeout(() => onCancel(), 5000);\n    }, []);\n\n    return (\n        <ToastContainer\n            autoClose={5000}\n            hideProgressBar={true}\n            newestOnTop={true}\n            closeOnClick\n            rtl={language === \"ar\" ? true : false}\n            draggable\n            pauseOnHover\n            pauseOnFocusLoss\n        />\n    );\n};\n\nToast.propTypes = {\n    onCancel: PropTypes.func,\n};\n\nexport default Toast;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,KAAO,OAAO,CACtC,OAAQC,cAAc,KAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG9C,KAAM,CAAAC,KAAK,CAAIC,KAAK,EAAK,CACrB,KAAM,CAACC,QAAQ,CAAEC,QAAQ,CAAC,CAAGF,KAAK,CAElCL,SAAS,CAAC,IAAM,CACZQ,UAAU,CAAC,IAAMF,QAAQ,CAAC,CAAC,CAAE,IAAI,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIH,IAAA,CAACF,cAAc,EACXQ,SAAS,CAAE,IAAK,CAChBC,eAAe,CAAE,IAAK,CACtBC,WAAW,CAAE,IAAK,CAClBC,YAAY,MACZC,GAAG,CAAEN,QAAQ,GAAK,IAAI,CAAG,IAAI,CAAG,KAAM,CACtCO,SAAS,MACTC,YAAY,MACZC,gBAAgB,MACnB,CAAC,CAEV,CAAC,CAMD,cAAe,CAAAZ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}