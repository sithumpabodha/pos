{"ast":null,"code":"import apiConfig from\"../../config/apiConfig\";import{apiBaseURL,expenseActionType,toastType}from\"../../constants\";import requestParam from\"../../shared/requestParam\";import{addToast}from\"./toastAction\";import{addInToTotalRecord,removeFromTotalRecord,setTotalRecord}from\"./totalRecordAction\";import{setLoading}from\"./loadingAction\";import{getFormattedMessage}from\"../../shared/sharedMethod\";import{setSavingButton}from\"./saveButtonAction\";export const fetchExpenses=function(){let filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isLoading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return async dispatch=>{if(isLoading){dispatch(setLoading(true));}let url=apiBaseURL.EXPENSES;if(!_.isEmpty(filter)&&(filter.page||filter.pageSize||filter.search||filter.order_By||filter.created_at)){url+=requestParam(filter,null,null,null,url);}apiConfig.get(url).then(response=>{dispatch({type:expenseActionType.FETCH_EXPENSES,payload:response.data.data});dispatch(setTotalRecord(response.data.meta.total!==undefined&&response.data.meta.total>=0?response.data.meta.total:response.data.data.total));if(isLoading){dispatch(setLoading(false));}}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};};export const fetchExpense=(expenseId,singleExpense)=>async dispatch=>{apiConfig.get(apiBaseURL.EXPENSES+\"/\"+expenseId,singleExpense).then(response=>{dispatch({type:expenseActionType.FETCH_EXPENSE,payload:response.data.data});}).catch(_ref2=>{let{response}=_ref2;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const addExpense=(expense,navigate)=>async dispatch=>{dispatch(setSavingButton(true));await apiConfig.post(apiBaseURL.EXPENSES,expense).then(response=>{dispatch({type:expenseActionType.ADD_EXPENSE,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"expense.success.create.message\")}));navigate(\"/app/expenses\");dispatch(addInToTotalRecord(1));dispatch(setSavingButton(false));}).catch(_ref3=>{let{response}=_ref3;dispatch(setSavingButton(false));dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const editExpense=(expenseId,expense,navigate)=>async dispatch=>{dispatch(setSavingButton(true));apiConfig.put(apiBaseURL.EXPENSES+\"/\"+expenseId,expense).then(response=>{dispatch({type:expenseActionType.EDIT_EXPENSE,payload:response.data.data});dispatch(addToast({text:getFormattedMessage(\"expense.success.edit.message\")}));navigate(\"/app/expenses\");dispatch(setSavingButton(false));}).catch(_ref4=>{let{response}=_ref4;dispatch(setSavingButton(false));dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};export const deleteExpense=expenseId=>async dispatch=>{apiConfig.delete(apiBaseURL.EXPENSES+\"/\"+expenseId).then(response=>{dispatch(removeFromTotalRecord(1));dispatch({type:expenseActionType.DELETE_EXPENSE,payload:expenseId});dispatch(addToast({text:getFormattedMessage(\"expense.success.delete.message\")}));}).catch(_ref5=>{let{response}=_ref5;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["apiConfig","apiBaseURL","expenseActionType","toastType","requestParam","addToast","addInToTotalRecord","removeFromTotalRecord","setTotalRecord","setLoading","getFormattedMessage","setSavingButton","fetchExpenses","filter","arguments","length","undefined","isLoading","dispatch","url","EXPENSES","_","isEmpty","page","pageSize","search","order_By","created_at","get","then","response","type","FETCH_EXPENSES","payload","data","meta","total","catch","_ref","text","message","ERROR","fetchExpense","expenseId","singleExpense","FETCH_EXPENSE","_ref2","addExpense","expense","navigate","post","ADD_EXPENSE","_ref3","editExpense","put","EDIT_EXPENSE","_ref4","deleteExpense","delete","DELETE_EXPENSE","_ref5"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/expenseAction.js"],"sourcesContent":["import apiConfig from \"../../config/apiConfig\";\nimport { apiBaseURL, expenseActionType, toastType } from \"../../constants\";\nimport requestParam from \"../../shared/requestParam\";\nimport { addToast } from \"./toastAction\";\nimport {\n    addInToTotalRecord,\n    removeFromTotalRecord,\n    setTotalRecord,\n} from \"./totalRecordAction\";\nimport { setLoading } from \"./loadingAction\";\nimport { getFormattedMessage } from \"../../shared/sharedMethod\";\nimport { setSavingButton } from \"./saveButtonAction\";\n\nexport const fetchExpenses =\n    (filter = {}, isLoading = true) =>\n    async (dispatch) => {\n        if (isLoading) {\n            dispatch(setLoading(true));\n        }\n        let url = apiBaseURL.EXPENSES;\n        if (\n            !_.isEmpty(filter) &&\n            (filter.page ||\n                filter.pageSize ||\n                filter.search ||\n                filter.order_By ||\n                filter.created_at)\n        ) {\n            url += requestParam(filter, null, null, null, url);\n        }\n        apiConfig\n            .get(url)\n            .then((response) => {\n                dispatch({\n                    type: expenseActionType.FETCH_EXPENSES,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    setTotalRecord(\n                        response.data.meta.total !== undefined &&\n                            response.data.meta.total >= 0\n                            ? response.data.meta.total\n                            : response.data.data.total\n                    )\n                );\n                if (isLoading) {\n                    dispatch(setLoading(false));\n                }\n            })\n            .catch(({ response }) => {\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const fetchExpense = (expenseId, singleExpense) => async (dispatch) => {\n    apiConfig\n        .get(apiBaseURL.EXPENSES + \"/\" + expenseId, singleExpense)\n        .then((response) => {\n            dispatch({\n                type: expenseActionType.FETCH_EXPENSE,\n                payload: response.data.data,\n            });\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const addExpense = (expense, navigate) => async (dispatch) => {\n    dispatch(setSavingButton(true));\n    await apiConfig\n        .post(apiBaseURL.EXPENSES, expense)\n        .then((response) => {\n            dispatch({\n                type: expenseActionType.ADD_EXPENSE,\n                payload: response.data.data,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"expense.success.create.message\"),\n                })\n            );\n            navigate(\"/app/expenses\");\n            dispatch(addInToTotalRecord(1));\n            dispatch(setSavingButton(false));\n        })\n        .catch(({ response }) => {\n            dispatch(setSavingButton(false));\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n\nexport const editExpense =\n    (expenseId, expense, navigate) => async (dispatch) => {\n        dispatch(setSavingButton(true));\n        apiConfig\n            .put(apiBaseURL.EXPENSES + \"/\" + expenseId, expense)\n            .then((response) => {\n                dispatch({\n                    type: expenseActionType.EDIT_EXPENSE,\n                    payload: response.data.data,\n                });\n                dispatch(\n                    addToast({\n                        text: getFormattedMessage(\n                            \"expense.success.edit.message\"\n                        ),\n                    })\n                );\n                navigate(\"/app/expenses\");\n                dispatch(setSavingButton(false));\n            })\n            .catch(({ response }) => {\n                dispatch(setSavingButton(false));\n                dispatch(\n                    addToast({\n                        text: response.data.message,\n                        type: toastType.ERROR,\n                    })\n                );\n            });\n    };\n\nexport const deleteExpense = (expenseId) => async (dispatch) => {\n    apiConfig\n        .delete(apiBaseURL.EXPENSES + \"/\" + expenseId)\n        .then((response) => {\n            dispatch(removeFromTotalRecord(1));\n            dispatch({\n                type: expenseActionType.DELETE_EXPENSE,\n                payload: expenseId,\n            });\n            dispatch(\n                addToast({\n                    text: getFormattedMessage(\"expense.success.delete.message\"),\n                })\n            );\n        })\n        .catch(({ response }) => {\n            dispatch(\n                addToast({ text: response.data.message, type: toastType.ERROR })\n            );\n        });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}