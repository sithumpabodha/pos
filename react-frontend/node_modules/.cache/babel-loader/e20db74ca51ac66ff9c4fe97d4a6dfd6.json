{"ast":null,"code":"import{toastType,productUnitActionType}from'../../constants';import apiConfig from'../../config/apiConfig';import{addToast}from'./toastAction';export const productUnitDropdown=base_unit_value=>async dispatch=>{apiConfig.get(`units?page[size]=0&base_unit=${base_unit_value}`).then(response=>{dispatch({type:productUnitActionType.PRODUCT_UNITS,payload:response.data.data});}).catch(_ref=>{let{response}=_ref;dispatch(addToast({text:response.data.message,type:toastType.ERROR}));});};","map":{"version":3,"names":["toastType","productUnitActionType","apiConfig","addToast","productUnitDropdown","base_unit_value","dispatch","get","then","response","type","PRODUCT_UNITS","payload","data","catch","_ref","text","message","ERROR"],"sources":["C:/Users/Sithu/Music/react-frontend/src/store/action/productUnitAction.js"],"sourcesContent":["import { toastType, productUnitActionType } from '../../constants';\nimport apiConfig from '../../config/apiConfig';\nimport { addToast } from './toastAction';\n\nexport const productUnitDropdown = (base_unit_value) => async (dispatch) => {\n    apiConfig.get(`units?page[size]=0&base_unit=${base_unit_value}`)\n        .then((response) => {\n            dispatch({ type: productUnitActionType.PRODUCT_UNITS, payload: response.data.data });\n        })\n        .catch(({ response }) => {\n            dispatch(addToast(\n                { text: response.data.message, type: toastType.ERROR }));\n        });\n};\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,qBAAqB,KAAQ,iBAAiB,CAClE,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,OAASC,QAAQ,KAAQ,eAAe,CAExC,MAAO,MAAM,CAAAC,mBAAmB,CAAIC,eAAe,EAAK,KAAO,CAAAC,QAAQ,EAAK,CACxEJ,SAAS,CAACK,GAAG,CAAC,gCAAgCF,eAAe,EAAE,CAAC,CAC3DG,IAAI,CAAEC,QAAQ,EAAK,CAChBH,QAAQ,CAAC,CAAEI,IAAI,CAAET,qBAAqB,CAACU,aAAa,CAAEC,OAAO,CAAEH,QAAQ,CAACI,IAAI,CAACA,IAAK,CAAC,CAAC,CACxF,CAAC,CAAC,CACDC,KAAK,CAACC,IAAA,EAAkB,IAAjB,CAAEN,QAAS,CAAC,CAAAM,IAAA,CAChBT,QAAQ,CAACH,QAAQ,CACb,CAAEa,IAAI,CAAEP,QAAQ,CAACI,IAAI,CAACI,OAAO,CAAEP,IAAI,CAAEV,SAAS,CAACkB,KAAM,CAAC,CAAC,CAAC,CAChE,CAAC,CAAC,CACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}