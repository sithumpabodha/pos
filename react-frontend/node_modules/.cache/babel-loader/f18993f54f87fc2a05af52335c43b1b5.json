{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import moment from\"moment\";import ReactDataTable from\"../../../shared/table/ReactDataTable\";import{currencySymbolHandling,getFormattedMessage}from\"../../../shared/sharedMethod\";import{fetchFrontSetting}from\"../../../store/action/frontSettingAction\";import{fetchExpenses}from\"../../../store/action/expenseAction\";import{expenseExcelAction}from\"../../../store/action/expenseExcelAction\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ExpensesTab=props=>{const{isLoading,totalRecord,fetchExpenses,expenses,expenseExcelAction,frontSetting,fetchFrontSetting,warehouseValue,allConfigData}=props;const currencySymbol=frontSetting&&frontSetting.value&&frontSetting.value.currency_symbol;const[isWarehouseValue,setIsWarehouseValue]=useState(false);useEffect(()=>{fetchFrontSetting();},[]);useEffect(()=>{if(isWarehouseValue===true){expenseExcelAction(warehouseValue.value,setIsWarehouseValue);}},[isWarehouseValue]);const itemsValue=currencySymbol&&expenses.length>=0&&expenses.map(expense=>({date:moment(expense.attributes.date).format(\"YYYY-MM-DD\"),time:moment(expense.attributes.created_at).format(\"LT\"),reference_code:expense.attributes.reference_code,title:expense.attributes.title,warehouse_name:expense.attributes.warehouse_name,expense_category_name:expense.attributes.expense_category_name,amount:expense.attributes.amount,details:expense.attributes.details,currency:currencySymbol,id:expense.id}));const columns=[{name:getFormattedMessage(\"globally.react-table.column.created-date.label\"),selector:row=>row.date,sortField:\"created_at\",sortable:true,cell:row=>{return/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-light-primary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-1\",children:row.time}),/*#__PURE__*/_jsx(\"div\",{children:row.date})]});}},{name:getFormattedMessage(\"dashboard.recentSales.reference.label\"),sortField:\"reference_code\",sortable:true,cell:row=>{return/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-light-danger\",children:/*#__PURE__*/_jsx(\"span\",{children:row.reference_code})});}},{name:getFormattedMessage(\"expense.input.title.label\"),selector:row=>row.title,sortField:\"title\",sortable:false},{name:getFormattedMessage(\"warehouse.title\"),selector:row=>row.warehouse_name,sortField:\"warehouse_name\",sortable:false},{name:getFormattedMessage(\"expense-category.title\"),selector:row=>row.expense_category_name,sortField:\"expense_category_name\",sortable:false},{name:getFormattedMessage(\"expense.input.amount.label\"),selector:row=>currencySymbolHandling(allConfigData,row.currency,row.amount),sortField:\"amount\",sortable:true}];const onChange=filter=>{fetchExpenses(filter,true);};const onExcelClick=()=>{setIsWarehouseValue(true);};return/*#__PURE__*/_jsx(ReactDataTable,{columns:columns,items:itemsValue,isEXCEL:true,onChange:onChange,isLoading:isLoading,warehouseValue:warehouseValue,totalRows:totalRecord,onExcelClick:onExcelClick});};const mapStateToProps=state=>{const{isLoading,totalRecord,expenses,frontSetting}=state;return{isLoading,totalRecord,expenses,frontSetting};};export default connect(mapStateToProps,{fetchFrontSetting,fetchExpenses,expenseExcelAction})(ExpensesTab);","map":{"version":3,"names":["React","useEffect","useState","connect","moment","ReactDataTable","currencySymbolHandling","getFormattedMessage","fetchFrontSetting","fetchExpenses","expenseExcelAction","jsx","_jsx","jsxs","_jsxs","ExpensesTab","props","isLoading","totalRecord","expenses","frontSetting","warehouseValue","allConfigData","currencySymbol","value","currency_symbol","isWarehouseValue","setIsWarehouseValue","itemsValue","length","map","expense","date","attributes","format","time","created_at","reference_code","title","warehouse_name","expense_category_name","amount","details","currency","id","columns","name","selector","row","sortField","sortable","cell","className","children","onChange","filter","onExcelClick","items","isEXCEL","totalRows","mapStateToProps","state"],"sources":["C:/Users/Sithu/Music/react-frontend/src/components/report/warehouseReport/ExpensesTab.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport ReactDataTable from \"../../../shared/table/ReactDataTable\";\nimport {\n    currencySymbolHandling,\n    getFormattedMessage,\n} from \"../../../shared/sharedMethod\";\nimport { fetchFrontSetting } from \"../../../store/action/frontSettingAction\";\nimport { fetchExpenses } from \"../../../store/action/expenseAction\";\nimport { expenseExcelAction } from \"../../../store/action/expenseExcelAction\";\n\nconst ExpensesTab = (props) => {\n    const {\n        isLoading,\n        totalRecord,\n        fetchExpenses,\n        expenses,\n        expenseExcelAction,\n        frontSetting,\n        fetchFrontSetting,\n        warehouseValue,\n        allConfigData,\n    } = props;\n    const currencySymbol =\n        frontSetting &&\n        frontSetting.value &&\n        frontSetting.value.currency_symbol;\n    const [isWarehouseValue, setIsWarehouseValue] = useState(false);\n\n    useEffect(() => {\n        fetchFrontSetting();\n    }, []);\n\n    useEffect(() => {\n        if (isWarehouseValue === true) {\n            expenseExcelAction(warehouseValue.value, setIsWarehouseValue);\n        }\n    }, [isWarehouseValue]);\n\n    const itemsValue =\n        currencySymbol &&\n        expenses.length >= 0 &&\n        expenses.map((expense) => ({\n            date: moment(expense.attributes.date).format(\"YYYY-MM-DD\"),\n            time: moment(expense.attributes.created_at).format(\"LT\"),\n            reference_code: expense.attributes.reference_code,\n            title: expense.attributes.title,\n            warehouse_name: expense.attributes.warehouse_name,\n            expense_category_name: expense.attributes.expense_category_name,\n            amount: expense.attributes.amount,\n            details: expense.attributes.details,\n            currency: currencySymbol,\n            id: expense.id,\n        }));\n\n    const columns = [\n        {\n            name: getFormattedMessage(\n                \"globally.react-table.column.created-date.label\"\n            ),\n            selector: (row) => row.date,\n            sortField: \"created_at\",\n            sortable: true,\n            cell: (row) => {\n                return (\n                    <span className=\"badge bg-light-primary\">\n                        <div className=\"mb-1\">{row.time}</div>\n                        <div>{row.date}</div>\n                    </span>\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"dashboard.recentSales.reference.label\"),\n            sortField: \"reference_code\",\n            sortable: true,\n            cell: (row) => {\n                return (\n                    <span className=\"badge bg-light-danger\">\n                        <span>{row.reference_code}</span>\n                    </span>\n                );\n            },\n        },\n        {\n            name: getFormattedMessage(\"expense.input.title.label\"),\n            selector: (row) => row.title,\n            sortField: \"title\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"warehouse.title\"),\n            selector: (row) => row.warehouse_name,\n            sortField: \"warehouse_name\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"expense-category.title\"),\n            selector: (row) => row.expense_category_name,\n            sortField: \"expense_category_name\",\n            sortable: false,\n        },\n        {\n            name: getFormattedMessage(\"expense.input.amount.label\"),\n            selector: (row) =>\n                currencySymbolHandling(allConfigData, row.currency, row.amount),\n            sortField: \"amount\",\n            sortable: true,\n        },\n    ];\n\n    const onChange = (filter) => {\n        fetchExpenses(filter, true);\n    };\n\n    const onExcelClick = () => {\n        setIsWarehouseValue(true);\n    };\n\n    return (\n        <ReactDataTable\n            columns={columns}\n            items={itemsValue}\n            isEXCEL\n            onChange={onChange}\n            isLoading={isLoading}\n            warehouseValue={warehouseValue}\n            totalRows={totalRecord}\n            onExcelClick={onExcelClick}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    const { isLoading, totalRecord, expenses, frontSetting } = state;\n    return { isLoading, totalRecord, expenses, frontSetting };\n};\n\nexport default connect(mapStateToProps, {\n    fetchFrontSetting,\n    fetchExpenses,\n    expenseExcelAction,\n})(ExpensesTab);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}